[
  {
    "codeTitle": "Using D3.js with Local UMD Bundle",
    "codeDescription": "This snippet shows how to use D3.js with a locally stored UMD bundle. It loads the D3 library from a local file, creates a basic chart with axes, and appends it to the page.",
    "codeLanguage": "html",
    "codeTokens": 330,
    "codeId": "https://github.com/d3/d3/blob/main/docs/getting-started.md#2025-04-11_snippet_3",
    "pageTitle": "Getting Started with D3.js",
    "codeList": [
      {
        "language": "html",
        "code": "<!DOCTYPE html>\n<div id=\"container\"></div>\n<script src=\"d3.js\"></script>\n<script type=\"module\">\n\n// Declare the chart dimensions and margins.\nconst width = 640;\nconst height = 400;\nconst marginTop = 20;\nconst marginRight = 20;\nconst marginBottom = 30;\nconst marginLeft = 40;\n\n// Declare the x (horizontal position) scale.\nconst x = d3.scaleUtc()\n    .domain([new Date(\"2023-01-01\"), new Date(\"2024-01-01\")])\n    .range([marginLeft, width - marginRight]);\n\n// Declare the y (vertical position) scale.\nconst y = d3.scaleLinear()\n    .domain([0, 100])\n    .range([height - marginBottom, marginTop]);\n\n// Create the SVG container.\nconst svg = d3.create(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\n// Add the x-axis.\nsvg.append(\"g\")\n    .attr(\"transform\", `translate(0,${height - marginBottom})`)\n    .call(d3.axisBottom(x));\n\n// Add the y-axis.\nsvg.append(\"g\")\n    .attr(\"transform\", `translate(${marginLeft},0)`)\n    .call(d3.axisLeft(y));\n\n// Append the SVG element.\ncontainer.append(svg.node());\n\n</script>"
      }
    ],
    "relevance": 0.987
  },
  {
    "codeTitle": "Removing Exit Selection in D3.js",
    "codeDescription": "Demonstrates removing DOM elements that no longer have corresponding data using exit() selection.",
    "codeLanguage": "javascript",
    "codeTokens": 34,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/joining.md#2025-04-11_snippet_9",
    "pageTitle": "D3.js Data Joining Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "div.exit().remove();"
      }
    ],
    "relevance": 0.987
  },
  {
    "codeTitle": "Initializing Vue Components and Importing Dependencies for D3 Visualization",
    "codeDescription": "Sets up Vue components with necessary imports for D3 and Observable Plot. Imports functionality from various libraries and defines local components for rendering visualizations.",
    "codeLanguage": "javascript",
    "codeTokens": 306,
    "codeId": "https://github.com/d3/d3/blob/main/docs/what-is-d3.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Introduction and Overview",
    "codeList": [
      {
        "language": "javascript",
        "code": "<script setup>\n\nimport * as Plot from \"@observablehq/plot\";\nimport * as d3 from \"d3\";\nimport {useData} from \"vitepress\";\nimport {computed} from \"vue\";\nimport LogoDiagram from \"./components/LogoDiagram.vue\";\nimport PlotRender from \"./components/PlotRender.js\";\n\nconst {site: {value: {themeConfig: {sidebar}}}} = useData();\n\nconst paths = computed(() => {\n  const paths = [];\n  (function visit(node, path) {\n    paths.push({path, link: node.link && `.${node.link}`});\n    if (node.items) {\n      for (const item of node.items) {\n        visit(item, (path === \"/\" ? path : path + \"/\") + item.text);\n      }\n    }\n  })({items: sidebar}, \"/D3\");\n  return paths;\n});\n\n// https://github.com/observablehq/plot/issues/1703\nfunction computeTreeWidth(paths) {\n  const root = d3.tree().nodeSize([1, 1])(d3.stratify().path((d) => d.path)(paths));\n  const [x1, x2] = d3.extent(root, (d) => d.x);\n  return x2 - x1;\n}\n\n</script>"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "Loading and Parsing CSV Files with d3.csv",
    "codeDescription": "Shows how to load and parse a CSV file using d3.csv(). This method fetches a CSV file and automatically parses it into an array of objects, with each object representing a row in the CSV.",
    "codeLanguage": "javascript",
    "codeTokens": 74,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-fetch.md#2025-04-11_snippet_1",
    "pageTitle": "D3-Fetch Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const data = await d3.csv(\"hello-world.csv\"); // [{\"Hello\": \"world\"}, …]"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "Creating HTML Table from Matrix using D3.js Data Join",
    "codeDescription": "Demonstrates how to create an HTML table by binding a 2D array of numbers using nested data joins with D3.js selection methods.",
    "codeLanguage": "javascript",
    "codeTokens": 173,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/joining.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Data Joining Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const matrix = [\n  [11975,  5871, 8916, 2868],\n  [ 1951, 10048, 2060, 6171],\n  [ 8010, 16145, 8090, 8045],\n  [ 1013,   990,  940, 6907]\n];\n\nd3.select(\"body\")\n  .append(\"table\")\n  .selectAll(\"tr\")\n  .data(matrix)\n  .join(\"tr\")\n  .selectAll(\"td\")\n  .data(d => d)\n  .join(\"td\")\n    .text(d => d);"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "Using D3.js with UMD Bundle via CDN",
    "codeDescription": "This snippet demonstrates how to use D3.js via a UMD bundle loaded from a CDN. It creates a basic chart with x and y axes using the global D3 object and appends it to the DOM.",
    "codeLanguage": "html",
    "codeTokens": 337,
    "codeId": "https://github.com/d3/d3/blob/main/docs/getting-started.md#2025-04-11_snippet_2",
    "pageTitle": "Getting Started with D3.js",
    "codeList": [
      {
        "language": "html",
        "code": "<!DOCTYPE html>\n<div id=\"container\"></div>\n<script src=\"https://cdn.jsdelivr.net/npm/d3@7\"></script>\n<script type=\"module\">\n\n// Declare the chart dimensions and margins.\nconst width = 640;\nconst height = 400;\nconst marginTop = 20;\nconst marginRight = 20;\nconst marginBottom = 30;\nconst marginLeft = 40;\n\n// Declare the x (horizontal position) scale.\nconst x = d3.scaleUtc()\n    .domain([new Date(\"2023-01-01\"), new Date(\"2024-01-01\")])\n    .range([marginLeft, width - marginRight]);\n\n// Declare the y (vertical position) scale.\nconst y = d3.scaleLinear()\n    .domain([0, 100])\n    .range([height - marginBottom, marginTop]);\n\n// Create the SVG container.\nconst svg = d3.create(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\n// Add the x-axis.\nsvg.append(\"g\")\n    .attr(\"transform\", `translate(0,${height - marginBottom})`)\n    .call(d3.axisBottom(x));\n\n// Add the y-axis.\nsvg.append(\"g\")\n    .attr(\"transform\", `translate(${marginLeft},0)`)\n    .call(d3.axisLeft(y));\n\n// Append the SVG element.\ncontainer.append(svg.node());\n\n</script>"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "Using D3.js with ES Modules in HTML via CDN",
    "codeDescription": "This snippet shows how to use D3.js with ES modules in vanilla HTML via a CDN. It imports D3, creates chart dimensions and scales, builds an SVG chart with axes, and appends it to the DOM.",
    "codeLanguage": "html",
    "codeTokens": 344,
    "codeId": "https://github.com/d3/d3/blob/main/docs/getting-started.md#2025-04-11_snippet_1",
    "pageTitle": "Getting Started with D3.js",
    "codeList": [
      {
        "language": "html",
        "code": "<!DOCTYPE html>\n<div id=\"container\"></div>\n<script type=\"module\">\n\nimport * as d3 from \"https://cdn.jsdelivr.net/npm/d3@7/+esm\";\n\n// Declare the chart dimensions and margins.\nconst width = 640;\nconst height = 400;\nconst marginTop = 20;\nconst marginRight = 20;\nconst marginBottom = 30;\nconst marginLeft = 40;\n\n// Declare the x (horizontal position) scale.\nconst x = d3.scaleUtc()\n    .domain([new Date(\"2023-01-01\"), new Date(\"2024-01-01\")])\n    .range([marginLeft, width - marginRight]);\n\n// Declare the y (vertical position) scale.\nconst y = d3.scaleLinear()\n    .domain([0, 100])\n    .range([height - marginBottom, marginTop]);\n\n// Create the SVG container.\nconst svg = d3.create(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\n// Add the x-axis.\nsvg.append(\"g\")\n    .attr(\"transform\", `translate(0,${height - marginBottom})`)\n    .call(d3.axisBottom(x));\n\n// Add the y-axis.\nsvg.append(\"g\")\n    .attr(\"transform\", `translate(${marginLeft},0)`)\n    .call(d3.axisLeft(y));\n\n// Append the SVG element.\ncontainer.append(svg.node());\n\n</script>"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "Defining a D3 Line Generator for Time Series Data",
    "codeDescription": "Creates a line generator that maps date and value data to x and y coordinates using scale functions. This demonstrates how to configure a D3 line generator with accessors for data mapping.",
    "codeLanguage": "javascript",
    "codeTokens": 77,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape.md#2025-04-11_snippet_0",
    "pageTitle": "D3-Shape Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const line = d3.line()\n    .x((d) => x(d.date))\n    .y((d) => y(d.value));"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "Creating Synchronized Transitions Across Multiple Selections in D3.js",
    "codeDescription": "Demonstrates how to create a synchronized transition across multiple element selections using a shared transition instance. The example shows applying different fill colors to apple and orange elements over 750ms with linear easing.",
    "codeLanguage": "javascript",
    "codeTokens": 108,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-transition/selecting.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Transition Selection Methods Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const t = d3.transition()\n    .duration(750)\n    .ease(d3.easeLinear);\n\nd3.selectAll(\".apple\").transition(t)\n    .style(\"fill\", \"red\");\n\nd3.selectAll(\".orange\").transition(t)\n    .style(\"fill\", \"orange\");"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "General Update Pattern in D3.js v4.0",
    "codeDescription": "The updated general update pattern for D3.js version 4.0, using the new merge() method to combine enter and update selections after data joining.",
    "codeLanguage": "javascript",
    "codeTokens": 112,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_49",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "var circle = svg.selectAll(\"circle\").data(data) // UPDATE\n    .style(\"fill\", \"blue\");\n\ncircle.exit().remove(); // EXIT\n\ncircle.enter().append(\"circle\") // ENTER\n    .style(\"fill\", \"green\")\n  .merge(circle) // ENTER + UPDATE\n    .style(\"stroke\", \"black\");"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "Merging Selections in D3.js",
    "codeDescription": "Example of merging odd and even selections using select() and merge() methods.",
    "codeLanguage": "javascript",
    "codeTokens": 80,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/joining.md#2025-04-11_snippet_13",
    "pageTitle": "D3.js Data Joining Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const odd = selection.select(function(d, i) { return i & 1 ? this : null; ));\nconst even = selection.select(function(d, i) { return i & 1 ? null : this; ));\nconst merged = odd.merge(even);"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "Preparing Data for D3 Treemap Layout in JavaScript",
    "codeDescription": "Shows the process of preparing hierarchical data for a treemap layout, including summing values and sorting nodes.",
    "codeLanguage": "JavaScript",
    "codeTokens": 125,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/hierarchy.md#2025-04-11_snippet_5",
    "pageTitle": "D3.js Hierarchy Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "// Construct the treemap layout.\nconst treemap = d3.treemap();\ntreemap.size([width, height]);\ntreemap.padding(2);\n\n// Sum and sort the data.\nroot.sum((d) => d.value);\nroot.sort((a, b) => b.height - a.height || b.value - a.value);\n\n// Compute the treemap layout.\ntreemap(root);\n\n// Retrieve all descendant nodes.\nconst nodes = root.descendants();"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "Chaining D3 Selection Methods",
    "codeDescription": "Example demonstrating D3's method chaining pattern for creating and modifying SVG elements with proper indentation to show context changes.",
    "codeLanguage": "javascript",
    "codeTokens": 108,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/selecting.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js DOM Element Selection Guide",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.select(\"body\")\n  .append(\"svg\")\n    .attr(\"width\", 960)\n    .attr(\"height\", 500)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(20,20)\")\n  .append(\"rect\")\n    .attr(\"width\", 920)\n    .attr(\"height\", 460);"
      }
    ],
    "relevance": 0.983
  },
  {
    "codeTitle": "Setting Text Content with D3 Selection",
    "codeDescription": "Sets the text content of all selected elements to \"Hello, world!\", replacing any existing child elements. The text method provides a safe way to update content without HTML parsing.",
    "codeLanguage": "javascript",
    "codeTokens": 53,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/modifying.md#2025-04-11_snippet_12",
    "pageTitle": "D3 Selection Element Modification Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection.text(\"Hello, world!\")"
      }
    ],
    "relevance": 0.982
  },
  {
    "codeTitle": "Basic D3.js Join Pattern",
    "codeDescription": "Simple example of using selection.join() to handle enter, update, and exit states when binding data to SVG circles.",
    "codeLanguage": "javascript",
    "codeTokens": 70,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/joining.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Data Joining Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "svg.selectAll(\"circle\")\n  .data(data)\n  .join(\"circle\")\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke\", \"black\");"
      }
    ],
    "relevance": 0.981
  },
  {
    "codeTitle": "General Update Pattern in D3.js v3.x",
    "codeDescription": "Example of the general update pattern for data joins in D3.js version 3.x, which modifies the update selection in-place when appending entering elements.",
    "codeLanguage": "javascript",
    "codeTokens": 114,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_48",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "var circle = svg.selectAll(\"circle\").data(data) // UPDATE\n    .style(\"fill\", \"blue\");\n\ncircle.exit().remove(); // EXIT\n\ncircle.enter().append(\"circle\") // ENTER; modifies UPDATE! 🌶\n    .style(\"fill\", \"green\");\n\ncircle // ENTER + UPDATE\n    .style(\"stroke\", \"black\");"
      }
    ],
    "relevance": 0.981
  },
  {
    "codeTitle": "Creating a Basic Chart with D3.js in Observable",
    "codeDescription": "This snippet demonstrates how to create a basic SVG chart with D3.js in an Observable notebook. It sets up chart dimensions, defines x and y scales, creates an SVG container, and adds x and y axes.",
    "codeLanguage": "javascript",
    "codeTokens": 322,
    "codeId": "https://github.com/d3/d3/blob/main/docs/getting-started.md#2025-04-11_snippet_0",
    "pageTitle": "Getting Started with D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "{\n  // Declare the chart dimensions and margins.\n  const width = 640;\n  const height = 400;\n  const marginTop = 20;\n  const marginRight = 20;\n  const marginBottom = 30;\n  const marginLeft = 40;\n\n  // Declare the x (horizontal position) scale.\n  const x = d3.scaleUtc()\n      .domain([new Date(\"2023-01-01\"), new Date(\"2024-01-01\")])\n      .range([marginLeft, width - marginRight]);\n\n  // Declare the y (vertical position) scale.\n  const y = d3.scaleLinear()\n      .domain([0, 100])\n      .range([height - marginBottom, marginTop]);\n\n  // Create the SVG container.\n  const svg = d3.create(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n  // Add the x-axis.\n  svg.append(\"g\")\n      .attr(\"transform\", `translate(0,${height - marginBottom})`)\n      .call(d3.axisBottom(x));\n\n  // Add the y-axis.\n  svg.append(\"g\")\n      .attr(\"transform\", `translate(${marginLeft},0)`)\n      .call(d3.axisLeft(y));\n\n  // Return the SVG element.\n  return svg.node();\n}"
      }
    ],
    "relevance": 0.98
  },
  {
    "codeTitle": "Pre-order Tree Traversal in D3.js",
    "codeDescription": "Method that traverses a node and its descendants in pre-order, executing a callback function for each node. The function receives the current descendant, traversal index, and source node as parameters. Ensures ancestors are visited before descendants.",
    "codeLanguage": "javascript",
    "codeTokens": 65,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/hierarchy.md#2025-04-11_snippet_11",
    "pageTitle": "D3.js Hierarchy Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "node.eachBefore(function, that)"
      }
    ],
    "relevance": 0.98
  },
  {
    "codeTitle": "Resulting HTML Structure",
    "codeDescription": "Shows the final HTML structure after data binding operations are complete.",
    "codeLanguage": "html",
    "codeTokens": 62,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/joining.md#2025-04-11_snippet_10",
    "pageTitle": "D3.js Data Joining Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<div>1</div>\n<div>2</div>\n<div>4</div>\n<div>8</div>\n<div>16</div>\n<div>32</div>"
      }
    ],
    "relevance": 0.979
  },
  {
    "codeTitle": "Getting Pointer Coordinates in D3.js",
    "codeDescription": "Retrieves the x and y coordinates of a pointer event relative to its target. Used for interaction with visualization elements.",
    "codeLanguage": "javascript",
    "codeTokens": 46,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/events.md#2025-04-11_snippet_2",
    "pageTitle": "Handling Events in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "const [x, y] = d3.pointer(event);"
      }
    ],
    "relevance": 0.978
  },
  {
    "codeTitle": "Entering New Data Elements in D3.js",
    "codeDescription": "Shows how to append new DOM elements for entering data using the enter() selection.",
    "codeLanguage": "javascript",
    "codeTokens": 41,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/joining.md#2025-04-11_snippet_8",
    "pageTitle": "D3.js Data Joining Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "div.enter().append(\"div\").text(d => d);"
      }
    ],
    "relevance": 0.976
  },
  {
    "codeTitle": "Creating a Line Plot with D3 and React (Declarative Approach)",
    "codeDescription": "This snippet demonstrates how to create a line plot using D3 modules in React without direct DOM manipulation. It uses d3-scale for scaling and d3-line for path generation.",
    "codeLanguage": "jsx",
    "codeTokens": 265,
    "codeId": "https://github.com/d3/d3/blob/main/docs/getting-started.md#2025-04-11_snippet_7",
    "pageTitle": "Getting Started with D3.js",
    "codeList": [
      {
        "language": "jsx",
        "code": "import * as d3 from \"d3\";\n\nexport default function LinePlot({\n  data,\n  width = 640,\n  height = 400,\n  marginTop = 20,\n  marginRight = 20,\n  marginBottom = 20,\n  marginLeft = 20\n}) {\n  const x = d3.scaleLinear([0, data.length - 1], [marginLeft, width - marginRight]);\n  const y = d3.scaleLinear(d3.extent(data), [height - marginBottom, marginTop]);\n  const line = d3.line((d, i) => x(i), y);\n  return (\n    <svg width={width} height={height}>\n      <path fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\" d={line(data)} />\n      <g fill=\"white\" stroke=\"currentColor\" strokeWidth=\"1.5\">\n        {data.map((d, i) => (<circle key={i} cx={x(i)} cy={y(d)} r=\"2.5\" />))}\n      </g>\n    </svg>\n  );\n}"
      }
    ],
    "relevance": 0.975
  },
  {
    "codeTitle": "Basic Enter Selection Example in D3.js",
    "codeDescription": "Demonstrates using enter() selection to create new DOM elements from data where none existed before.",
    "codeLanguage": "javascript",
    "codeTokens": 82,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/joining.md#2025-04-11_snippet_6",
    "pageTitle": "D3.js Data Joining Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const div = d3.select(\"body\")\n  .selectAll(\"div\")\n  .data([4, 8, 15, 16, 23, 42])\n  .enter().append(\"div\")\n    .text(d => d);"
      }
    ],
    "relevance": 0.975
  },
  {
    "codeTitle": "Creating HCL Color in D3 JavaScript",
    "codeDescription": "Constructs a new HCL (CIELCh<sub>ab</sub>) color using d3.hcl() function. The example shows creating a yellow color in HCL space.",
    "codeLanguage": "javascript",
    "codeTokens": 95,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-color.md#2025-04-11_snippet_22",
    "pageTitle": "D3 Color Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.hcl(\"yellow\") // {h: 99.57458688693687, c: 94.70776566727464, l: 97.60712516622824, opacity: 1}"
      }
    ],
    "relevance": 0.975
  },
  {
    "codeTitle": "Initializing a Brush in D3.js",
    "codeDescription": "Creates a brush and attaches it to an SVG group element using selection.call(). The brush has an event listener for the 'brush' event that calls a function named 'brushed' when the brush selection changes.",
    "codeLanguage": "javascript",
    "codeTokens": 81,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-brush.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Brush Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "svg.append(\"g\")\n    .attr(\"class\", \"brush\")\n    .call(d3.brush().on(\"brush\", brushed));"
      }
    ],
    "relevance": 0.975
  },
  {
    "codeTitle": "Migrating from rangeBands to Band Scales in D3.js v4",
    "codeDescription": "Comparison between D3.js v3.x ordinal scales with rangeBands and the new band scales in v4.0, which provide more flexible control over band layout.",
    "codeLanguage": "javascript",
    "codeTokens": 76,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_45",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "var x = d3.scale.ordinal()\n    .domain([\"a\", \"b\", \"c\"])\n    .rangeBands([0, width]);"
      },
      {
        "language": "javascript",
        "code": "var x = d3.scaleBand()\n    .domain([\"a\", \"b\", \"c\"])\n    .range([0, width]);"
      }
    ],
    "relevance": 0.975
  },
  {
    "codeTitle": "Getting an Array of Elements from a D3 Selection",
    "codeDescription": "Demonstrates using the .nodes() method to get all (non-null) elements in a D3 selection as a standard JavaScript array. This allows using native array methods on the selection elements.",
    "codeLanguage": "javascript",
    "codeTokens": 68,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/control-flow.md#2025-04-11_snippet_5",
    "pageTitle": "D3 Selection Control Flow Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.selectAll(\"p\").nodes() // [p, p, p, …]"
      }
    ],
    "relevance": 0.975
  },
  {
    "codeTitle": "Custom Curve Interface Implementation in D3.js",
    "codeDescription": "Interface specification for implementing custom curves in D3.js. Includes methods for handling area segments, line segments, and individual points. Used for creating custom curve implementations when built-in curves are insufficient.",
    "codeLanguage": "javascript",
    "codeTokens": 138,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/curve.md#2025-04-11_snippet_5",
    "pageTitle": "D3.js Curve Types and Interpolation Methods",
    "codeList": [
      {
        "language": "typescript",
        "code": "interface Curve {\n  areaStart(): void;  // Indicates start of new area segment\n  areaEnd(): void;    // Indicates end of current area segment\n  lineStart(): void;  // Indicates start of new line segment\n  lineEnd(): void;    // Indicates end of current line segment\n  point(x: number, y: number): void;  // Adds point to current line segment\n}"
      }
    ],
    "relevance": 0.972
  },
  {
    "codeTitle": "Updating Data Selection in D3.js",
    "codeDescription": "Demonstrates binding new data array to existing DOM elements using D3's data() method with a key function.",
    "codeLanguage": "javascript",
    "codeTokens": 61,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/joining.md#2025-04-11_snippet_7",
    "pageTitle": "D3.js Data Joining Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "div = div.data([1, 2, 4, 8, 16, 32], d => d);"
      }
    ],
    "relevance": 0.972
  },
  {
    "codeTitle": "Adding Click Event Listener in D3.js",
    "codeDescription": "Adds a click event listener to all paragraph elements on the page. When clicked, the event object is logged to the console.",
    "codeLanguage": "javascript",
    "codeTokens": 55,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/events.md#2025-04-11_snippet_0",
    "pageTitle": "Handling Events in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.selectAll(\"p\").on(\"click\", (event) => console.log(event))"
      }
    ],
    "relevance": 0.972
  },
  {
    "codeTitle": "Applying Zoom Behavior to a Selection in D3",
    "codeDescription": "Applies a zoom behavior to a D3 selection with a callback function that's triggered on zoom events. This pattern is commonly used to initialize zoom functionality on elements.",
    "codeLanguage": "javascript",
    "codeTokens": 56,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-zoom.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Zoom Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection.call(d3.zoom().on(\"zoom\", zoomed));"
      }
    ],
    "relevance": 0.972
  },
  {
    "codeTitle": "Selecting Multiple Elements with D3 SelectorAll",
    "codeDescription": "Demonstrates two equivalent ways to select all descendant div elements using D3's selectAll method.",
    "codeLanguage": "javascript",
    "codeTokens": 40,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/selecting.md#2025-04-11_snippet_8",
    "pageTitle": "D3.js DOM Element Selection Guide",
    "codeList": [
      {
        "language": "javascript",
        "code": "const div = selection.selectAll(\"div\");"
      },
      {
        "language": "javascript",
        "code": "const div = selection.selectAll(d3.selectorAll(\"div\"));"
      }
    ],
    "relevance": 0.97
  },
  {
    "codeTitle": "Creating a Line Plot with D3 and React (Imperative Approach)",
    "codeDescription": "This snippet shows how to create a line plot using D3 modules in React, including DOM-manipulating modules like d3-axis. It uses useRef and useEffect hooks to interact with the DOM.",
    "codeLanguage": "jsx",
    "codeTokens": 377,
    "codeId": "https://github.com/d3/d3/blob/main/docs/getting-started.md#2025-04-11_snippet_8",
    "pageTitle": "Getting Started with D3.js",
    "codeList": [
      {
        "language": "jsx",
        "code": "import * as d3 from \"d3\";\nimport {useRef, useEffect} from \"react\";\n\nexport default function LinePlot({\n  data,\n  width = 640,\n  height = 400,\n  marginTop = 20,\n  marginRight = 20,\n  marginBottom = 30,\n  marginLeft = 40\n}) {\n  const gx = useRef();\n  const gy = useRef();\n  const x = d3.scaleLinear([0, data.length - 1], [marginLeft, width - marginRight]);\n  const y = d3.scaleLinear(d3.extent(data), [height - marginBottom, marginTop]);\n  const line = d3.line((d, i) => x(i), y);\n  useEffect(() => void d3.select(gx.current).call(d3.axisBottom(x)), [gx, x]);\n  useEffect(() => void d3.select(gy.current).call(d3.axisLeft(y)), [gy, y]);\n  return (\n    <svg width={width} height={height}>\n      <g ref={gx} transform={`translate(0,${height - marginBottom})`} />\n      <g ref={gy} transform={`translate(${marginLeft},0)`} />\n      <path fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\" d={line(data)} />\n      <g fill=\"white\" stroke=\"currentColor\" strokeWidth=\"1.5\">\n        {data.map((d, i) => (<circle key={i} cx={x(i)} cy={y(d)} r=\"2.5\" />))}\n      </g>\n    </svg>\n  );\n}"
      }
    ],
    "relevance": 0.97
  },
  {
    "codeTitle": "D3 Selection Filtering Examples",
    "codeDescription": "Examples of filtering D3 selections using both selector strings and functions.",
    "codeLanguage": "javascript",
    "codeTokens": 43,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/selecting.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js DOM Element Selection Guide",
    "codeList": [
      {
        "language": "javascript",
        "code": "const even = d3.selectAll(\"tr\").filter(\":nth-child(even)\");"
      },
      {
        "language": "javascript",
        "code": "const even = d3.selectAll(\"tr:nth-child(even)\");"
      },
      {
        "language": "javascript",
        "code": "const even = d3.selectAll(\"tr\").filter((d, i) => i & 1);"
      },
      {
        "language": "javascript",
        "code": "const even = d3.selectAll(\"tr\").select(function(d, i) { return i & 1 ? this : null; });"
      }
    ],
    "relevance": 0.97
  },
  {
    "codeTitle": "Loading Text Files with d3.text",
    "codeDescription": "Demonstrates fetching plain text content using d3.text(). This method returns a promise that resolves to the raw text content of the file at the specified URL.",
    "codeLanguage": "javascript",
    "codeTokens": 54,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-fetch.md#2025-04-11_snippet_12",
    "pageTitle": "D3-Fetch Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const text = await d3.text(\"example.txt\");"
      }
    ],
    "relevance": 0.97
  },
  {
    "codeTitle": "Basic Element Modification with D3 Selection Method Chaining",
    "codeDescription": "Sets the class attribute to \"graf\" and the color style to \"red\" on all paragraph elements in the document using method chaining for concise multiple operations.",
    "codeLanguage": "javascript",
    "codeTokens": 67,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/modifying.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Selection Element Modification Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.selectAll(\"p\")\n    .attr(\"class\", \"graf\")\n    .style(\"color\", \"red\");"
      }
    ],
    "relevance": 0.97
  },
  {
    "codeTitle": "Grouping Data with d3.group() in JavaScript",
    "codeDescription": "Creates an InternMap from key to array of values. This example demonstrates grouping a penguins dataset by species field to create a map of species to arrays of penguins.",
    "codeLanguage": "javascript",
    "codeTokens": 64,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/group.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Data Grouping Methods Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const species = d3.group(penguins, (d) => d.species);"
      }
    ],
    "relevance": 0.97
  },
  {
    "codeTitle": "Calculating Mean with D3.js",
    "codeDescription": "Shows how to use d3.mean() to compute the arithmetic mean of numbers, demonstrating both direct array input and accessor function usage.",
    "codeLanguage": "javascript",
    "codeTokens": 62,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/summarize.md#2025-04-11_snippet_12",
    "pageTitle": "D3.js Data Summarization Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.mean([1, 2, 2, 2, NaN, 3, null])"
      },
      {
        "language": "javascript",
        "code": "d3.mean(penguins, (d) => d.body_mass_g)"
      }
    ],
    "relevance": 0.97
  },
  {
    "codeTitle": "Implementing a Custom Force in D3 Force Simulation in JavaScript",
    "codeDescription": "Creates a custom force function that moves nodes toward the origin. The function applies a force proportional to each node's distance from the origin, scaled by the alpha parameter and a constant factor.",
    "codeLanguage": "javascript",
    "codeTokens": 116,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-force/simulation.md#2025-04-11_snippet_3",
    "pageTitle": "Force Simulations in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "function force(alpha) {\n  for (let i = 0, n = nodes.length, node, k = alpha * 0.1; i < n; ++i) {\n    node = nodes[i];\n    node.vx -= node.x * k;\n    node.vy -= node.y * k;\n  }\n}"
      }
    ],
    "relevance": 0.968
  },
  {
    "codeTitle": "Converting Tabular Data to Hierarchy using d3.stratify",
    "codeDescription": "Shows how to transform tabular data representing parent-child relationships into a hierarchical structure using D3's stratify operator. This sets up id and parentId accessors to identify nodes and their relationships.",
    "codeLanguage": "js",
    "codeTokens": 85,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/stratify.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Stratify Hierarchical Data Operator",
    "codeList": [
      {
        "language": "js",
        "code": "const root = d3.stratify()\n    .id((d) => d.name)\n    .parentId((d) => d.parent)\n  (table);"
      }
    ],
    "relevance": 0.968
  },
  {
    "codeTitle": "Applying Zoom Transform to HTML Elements via CSS",
    "codeDescription": "Example of applying a D3 zoom transform to HTML elements using CSS transform and transform-origin properties for proper scaling and translation.",
    "codeLanguage": "javascript",
    "codeTokens": 75,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-zoom.md#2025-04-11_snippet_15",
    "pageTitle": "D3 Zoom Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "div.style(\"transform\", \"translate(\" + transform.x + \"px,\" + transform.y + \"px) scale(\" + transform.k + \")\");\ndiv.style(\"transform-origin\", \"0 0\");"
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Computing Sum with D3.js",
    "codeDescription": "Demonstrates using d3.sum() to calculate the sum of numbers in an array, with examples of both direct values and accessor function usage. Handles NaN and null values by ignoring them.",
    "codeLanguage": "javascript",
    "codeTokens": 73,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/summarize.md#2025-04-11_snippet_11",
    "pageTitle": "D3.js Data Summarization Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.sum([1, 2, 2, 2, NaN, 3, null])"
      },
      {
        "language": "javascript",
        "code": "d3.sum(penguins, (d) => d.body_mass_g)"
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Creating a Custom Rainbow Color Interpolator with D3.js",
    "codeDescription": "Example showing how to create a custom HSL-based rainbow color interpolator using attrTween. This function returns an interpolator that generates HSL colors based on the transition progress.",
    "codeLanguage": "javascript",
    "codeTokens": 76,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-transition/modifying.md#2025-04-11_snippet_2",
    "pageTitle": "D3.js Element Modification with Transitions",
    "codeList": [
      {
        "language": "javascript",
        "code": "transition.attrTween(\"fill\", () => (t) => `hsl(${t * 360},100%,50%)`);"
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Setting Explicit Tick Values with D3.js axis.tickValues()",
    "codeDescription": "Demonstrates how to override the automatic tick generator by specifying explicit tick values for a D3.js axis. This example applies specific numeric values to the bottom axis of a visualization.",
    "codeLanguage": "javascript",
    "codeTokens": 79,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-axis.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js Axis Component Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const axis = d3.axisBottom(x).tickValues([1, 2, 3, 5, 8, 13, 21]);"
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Creating a Reusable Function with D3 Selection .call() Method",
    "codeDescription": "Demonstrates how to define a reusable function that can be applied to selections using the .call() method. This pattern allows for cleaner code organization and reuse of common selection manipulations.",
    "codeLanguage": "javascript",
    "codeTokens": 79,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/control-flow.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Selection Control Flow Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "function name(selection, first, last) {\n  selection\n      .attr(\"first-name\", first)\n      .attr(\"last-name\", last);\n}"
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Rendering Stacked Data with D3 and SVG",
    "codeDescription": "Shows how to use the stacked data generated by d3.stack() to create a visualization with SVG. This example creates rectangular elements for each data point in the stack, positioning them according to their stack values.",
    "codeLanguage": "javascript",
    "codeTokens": 161,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/stack.md#2025-04-11_snippet_3",
    "pageTitle": "D3 Stacks Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "svg.append(\"g\")\n  .selectAll(\"g\")\n  .data(series)\n  .join(\"g\")\n    .attr(\"fill\", d => color(d.key))\n  .selectAll(\"rect\")\n  .data(D => D)\n  .join(\"rect\")\n    .attr(\"x\", d => x(d.data[0]))\n    .attr(\"y\", d => y(d[1]))\n    .attr(\"height\", d => y(d[0]) - y(d[1]))\n    .attr(\"width\", x.bandwidth());"
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Creating and Using Date Formatters with D3",
    "codeDescription": "Demonstrates how to create a date formatter using d3.utcFormat with a format specifier and apply it to a Date object to generate a human-readable string representation.",
    "codeLanguage": "javascript",
    "codeTokens": 75,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-time-format.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Time Format Library Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const formatTime = d3.utcFormat(\"%B %d, %Y\");\nformatTime(new Date()); // \"May 31, 2023\""
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Loading CSV Data with d3.csv",
    "codeDescription": "Demonstrates loading a CSV file using d3.csv(), which is a convenience wrapper around d3.dsv with comma as the delimiter. Returns parsed data as an array of objects.",
    "codeLanguage": "javascript",
    "codeTokens": 59,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-fetch.md#2025-04-11_snippet_4",
    "pageTitle": "D3-Fetch Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const data = await d3.csv(\"example.csv\");"
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Inverting Values with D3 Linear Scale",
    "codeDescription": "Demonstrates how to use the invert() method to convert range values back to their corresponding domain values. Useful for user interactions like determining data values from mouse positions.",
    "codeLanguage": "javascript",
    "codeTokens": 83,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleLinear([10, 130], [0, 960]);\nx.invert(80); // 20\nx.invert(320); // 50"
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Adding CSS Classes to Elements with D3 Selection",
    "codeDescription": "Adds the CSS class \"foo\" to the selected elements by setting the value parameter to true. The classed method modifies the class attribute or classList property of elements.",
    "codeLanguage": "javascript",
    "codeTokens": 54,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/modifying.md#2025-04-11_snippet_4",
    "pageTitle": "D3 Selection Element Modification Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection.classed(\"foo\", true)"
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "D3 Element Selection Examples",
    "codeDescription": "Various examples of selecting DOM elements using D3's select() and selectAll() methods with different selector types.",
    "codeLanguage": "javascript",
    "codeTokens": 44,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/selecting.md#2025-04-11_snippet_2",
    "pageTitle": "D3.js DOM Element Selection Guide",
    "codeList": [
      {
        "language": "javascript",
        "code": "const svg = d3.select(\"#chart\");"
      },
      {
        "language": "javascript",
        "code": "const anchor = d3.select(\"a\");"
      },
      {
        "language": "javascript",
        "code": "d3.select(document.body).style(\"background\", \"red\");"
      },
      {
        "language": "javascript",
        "code": "d3.selectAll(\"p\").on(\"click\", (event) => d3.select(event.currentTarget).style(\"color\", \"red\"));"
      },
      {
        "language": "javascript",
        "code": "const p = d3.selectAll(\"p\");"
      },
      {
        "language": "javascript",
        "code": "d3.selectAll(document.links).style(\"color\", \"red\");"
      }
    ],
    "relevance": 0.962
  },
  {
    "codeTitle": "Constructing a D3 Line Generator",
    "codeDescription": "Creates a new line generator with explicit x and y accessors, which will be used to generate SVG path data from an array of data points.",
    "codeLanguage": "javascript",
    "codeTokens": 63,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/line.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Line Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const line = d3.line((d) => x(d.Date), (d) => y(d.Close));"
      }
    ],
    "relevance": 0.962
  },
  {
    "codeTitle": "Setting the Y Accessor for a D3 Line Generator",
    "codeDescription": "Configures a line generator by setting its y accessor function, which transforms each data point to determine its y-coordinate position.",
    "codeLanguage": "javascript",
    "codeTokens": 52,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/line.md#2025-04-11_snippet_6",
    "pageTitle": "D3.js Line Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const line = d3.line().y((d) => y(d.Close));"
      }
    ],
    "relevance": 0.962
  },
  {
    "codeTitle": "Using bisect() Function on an Array of Dates in JavaScript",
    "codeDescription": "Uses the bisect function (alias for bisectRight) to find an insertion point in a mapped array of dates. This example finds where January 2, 2014 would be inserted in an array of dates extracted from the aapl dataset.",
    "codeLanguage": "javascript",
    "codeTokens": 91,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/bisect.md#2025-04-11_snippet_5",
    "pageTitle": "D3.js Bisector Functions Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.bisect(aapl.map((d) => d.Date), new Date(\"2014-01-02\")) // 163"
      }
    ],
    "relevance": 0.962
  },
  {
    "codeTitle": "Applying a bin generator to data in D3",
    "codeDescription": "Demonstrates how to apply a bin generator to a dataset (penguins) to create bins of data points based on the culmen_length_mm property.",
    "codeLanguage": "javascript",
    "codeTokens": 63,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/bin.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Binning Data",
    "codeList": [
      {
        "language": "javascript",
        "code": "const bins = d3.bin().value((d) => d.culmen_length_mm)(penguins);"
      }
    ],
    "relevance": 0.96
  },
  {
    "codeTitle": "Creating a Linear Scale in D3.js",
    "codeDescription": "Shows how to create a linear scale in D3.js that maps values in the domain [0, 10] to range [0, 100].",
    "codeLanguage": "javascript",
    "codeTokens": 65,
    "codeId": "https://github.com/d3/d3/blob/main/docs/index.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Continuous Scale Classes",
    "codeList": [
      {
        "language": "javascript",
        "code": "var linear = d3.scaleLinear().domain([0, 10]).range([0, 100]);"
      }
    ],
    "relevance": 0.96
  },
  {
    "codeTitle": "Rendering Multiple Features as Separate Paths in D3",
    "codeDescription": "Demonstrates how to render multiple geographic features as separate SVG path elements using D3's data join pattern.",
    "codeLanguage": "javascript",
    "codeTokens": 57,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/path.md#2025-04-11_snippet_3",
    "pageTitle": "D3 Geographic Path Generation",
    "codeList": [
      {
        "language": "javascript",
        "code": "svg.selectAll()\n  .data(features)\n  .join(\"path\")\n    .attr(\"d\", d3.geoPath());"
      }
    ],
    "relevance": 0.96
  },
  {
    "codeTitle": "Creating a Force Simulation in D3.js",
    "codeDescription": "Demonstrates how to create a new force simulation with an array of nodes. The simulation starts automatically and can be controlled with various methods.",
    "codeLanguage": "javascript",
    "codeTokens": 49,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-force/simulation.md#2025-04-11_snippet_0",
    "pageTitle": "Force Simulations in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "const simulation = d3.forceSimulation(nodes);"
      }
    ],
    "relevance": 0.96
  },
  {
    "codeTitle": "Rendering Multiple Features as a FeatureCollection in D3",
    "codeDescription": "Illustrates how to combine multiple geographic features into a FeatureCollection and render them as a single SVG path.",
    "codeLanguage": "javascript",
    "codeTokens": 62,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/path.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Geographic Path Generation",
    "codeList": [
      {
        "language": "javascript",
        "code": "svg.append(\"path\")\n    .datum({type: \"FeatureCollection\", features: features})\n    .attr(\"d\", d3.geoPath());"
      }
    ],
    "relevance": 0.96
  },
  {
    "codeTitle": "Accessing Zoom Transform in Event Listener Context",
    "codeDescription": "Shows how to access the current zoom transform within an event listener context using the current element (this) as the node reference.",
    "codeLanguage": "javascript",
    "codeTokens": 45,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-zoom.md#2025-04-11_snippet_12",
    "pageTitle": "D3 Zoom Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "var transform = d3.zoomTransform(this);"
      }
    ],
    "relevance": 0.96
  },
  {
    "codeTitle": "Creating a Custom Bisector with a Comparator Function in JavaScript",
    "codeDescription": "Creates a bisector using a comparator function that compares the Date property of an element with a search value. This is equivalent to the accessor version but allows for more control over the comparison logic.",
    "codeLanguage": "javascript",
    "codeTokens": 71,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/bisect.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Bisector Functions Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const bisector = d3.bisector((d, x) => d.Date - x);"
      }
    ],
    "relevance": 0.96
  },
  {
    "codeTitle": "Explicit D3.js Join Pattern",
    "codeDescription": "Extended version of join() showing explicit enter, update, and exit selections with their default behaviors.",
    "codeLanguage": "javascript",
    "codeTokens": 85,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/joining.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js Data Joining Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "svg.selectAll(\"circle\")\n  .data(data)\n  .join(\n    enter => enter.append(\"circle\"),\n    update => update,\n    exit => exit.remove()\n  )\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke\", \"black\");"
      }
    ],
    "relevance": 0.958
  },
  {
    "codeTitle": "Applying a D3 Transition to Change Background Color in JavaScript",
    "codeDescription": "This snippet demonstrates how to create a D3 transition that smoothly changes the background color of the body element to red. It selects the body, initiates a transition, and then applies the style change.",
    "codeLanguage": "javascript",
    "codeTokens": 71,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-transition.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Transition Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.select(\"body\")\n  .transition()\n    .style(\"background-color\", \"red\");"
      }
    ],
    "relevance": 0.958
  },
  {
    "codeTitle": "Creating a Collide Force in D3",
    "codeDescription": "This snippet demonstrates how to create a new circle collide force with a specified radius accessor function.",
    "codeLanguage": "javascript",
    "codeTokens": 45,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-force/collide.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Collide Force Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const collide = d3.forceCollide((d) => d.r);"
      }
    ],
    "relevance": 0.958
  },
  {
    "codeTitle": "Computing Cumulative Sum with D3.js",
    "codeDescription": "Shows how to calculate running totals using d3.cumsum(), returning a Float64Array of cumulative sums. Demonstrates both direct array and accessor function usage.",
    "codeLanguage": "javascript",
    "codeTokens": 64,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/summarize.md#2025-04-11_snippet_15",
    "pageTitle": "D3.js Data Summarization Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.cumsum([1, 1, 2, 3, 5])"
      },
      {
        "language": "javascript",
        "code": "d3.cumsum(penguins, (d) => d.body_mass_g)"
      }
    ],
    "relevance": 0.958
  },
  {
    "codeTitle": "D3 Albers Projection Configuration",
    "codeDescription": "Configuration for D3's Albers projection specifically optimized for US map visualization with custom scale and translation.",
    "codeLanguage": "javascript",
    "codeTokens": 68,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/conic.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js Conic Map Projections Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.geoAlbers().scale(1300 / 975 * width * 0.8).translate([width / 2, height / 2])"
      }
    ],
    "relevance": 0.958
  },
  {
    "codeTitle": "Configuring Stack Offset with stackOffsetExpand in D3.js",
    "codeDescription": "Sets the stack offset using d3.stackOffsetExpand, which normalizes the values for each point such that the topline is always at 100%. Used for showing proportional contributions.",
    "codeLanguage": "javascript",
    "codeTokens": 61,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/stack.md#2025-04-11_snippet_15",
    "pageTitle": "D3 Stacks Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const stack = d3.stack().offset(d3.stackOffsetExpand);"
      }
    ],
    "relevance": 0.956
  },
  {
    "codeTitle": "Using d3.min to find minimum values in JavaScript",
    "codeDescription": "Returns the minimum value in the given iterable using natural order. Ignores undefined, null and NaN values. An optional accessor function can be used to transform values before comparison.",
    "codeLanguage": "javascript",
    "codeTokens": 76,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/summarize.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Data Summarization Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.min([3, 2, 1, 1, 6, 2, 4]) // 1"
      },
      {
        "language": "javascript",
        "code": "d3.min([\"bob\", \"alice\", \"carol\"]) // \"alice\""
      },
      {
        "language": "javascript",
        "code": "d3.min([new Date(\"2018-01-01\"), new Date(\"2011-03-09\")]) // 2011-03-09"
      },
      {
        "language": "javascript",
        "code": "d3.min([3, 2, 1, NaN, 4]) // 1"
      },
      {
        "language": "javascript",
        "code": "d3.min(alphabet, (d) => d.frequency) // 0.00074"
      },
      {
        "language": "javascript",
        "code": "d3.min(alphabet, (d) => d.letter === \"Z\" ? NaN : d.frequency) // 0.00095"
      },
      {
        "language": "javascript",
        "code": "d3.min([]) // undefined"
      },
      {
        "language": "javascript",
        "code": "d3.min(alphabet, (d) => d.doesnotexist) // undefined"
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Checking if an Element Has a CSS Class with D3 Selection",
    "codeDescription": "Checks if the first non-null element in the selection has the class \"foo\" and returns a boolean. This is useful when you need to test for the presence of a specific class.",
    "codeLanguage": "javascript",
    "codeTokens": 59,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/modifying.md#2025-04-11_snippet_7",
    "pageTitle": "D3 Selection Element Modification Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection.classed(\"foo\") // true, perhaps"
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Preventing Default Wheel Behavior in D3 Zoom",
    "codeDescription": "Example of how to prevent the default wheel behavior when using D3 zoom, regardless of the scale extent.",
    "codeLanguage": "JavaScript",
    "codeTokens": 51,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-zoom.md#2025-04-11_snippet_9",
    "pageTitle": "D3 Zoom Module Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "selection\n    .call(zoom)\n    .on(\"wheel\", event => event.preventDefault());"
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Importing Specific D3 Modules via CDN",
    "codeDescription": "This snippet demonstrates how to import specific D3 modules (d3-force) via a CDN. It shows how to create a force simulation with collision and x-force, setting up a basic physics-based visualization.",
    "codeLanguage": "html",
    "codeTokens": 143,
    "codeId": "https://github.com/d3/d3/blob/main/docs/getting-started.md#2025-04-11_snippet_4",
    "pageTitle": "Getting Started with D3.js",
    "codeList": [
      {
        "language": "html",
        "code": "<script type=\"module\">\n\nimport {forceSimulation, forceCollide, forceX} from \"https://cdn.jsdelivr.net/npm/d3-force@3/+esm\";\n\nconst nodes = [{}, {}];\nconst simulation = forceSimulation(nodes)\n    .force(\"x\", forceX())\n    .force(\"collide\", forceCollide(5))\n    .on(\"tick\", () => console.log(nodes[0].x));\n\n</script>"
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Applying D3 Drag Behavior to a Selection",
    "codeDescription": "Demonstrates how to instantiate a drag behavior and apply it to a selection of elements with the class 'node'. The 'start' event listener is set to a function named 'started'.",
    "codeLanguage": "javascript",
    "codeTokens": 65,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-drag.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Drag Behavior Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.selectAll(\".node\").call(d3.drag().on(\"start\", started));"
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Creating Detached Elements with D3.js",
    "codeDescription": "Examples of creating detached DOM elements using d3.create() with different namespace specifications. Shows how to create SVG and HTML elements.",
    "codeLanguage": "javascript",
    "codeTokens": 49,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/modifying.md#2025-04-11_snippet_21",
    "pageTitle": "D3 Selection Element Modification Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.create(\"svg\") // equivalent to svg:svg"
      },
      {
        "language": "javascript",
        "code": "d3.create(\"svg:svg\") // more explicitly"
      },
      {
        "language": "javascript",
        "code": "d3.create(\"svg:g\") // an SVG G element"
      },
      {
        "language": "javascript",
        "code": "d3.create(\"g\") // an HTML G (unknown) element"
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Creating a Diverging Color Scale with D3 Linear Scale",
    "codeDescription": "Creates a piecewise linear scale with multiple domain and range values to produce a diverging color scale, interpolating between red, white, and green.",
    "codeLanguage": "javascript",
    "codeTokens": 104,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_6",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleLinear([-1, 0, 1], [\"red\", \"white\", \"green\"]);\ncolor(-0.5); // \"rgb(255, 128, 128)\"\ncolor(+0.5); // \"rgb(128, 192, 128)\""
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Formatting Different Date Components with D3",
    "codeDescription": "Shows how to extract and format specific components of a date using d3.timeFormat with different format specifiers.",
    "codeLanguage": "javascript",
    "codeTokens": 109,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-time-format.md#2025-04-11_snippet_11",
    "pageTitle": "D3 Time Format Library Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const formatMonth = d3.timeFormat(\"%B\"),\n    formatDay = d3.timeFormat(\"%A\"),\n    date = new Date(2014, 4, 1); // Thu May 01 2014 00:00:00 GMT-0700 (PDT)\n\nformatMonth(date); // \"May\"\nformatDay(date); // \"Thursday\""
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Setting the X Accessor for a D3 Line Generator",
    "codeDescription": "Configures a line generator by setting its x accessor function, which transforms each data point to determine its x-coordinate position.",
    "codeLanguage": "javascript",
    "codeTokens": 52,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/line.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Line Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const line = d3.line().x((d) => x(d.Date));"
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Styling D3 Axes in D3 v3.x",
    "codeDescription": "Demonstrates the old way of styling axes in D3 version 3.x, requiring both CSS styling and JavaScript code to render properly formatted axes.",
    "codeLanguage": "html",
    "codeTokens": 116,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_8",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<style>\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.axis text {\n  font: 10px sans-serif;\n}\n\n</style>\n<script>\n\nd3.select(\".axis\")\n    .call(d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\"));\n\n</script>"
      }
    ],
    "relevance": 0.954
  },
  {
    "codeTitle": "Generating SVG Path with a D3 Line Generator",
    "codeDescription": "Shows how to generate an SVG path element using a line generator with data, applying a stroke color using the 'currentColor' value.",
    "codeLanguage": "javascript",
    "codeTokens": 57,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/line.md#2025-04-11_snippet_2",
    "pageTitle": "D3.js Line Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "svg.append(\"path\").attr(\"d\", line(data)).attr(\"stroke\", \"currentColor\");"
      }
    ],
    "relevance": 0.952
  },
  {
    "codeTitle": "Initializing D3.js Pie Generator in JavaScript",
    "codeDescription": "Creates a new pie generator with default settings using d3.pie(). This generator can be used to compute the necessary angles for pie or donut charts.",
    "codeLanguage": "javascript",
    "codeTokens": 52,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/pie.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Pie Chart Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const pie = d3.pie();"
      }
    ],
    "relevance": 0.952
  },
  {
    "codeTitle": "Generating Ticks with D3.js in JavaScript",
    "codeDescription": "The d3.ticks() function generates an array of uniformly-spaced, nicely-rounded values between start and stop. It returns approximately count + 1 values, each being a power of ten multiplied by 1, 2 or 5.",
    "codeLanguage": "javascript",
    "codeTokens": 89,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/ticks.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Tick Generation and Range Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.ticks(1, 9, 5) // [2, 4, 6, 8]"
      },
      {
        "language": "javascript",
        "code": "d3.ticks(1, 9, 20) // [1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9]"
      }
    ],
    "relevance": 0.952
  },
  {
    "codeTitle": "D3 Standard SI Prefix Formatting",
    "codeDescription": "Shows D3's standard SI-prefix formatting behavior using the 's' format directive.",
    "codeLanguage": "javascript",
    "codeTokens": 83,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_22",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "var f = d3.format(\".0s\");\nf(1e3); // \"1k\"\nf(1e4); // \"10k\"\nf(1e5); // \"100k\"\nf(1e6); // \"1M\""
      }
    ],
    "relevance": 0.952
  },
  {
    "codeTitle": "Chaining Transitions with Relative Delays in D3.js",
    "codeDescription": "Shows how to chain multiple transitions with relative delays. The delay of each transition is now relative to the previous transition in the chain, making it easier to create sequential animations.",
    "codeLanguage": "JavaScript",
    "codeTokens": 123,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_76",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.selectAll(\".apple\")\n  .transition() // First fade to green.\n    .style(\"fill\", \"green\")\n  .transition() // Then red.\n    .style(\"fill\", \"red\")\n  .transition() // Wait one second. Then brown, and remove.\n    .delay(1000)\n    .style(\"fill\", \"brown\")\n    .remove();"
      }
    ],
    "relevance": 0.951
  },
  {
    "codeTitle": "Key-based Data Joining with D3.js",
    "codeDescription": "Example of joining data to elements using a key function that matches elements by name/id, demonstrating object constancy in data binding.",
    "codeLanguage": "javascript",
    "codeTokens": 154,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/joining.md#2025-04-11_snippet_2",
    "pageTitle": "D3.js Data Joining Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const data = [\n  {name: \"Locke\", number: 4},\n  {name: \"Reyes\", number: 8},\n  {name: \"Ford\", number: 15},\n  {name: \"Jarrah\", number: 16},\n  {name: \"Shephard\", number: 23},\n  {name: \"Kwon\", number: 42}\n];\n\nd3.selectAll(\"div\")\n  .data(data, function(d) { return d ? d.name : this.id; })\n    .text(d => d.number);"
      }
    ],
    "relevance": 0.951
  },
  {
    "codeTitle": "Implementing Multi-Scale Time Formatting in D3",
    "codeDescription": "Creates a conditional time formatting function that selects different format patterns based on the time scale (milliseconds, seconds, minutes, etc.) using d3 time intervals.",
    "codeLanguage": "javascript",
    "codeTokens": 255,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-time-format.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Time Format Library Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const formatMillisecond = d3.utcFormat(\".%L\"),\n    formatSecond = d3.utcFormat(\":%S\"),\n    formatMinute = d3.utcFormat(\"%I:%M\"),\n    formatHour = d3.utcFormat(\"%I %p\"),\n    formatDay = d3.utcFormat(\"%a %d\"),\n    formatWeek = d3.utcFormat(\"%b %d\"),\n    formatMonth = d3.utcFormat(\"%B\"),\n    formatYear = d3.utcFormat(\"%Y\");\n\nfunction multiFormat(date) {\n  return (d3.utcSecond(date) < date ? formatMillisecond\n      : d3.utcMinute(date) < date ? formatSecond\n      : d3.utcHour(date) < date ? formatMinute\n      : d3.utcDay(date) < date ? formatHour\n      : d3.utcMonth(date) < date ? (d3.utcWeek(date) < date ? formatDay : formatWeek)\n      : d3.utcYear(date) < date ? formatMonth\n      : formatYear)(date);\n}"
      }
    ],
    "relevance": 0.95
  },
  {
    "codeTitle": "Creating a Line Plot with D3 and Svelte (Reactive Approach)",
    "codeDescription": "This snippet shows how to create a line plot using D3 modules in Svelte, including DOM-manipulating modules like d3-axis. It uses Svelte's reactive statements for efficient updates.",
    "codeLanguage": "svelte",
    "codeTokens": 361,
    "codeId": "https://github.com/d3/d3/blob/main/docs/getting-started.md#2025-04-11_snippet_10",
    "pageTitle": "Getting Started with D3.js",
    "codeList": [
      {
        "language": "svelte",
        "code": "<script>\n  import * as d3 from 'd3';\n\n  export let data;\n  export let width = 640;\n  export let height = 400;\n  export let marginTop = 20;\n  export let marginRight = 20;\n  export let marginBottom = 30;\n  export let marginLeft = 40;\n\n  let gx;\n  let gy;\n\n  $: x = d3.scaleLinear([0, data.length - 1], [marginLeft, width - marginRight]);\n  $: y = d3.scaleLinear(d3.extent(data), [height - marginBottom, marginTop]);\n  $: line = d3.line((d, i) => x(i), y);\n  $: d3.select(gy).call(d3.axisLeft(y));\n  $: d3.select(gx).call(d3.axisBottom(x));\n</script>\n<svg width={width} height={height}>\n  <g bind:this={gx} transform=\"translate(0,{height - marginBottom})\" />\n  <g bind:this={gy} transform=\"translate({marginLeft},0)\" />\n  <path fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" d={line(data)} />\n  <g fill=\"white\" stroke=\"currentColor\" stroke-width=\"1.5\">\n    {#each data as d, i}\n      <circle key={i} cx={x(i)} cy={y(d)} r=\"2.5\" />\n    {/each}\n  </g>\n</svg>"
      }
    ],
    "relevance": 0.95
  },
  {
    "codeTitle": "Rendering an Area Path with D3 in SVG in JavaScript",
    "codeDescription": "Shows how to use an area generator to create an SVG path. The area generator is called with data and the resulting path data string is set as the 'd' attribute of a path element.",
    "codeLanguage": "javascript",
    "codeTokens": 62,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/area.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Area Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "svg.append(\"path\").attr(\"d\", area(data));"
      }
    ],
    "relevance": 0.95
  },
  {
    "codeTitle": "Creating a Line Plot with D3 and Svelte (Declarative Approach)",
    "codeDescription": "This snippet demonstrates how to create a line plot using D3 modules in Svelte without direct DOM manipulation. It uses d3-shape for line generation and d3-scale for scaling.",
    "codeLanguage": "svelte",
    "codeTokens": 282,
    "codeId": "https://github.com/d3/d3/blob/main/docs/getting-started.md#2025-04-11_snippet_9",
    "pageTitle": "Getting Started with D3.js",
    "codeList": [
      {
        "language": "svelte",
        "code": "<script>\n  import * as d3 from 'd3';\n\n  export let data;\n  export let width = 640;\n  export let height = 400;\n  export let marginTop = 20;\n  export let marginRight = 20;\n  export let marginBottom = 20;\n  export let marginLeft = 20;\n\n  $: x = d3.scaleLinear([0, data.length - 1], [marginLeft, width - marginRight]);\n  $: y = d3.scaleLinear(d3.extent(data), [height - marginBottom, marginTop]);\n  $: line = d3.line((d, i) => x(i), y);\n</script>\n<svg width={width} height={height}>\n  <path fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" d={line(data)} />\n  <g fill=\"white\" stroke=\"currentColor\" stroke-width=\"1.5\">\n    {#each data as d, i}\n      <circle key={i} cx={x(i)} cy={y(d)} r=\"2.5\" />\n    {/each}\n  </g>\n</svg>"
      }
    ],
    "relevance": 0.95
  },
  {
    "codeTitle": "Using the Global tickFormat Function in D3.js",
    "codeDescription": "Demonstrates using the standalone tickFormat function to create a formatter with automatically computed precision based on fixed intervals between values.",
    "codeLanguage": "javascript",
    "codeTokens": 62,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_28",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const f = d3.tickFormat(0, 1, 20);\nf(1); // \"1.00\""
      }
    ],
    "relevance": 0.95
  },
  {
    "codeTitle": "Getting Text Content with D3 Selection",
    "codeDescription": "Retrieves the text content from the first non-null element in the selection. This returns the combined text of the element and its descendants without any HTML tags.",
    "codeLanguage": "javascript",
    "codeTokens": 51,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/modifying.md#2025-04-11_snippet_13",
    "pageTitle": "D3 Selection Element Modification Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection.text() // \"Hello, world!\""
      }
    ],
    "relevance": 0.95
  },
  {
    "codeTitle": "Setting Precision for Symbol Path Generation",
    "codeDescription": "Configures a symbol generator to use 3 digits of precision after the decimal point in path data.",
    "codeLanguage": "javascript",
    "codeTokens": 44,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/symbol.md#2025-04-11_snippet_12",
    "pageTitle": "D3 Symbol Generator for Data Visualization",
    "codeList": [
      {
        "language": "javascript",
        "code": "const symbol = d3.symbol().digits(3);"
      }
    ],
    "relevance": 0.95
  },
  {
    "codeTitle": "Generating Ranges with D3.js in JavaScript",
    "codeDescription": "The d3.range() function returns an array containing an arithmetic progression. It's often used to iterate over a sequence of uniformly-spaced numeric values, such as array indexes or linear scale ticks.",
    "codeLanguage": "javascript",
    "codeTokens": 78,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/ticks.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js Tick Generation and Range Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.range(6) // [0, 1, 2, 3, 4, 5]"
      },
      {
        "language": "javascript",
        "code": "d3.range(5, -1, -1) // [5, 4, 3, 2, 1, 0]"
      },
      {
        "language": "javascript",
        "code": "d3.range(Infinity) // []"
      },
      {
        "language": "javascript",
        "code": "d3.range(0, 1, 0.2) // [0, 0.2, 0.4, 0.6000000000000001, 0.8]"
      },
      {
        "language": "javascript",
        "code": "d3.range(0, 1, 1 / 49) // 👎 returns 50 elements!"
      },
      {
        "language": "javascript",
        "code": "d3.range(49).map((d) => d / 49) // 👍 returns 49 elements"
      }
    ],
    "relevance": 0.948
  },
  {
    "codeTitle": "Using d3.format for Consistent Number Formatting",
    "codeDescription": "This example demonstrates how to use d3.format to create a formatter function that consistently formats decimal numbers to one decimal place.",
    "codeLanguage": "javascript",
    "codeTokens": 76,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-format.md#2025-04-11_snippet_1",
    "pageTitle": "d3-format: Number Formatting Library",
    "codeList": [
      {
        "language": "javascript",
        "code": "const f = d3.format(\".1f\");\nfor (let i = 0; i < 10; ++i) {\n  console.log(f(0.1 * i));\n}"
      }
    ],
    "relevance": 0.948
  },
  {
    "codeTitle": "Initializing D3 Arc Generator in Vue.js",
    "codeDescription": "Sets up reactive variables for arc generator parameters in a Vue.js component.",
    "codeLanguage": "javascript",
    "codeTokens": 79,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/arc.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Arc Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "<script setup>\n\nimport ExampleArcs from \"../components/ExampleArcs.vue\";\nimport {ref} from \"vue\";\n\nconst cornerRadius = ref(18);\nconst padAngle = ref(0.03);\nconst padRadius = ref(200);\n\n</script>"
      }
    ],
    "relevance": 0.948
  },
  {
    "codeTitle": "D3 Negative Number Formatting",
    "codeDescription": "Demonstrates different options for formatting negative numbers, including parentheses and currency symbols.",
    "codeLanguage": "javascript",
    "codeTokens": 91,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_23",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.format(\"+.0f\")(-42);  // \"-42\"\nd3.format(\"(.0f\")(-42);  // \"(42)\"\nd3.format(\"+$.0f\")(-42); // \"-$42\"\nd3.format(\"($.0f\")(-42); // \"($42)\""
      }
    ],
    "relevance": 0.948
  },
  {
    "codeTitle": "Custom Percentage Formatting with Global tickFormat in D3.js",
    "codeDescription": "Shows how to create a custom percentage format using the standalone tickFormat function with a format specifier and range parameters.",
    "codeLanguage": "javascript",
    "codeTokens": 63,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_29",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const f = d3.tickFormat(-1, 1, 5, \"+%\");\nf(-0.5); // \"-50%\""
      }
    ],
    "relevance": 0.946
  },
  {
    "codeTitle": "Sorting Groups with d3.groupSort() in JavaScript",
    "codeDescription": "Groups elements by a key function, sorts the groups by a comparator, and returns an array of keys in sorted order. This example sorts penguin species by ascending median body mass.",
    "codeLanguage": "javascript",
    "codeTokens": 98,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/group.md#2025-04-11_snippet_12",
    "pageTitle": "D3.js Data Grouping Methods Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.groupSort(penguins, (D) => d3.median(D, (d) => d.body_mass_g), (d) => d.species) // [\"Adelie\", \"Chinstrap\", \"Gentoo\"]"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Generating Cartesian Product with d3.cross in JavaScript",
    "codeDescription": "Creates a Cartesian product of multiple iterables, returning all possible combinations as arrays. Can optionally use a reducer function to transform each combination.",
    "codeLanguage": "javascript",
    "codeTokens": 78,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/transform.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Data Transformation Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.cross([1, 2], [\"x\", \"y\"]) // [[1, \"x\"], [1, \"y\"], [2, \"x\"], [2, \"y\"]]"
      },
      {
        "language": "javascript",
        "code": "d3.cross([1, 2], [\"x\", \"y\"], (a, b) => a + b) // [\"1x\", \"1y\", \"2x\", \"2y\"]"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Using D3 timeFormat Method",
    "codeDescription": "Demonstrates the basic usage of d3.timeFormat method to create a date formatter with a specific format specifier.",
    "codeLanguage": "javascript",
    "codeTokens": 43,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-time-format.md#2025-04-11_snippet_3",
    "pageTitle": "D3 Time Format Library Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.timeFormat(\"%b %d\")"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Creating Continuous Sequential Color Scale",
    "codeDescription": "Example of creating a continuous sequential color scale using D3's Blues interpolator with scaleSequential",
    "codeLanguage": "javascript",
    "codeTokens": 45,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale-chromatic/sequential.md#2025-04-11_snippet_2",
    "pageTitle": "D3.js Sequential Color Schemes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleSequential(d3.interpolateBlues);"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Setting Domain for D3 Linear Scale",
    "codeDescription": "Sets the domain (input values) for a linear scale. The domain must contain two or more numeric values in ascending or descending order.",
    "codeLanguage": "javascript",
    "codeTokens": 55,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_5",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleLinear().domain([10, 130]);"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Setting Tick Format via axis.ticks() in D3.js",
    "codeDescription": "Demonstrates setting both the number of ticks and their format in a single method call. This approach automatically determines appropriate format precision based on the tick interval.",
    "codeLanguage": "javascript",
    "codeTokens": 51,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-axis.md#2025-04-11_snippet_6",
    "pageTitle": "D3.js Axis Component Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "axis.ticks(10, \",f\");"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Creating a Linear Scale with Domain and Range in D3.js",
    "codeDescription": "Constructs a new linear scale with specified domain and range. This example creates a scale that maps values from 0-100 to colors from red to blue.",
    "codeLanguage": "javascript",
    "codeTokens": 60,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.scaleLinear([0, 100], [\"red\", \"blue\"])"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Initializing Vue Component with D3 and Plot for Delaunay/Voronoi Visualization",
    "codeDescription": "Sets up a Vue component that creates a random set of points and uses d3's random number generator with a fixed seed for reproducibility. The script imports the necessary libraries and prepares data for visualization.",
    "codeLanguage": "javascript",
    "codeTokens": 140,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-delaunay.md#2025-04-11_snippet_0",
    "pageTitle": "D3-Delaunay Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "<script setup>\n\nimport * as Plot from \"@observablehq/plot\";\nimport * as d3 from \"d3\";\nimport {shallowRef} from \"vue\";\nimport PlotRender from \"./components/PlotRender.js\";\n\nconst random = d3.randomNormal.source(d3.randomLcg(42))();\nconst points = Array.from({length: 1000}, () => [random(), random()]);\n\n</script>"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Searching D3 Quadtree within Rectangular Extent",
    "codeDescription": "Implements a search function that visits the quadtree and returns all nodes within a specified rectangular extent. It uses the quadtree.visit() method and ignores quads that cannot contain relevant nodes for efficiency.",
    "codeLanguage": "javascript",
    "codeTokens": 187,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-quadtree.md#2025-04-11_snippet_9",
    "pageTitle": "D3 Quadtree Implementation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function search(quadtree, xmin, ymin, xmax, ymax) {\n  const results = [];\n  quadtree.visit((node, x1, y1, x2, y2) => {\n    if (!node.length) {\n      do {\n        let d = node.data;\n        if (d[0] >= xmin && d[0] < xmax && d[1] >= ymin && d[1] < ymax) {\n          results.push(d);\n        }\n      } while (node = node.next);\n    }\n    return x1 >= xmax || y1 >= ymax || x2 < xmin || y2 < ymin;\n  });\n  return results;\n}"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Creating a Copy of a D3.js Quantile Scale",
    "codeDescription": "Demonstrates how to create an exact copy of a quantile scale, which can then be modified independently without affecting the original scale.",
    "codeLanguage": "javascript",
    "codeTokens": 65,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/quantile.md#2025-04-11_snippet_8",
    "pageTitle": "D3.js Quantile Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const c1 = d3.scaleQuantile(d3.schemeBlues[5]);\nconst c2 = c1.copy();"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Using Ordinal Scale for Value Mapping",
    "codeDescription": "Shows how to use an ordinal scale to map a domain value to its corresponding range value.",
    "codeLanguage": "javascript",
    "codeTokens": 40,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/ordinal.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Ordinal Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "color(\"a\") // \"red\""
      }
    ],
    "relevance": 0.944
  },
  {
    "codeTitle": "Chaining D3.js Transitions with transition.transition()",
    "codeDescription": "Demonstrates how to create a sequence of chained transitions on selected elements. This example first transitions the fill color to green, then to red, and finally to brown after a delay before removing the elements.",
    "codeLanguage": "javascript",
    "codeTokens": 130,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-transition/selecting.md#2025-04-11_snippet_8",
    "pageTitle": "D3.js Transition Selection Methods Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.selectAll(\".apple\")\n  .transition() // First fade to green.\n    .style(\"fill\", \"green\")\n  .transition() // Then red.\n    .style(\"fill\", \"red\")\n  .transition() // Wait one second. Then brown, and remove.\n    .delay(1000)\n    .style(\"fill\", \"brown\")\n    .remove();"
      }
    ],
    "relevance": 0.943
  },
  {
    "codeTitle": "Creating Basic Logarithmic Scale in D3.js",
    "codeDescription": "Creates a new logarithmic scale with a domain of [1, 10] and range of [0, 960]. Used for mapping values using logarithmic transformation.",
    "codeLanguage": "javascript",
    "codeTokens": 67,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/log.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Logarithmic Scale Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleLog([1, 10], [0, 960]);"
      }
    ],
    "relevance": 0.942
  },
  {
    "codeTitle": "Applying Color Encoding with D3 Linear Scale",
    "codeDescription": "Shows how to use a linear scale for color encoding. The scale interpolates between brown and steelblue based on input values between 10 and 100.",
    "codeLanguage": "javascript",
    "codeTokens": 96,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleLinear([10, 100], [\"brown\", \"steelblue\"]);\ncolor(20); // \"rgb(154, 52, 57)\"\ncolor(50); // \"rgb(123, 81, 103)\""
      }
    ],
    "relevance": 0.942
  },
  {
    "codeTitle": "Accessing Column Names with d3.csv in D3.js",
    "codeDescription": "Demonstrates how to access column names from parsed CSV data using the new columns property in D3.js v4. This example loads a CSV file and logs the column names to the console.",
    "codeLanguage": "javascript",
    "codeTokens": 91,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_16",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.csv(\"cars.csv\", function(error, data) {\n  if (error) throw error;\n  console.log(data.columns); // [\"Year\", \"Make\", \"Model\", \"Length\"]\n});"
      }
    ],
    "relevance": 0.942
  },
  {
    "codeTitle": "Deep Copy Node Subtree in D3.js",
    "codeDescription": "Creates a deep copy of a node's subtree while maintaining references to the original data. The copied node becomes the root of a new tree with null parent and zero depth.",
    "codeLanguage": "javascript",
    "codeTokens": 50,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/hierarchy.md#2025-04-11_snippet_12",
    "pageTitle": "D3.js Hierarchy Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "node.copy()"
      }
    ],
    "relevance": 0.942
  },
  {
    "codeTitle": "Generating Ticks with D3.js Time Scales",
    "codeDescription": "Example of generating representative dates (ticks) from a time scale's domain. These ticks are uniformly-spaced, have sensible values, and are guaranteed to be within the extent of the domain.",
    "codeLanguage": "javascript",
    "codeTokens": 272,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/time.md#2025-04-11_snippet_2",
    "pageTitle": "D3.js Time Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleTime();\nx.ticks(10);\n// [Sat Jan 01 2000 00:00:00 GMT-0800 (PST),\n//  Sat Jan 01 2000 03:00:00 GMT-0800 (PST),\n//  Sat Jan 01 2000 06:00:00 GMT-0800 (PST),\n//  Sat Jan 01 2000 09:00:00 GMT-0800 (PST),\n//  Sat Jan 01 2000 12:00:00 GMT-0800 (PST),\n//  Sat Jan 01 2000 15:00:00 GMT-0800 (PST),\n//  Sat Jan 01 2000 18:00:00 GMT-0800 (PST),\n//  Sat Jan 01 2000 21:00:00 GMT-0800 (PST),\n//  Sun Jan 02 2000 00:00:00 GMT-0800 (PST)]"
      }
    ],
    "relevance": 0.94
  },
  {
    "codeTitle": "Smooth Transition to Reset Zoom in D3",
    "codeDescription": "Creates an animated transition that resets the zoom transform to the identity transform over 750 milliseconds. This provides a smoother user experience than instant resets.",
    "codeLanguage": "javascript",
    "codeTokens": 56,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-zoom.md#2025-04-11_snippet_4",
    "pageTitle": "D3 Zoom Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection.transition().duration(750).call(zoom.transform, d3.zoomIdentity);"
      }
    ],
    "relevance": 0.94
  },
  {
    "codeTitle": "Configuring a D3 Line Generator with Method Chaining",
    "codeDescription": "Demonstrates configuring a line generator using method chaining to set x and y accessors separately, which is functionally equivalent to providing accessors to the constructor.",
    "codeLanguage": "javascript",
    "codeTokens": 72,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/line.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Line Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const line = d3.line()\n    .x((d) => x(d.Date))\n    .y((d) => y(d.Close));"
      }
    ],
    "relevance": 0.94
  },
  {
    "codeTitle": "Applying Position Encoding with D3 Linear Scale",
    "codeDescription": "Demonstrates how to apply a linear scale for position encoding. The scale maps domain values from 10-130 to range values from 0-960.",
    "codeLanguage": "javascript",
    "codeTokens": 78,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_2",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleLinear([10, 130], [0, 960]);\nx(20); // 80\nx(50); // 320"
      }
    ],
    "relevance": 0.94
  },
  {
    "codeTitle": "Creating a Band Scale in D3.js",
    "codeDescription": "Constructs a new band scale with the specified domain and range. Band scales are typically used for bar charts with categorical dimensions.",
    "codeLanguage": "javascript",
    "codeTokens": 58,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/band.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Band Scale Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleBand([\"a\", \"b\", \"c\"], [0, 960]);"
      }
    ],
    "relevance": 0.94
  },
  {
    "codeTitle": "D3 Axis Initialization",
    "codeDescription": "Example of creating and positioning a D3 axis within an SVG container using transform attribute.",
    "codeLanguage": "javascript",
    "codeTokens": 63,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-axis.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Axis Component Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const gx = svg.append(\"g\")\n    .attr(\"transform\", `translate(0,${height - marginBottom})`)\n    .call(d3.axisBottom(x));"
      }
    ],
    "relevance": 0.94
  },
  {
    "codeTitle": "Setting the size of a D3 treemap layout",
    "codeDescription": "Sets the treemap layout's size to the specified [width, height] array or returns the current size if no argument is provided. Default size is [1, 1].",
    "codeLanguage": "JavaScript",
    "codeTokens": 56,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/treemap.md#2025-04-11_snippet_3",
    "pageTitle": "D3 Treemap Layout Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "*treemap*.size(*size*)"
      }
    ],
    "relevance": 0.94
  },
  {
    "codeTitle": "Getting Unknown Value Setting of D3 Linear Scale",
    "codeDescription": "Retrieves the current unknown value setting of a linear scale using the unknown() method without arguments.",
    "codeLanguage": "javascript",
    "codeTokens": 38,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_16",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "color.unknown() // \"#ccc\""
      }
    ],
    "relevance": 0.94
  },
  {
    "codeTitle": "Implementing Default Center Accessor for D3 Geo Circle",
    "codeDescription": "The default accessor function for a circle's center in the geoCircle generator, returning [0, 0] coordinates (null island) in degrees.",
    "codeLanguage": "javascript",
    "codeTokens": 56,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/shape.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Geo Spherical Shapes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function center() {\n  return [0, 0];\n}"
      }
    ],
    "relevance": 0.94
  },
  {
    "codeTitle": "Cloning Elements with D3.js Selection",
    "codeDescription": "Example of cloning selected elements and inserting them immediately after the original elements. The deep parameter determines whether descendant nodes are also cloned.",
    "codeLanguage": "javascript",
    "codeTokens": 57,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/modifying.md#2025-04-11_snippet_18",
    "pageTitle": "D3 Selection Element Modification Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection.select(function() {\n  return this.parentNode.insertBefore(this.cloneNode(deep), this.nextSibling);\n});"
      }
    ],
    "relevance": 0.939
  },
  {
    "codeTitle": "Calculating Quantiles with D3.js",
    "codeDescription": "Examples of computing quantiles using d3.quantile() with various probability values (p). Uses R-7 method for quantile calculation.",
    "codeLanguage": "javascript",
    "codeTokens": 116,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/summarize.md#2025-04-11_snippet_16",
    "pageTitle": "D3.js Data Summarization Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "const numbers = [0, 10, 30];\nd3.quantile(numbers, 0);\nd3.quantile(numbers, 0.5);\nd3.quantile(numbers, 1);\nd3.quantile(numbers, 0.25);\nd3.quantile(numbers, 0.75);\nd3.quantile(numbers, 0.1);"
      }
    ],
    "relevance": 0.938
  },
  {
    "codeTitle": "Using Time Intervals for Custom Ticks in D3.js",
    "codeDescription": "Example of generating ticks at specific time intervals using d3-time's interval.every method. This allows for precise control over tick spacing in a time scale.",
    "codeLanguage": "javascript",
    "codeTokens": 229,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/time.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Time Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleUtc().domain([new Date(\"2000-01-01T00:00Z\"), new Date(\"2000-01-01T02:00Z\")]);\nx.ticks(d3.utcMinute.every(15));\n// [2000-01-01T00:00Z,\n//  2000-01-01T00:15Z,\n//  2000-01-01T00:30Z,\n//  2000-01-01T00:45Z,\n//  2000-01-01T01:00Z,\n//  2000-01-01T01:15Z,\n//  2000-01-01T01:30Z,\n//  2000-01-01T01:45Z,\n//  2000-01-01T02:00Z]"
      }
    ],
    "relevance": 0.938
  },
  {
    "codeTitle": "Configuring Orthographic Projection in D3.js",
    "codeDescription": "Creates an orthographic projection with rotation, extent fitting, and precision settings. This projection simulates viewing the Earth from an infinite distance.",
    "codeLanguage": "javascript",
    "codeTokens": 87,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/azimuthal.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js Azimuthal Projections Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.geoOrthographic().rotate([110, -40]).fitExtent([[1, 1], [width - 1, height - 1]], {type: \"Sphere\"}).precision(0.2)"
      }
    ],
    "relevance": 0.938
  },
  {
    "codeTitle": "Default Y-Coordinate Accessor for Y Force in D3",
    "codeDescription": "Defines the default y-coordinate accessor function for the y-axis force. This function returns a constant value of 0, setting the default target y-position for nodes.",
    "codeLanguage": "JavaScript",
    "codeTokens": 55,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-force/position.md#2025-04-11_snippet_4",
    "pageTitle": "Position Forces in D3 Force Simulation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "function y() {\n  return 0;\n}"
      }
    ],
    "relevance": 0.938
  },
  {
    "codeTitle": "Using precisionFixed for Decimal Precision in D3.js",
    "codeDescription": "The precisionFixed function calculates appropriate decimal precision for fixed-point notation based on the step size between values.",
    "codeLanguage": "javascript",
    "codeTokens": 45,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-format.md#2025-04-11_snippet_13",
    "pageTitle": "d3-format: Number Formatting Library",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.precisionFixed(0.01) // 2"
      }
    ],
    "relevance": 0.938
  },
  {
    "codeTitle": "Creating a Horizontal Link Shorthand in D3.js",
    "codeDescription": "Demonstrates the shorthand method for creating a link with curveBumpX, suitable for tree diagrams rooted on the left edge of the display.",
    "codeLanguage": "javascript",
    "codeTokens": 53,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/link.md#2025-04-11_snippet_2",
    "pageTitle": "D3.js Link Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const link = d3.link(d3.curveBumpX);"
      }
    ],
    "relevance": 0.936
  },
  {
    "codeTitle": "Finding Closest Point in D3 Quadtree",
    "codeDescription": "Demonstrates how to use the quadtree.find() method to locate the closest point to given coordinates. The method returns the datum closest to the specified position within an optional search radius.",
    "codeLanguage": "javascript",
    "codeTokens": 102,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-quadtree.md#2025-04-11_snippet_8",
    "pageTitle": "D3 Quadtree Implementation",
    "codeList": [
      {
        "language": "javascript",
        "code": "tree.find({{findState.x.toFixed(3)}}, {{findState.y.toFixed(3)}}) // {{points[findState.i] && `[${points[findState.i].map((p) => p.toFixed(3)).join(\", \")}]`}}"
      },
      {
        "language": "javascript",
        "code": "tree.find(10, 10, 1) // undefined"
      }
    ],
    "relevance": 0.935
  },
  {
    "codeTitle": "Multi-level Grouping with d3.group() in JavaScript",
    "codeDescription": "Creates a nested InternMap by specifying multiple key functions. This example groups penguins first by species and then by sex.",
    "codeLanguage": "javascript",
    "codeTokens": 62,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/group.md#2025-04-11_snippet_2",
    "pageTitle": "D3.js Data Grouping Methods Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const speciesSex = d3.group(penguins, (d) => d.species, (d) => d.sex)"
      }
    ],
    "relevance": 0.935
  },
  {
    "codeTitle": "D3 Albers USA Projection Configuration",
    "codeDescription": "Configuration for D3's Albers USA projection, a composite projection specifically designed for US map visualization including Alaska and Hawaii.",
    "codeLanguage": "javascript",
    "codeTokens": 74,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/conic.md#2025-04-11_snippet_5",
    "pageTitle": "D3.js Conic Map Projections Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.geoAlbersUsa().scale(1300 / 975 * width * 0.8).translate([width / 2, height / 2])"
      }
    ],
    "relevance": 0.935
  },
  {
    "codeTitle": "Creating a Time Scale in D3.js",
    "codeDescription": "Example of creating a time scale with specified domain and range, and using it to map dates to positions and vice versa. The scale converts dates to numerical values and back.",
    "codeLanguage": "javascript",
    "codeTokens": 181,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/time.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Time Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleTime([new Date(2000, 0, 1), new Date(2000, 0, 2)], [0, 960]);\nx(new Date(2000, 0, 1, 5)); // 200\nx(new Date(2000, 0, 1, 16)); // 640\nx.invert(200); // Sat Jan 01 2000 05:00:00 GMT-0800 (PST)\nx.invert(640); // Sat Jan 01 2000 16:00:00 GMT-0800 (PST)"
      }
    ],
    "relevance": 0.935
  },
  {
    "codeTitle": "Creating a Category-Based Symbol Type Generator",
    "codeDescription": "Creates a symbol generator that dynamically determines the symbol type based on a category property using an ordinal scale.",
    "codeLanguage": "javascript",
    "codeTokens": 64,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/symbol.md#2025-04-11_snippet_3",
    "pageTitle": "D3 Symbol Generator for Data Visualization",
    "codeList": [
      {
        "language": "javascript",
        "code": "const symbolType = d3.scaleOrdinal(d3.symbolsFill);\nconst symbol = d3.symbol().type((d) => symbolType(d.category));"
      }
    ],
    "relevance": 0.935
  },
  {
    "codeTitle": "Formatting CSV with Specific Column Order",
    "codeDescription": "Formats data as a CSV string with explicit control over which columns to include and their order, using the optional columns parameter to d3.csvFormat.",
    "codeLanguage": "js",
    "codeTokens": 70,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-dsv.md#2025-04-11_snippet_12",
    "pageTitle": "d3-dsv: Parsing and Formatting Delimiter-Separated Values",
    "codeList": [
      {
        "language": "js",
        "code": "const string = d3.csvFormat(data, [\"year\", \"make\", \"model\", \"length\"]);"
      }
    ],
    "relevance": 0.935
  },
  {
    "codeTitle": "Interpolating arrays in D3.js",
    "codeDescription": "Shows how d3.interpolateArray can be used to interpolate between two arrays. The function creates interpolators for corresponding elements and uses static values for extra elements in the second array.",
    "codeLanguage": "javascript",
    "codeTokens": 87,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-interpolate/value.md#2025-04-11_snippet_6",
    "pageTitle": "D3.js Interpolation Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.interpolateArray([0, 0, 0], [1, 2, 3])(0.5) // [0.5, 1, 1.5]"
      }
    ],
    "relevance": 0.935
  },
  {
    "codeTitle": "Full-Precision Summation with D3 fsum in JavaScript",
    "codeDescription": "Calculates the full-precision sum of an array of numbers using D3's fsum function.",
    "codeLanguage": "javascript",
    "codeTokens": 89,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/add.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Precision Number Addition Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.fsum([0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]) // 1"
      }
    ],
    "relevance": 0.935
  },
  {
    "codeTitle": "Retrieving the Current Defined Accessor",
    "codeDescription": "Shows how to retrieve the currently configured defined accessor function from a line generator.",
    "codeLanguage": "javascript",
    "codeTokens": 41,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/line.md#2025-04-11_snippet_10",
    "pageTitle": "D3.js Line Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "line.defined() // (d) => !isNaN(d.Close)"
      }
    ],
    "relevance": 0.935
  },
  {
    "codeTitle": "Creating a D3 Drag Behavior in JavaScript",
    "codeDescription": "Creates a new drag behavior that can be applied to DOM elements. The returned behavior is both an object and a function that can be applied to selections via selection.call.",
    "codeLanguage": "javascript",
    "codeTokens": 51,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-drag.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Drag Behavior Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const drag = d3.drag();"
      }
    ],
    "relevance": 0.934
  },
  {
    "codeTitle": "Loading Text Files with d3.text",
    "codeDescription": "Demonstrates how to load a text file using d3.text(). This method fetches a text file from a specified URL and returns a promise that resolves to the file's contents as a string.",
    "codeLanguage": "javascript",
    "codeTokens": 69,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-fetch.md#2025-04-11_snippet_0",
    "pageTitle": "D3-Fetch Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const text = await d3.text(\"hello-world.txt\"); // \"Hello, world!\""
      }
    ],
    "relevance": 0.933
  },
  {
    "codeTitle": "Using the squarify tiling method in D3 treemap",
    "codeDescription": "The default tiling method that implements the squarified treemap algorithm by Bruls et al., which seeks to produce rectangles with a given aspect ratio, typically the golden ratio.",
    "codeLanguage": "JavaScript",
    "codeTokens": 73,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/treemap.md#2025-04-11_snippet_16",
    "pageTitle": "D3 Treemap Layout Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "treemapSquarify(*node*, *x0*, *y0*, *x1*, *y1*)"
      }
    ],
    "relevance": 0.932
  },
  {
    "codeTitle": "Creating Pairs from Adjacent Elements with d3.pairs in JavaScript",
    "codeDescription": "Returns an array of adjacent pairs of elements from an iterable. Can also use a reducer function to transform each pair into a single value.",
    "codeLanguage": "javascript",
    "codeTokens": 73,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/transform.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Data Transformation Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.pairs([1, 2, 3, 4]) // [[1, 2], [2, 3], [3, 4]]"
      },
      {
        "language": "javascript",
        "code": "d3.pairs([1, 1, 2, 3, 5], (a, b) => b - a) // [0, 1, 1, 2]"
      }
    ],
    "relevance": 0.932
  },
  {
    "codeTitle": "Computing Convex Hull of Points with D3",
    "codeDescription": "This function computes the convex hull of a set of points using Andrew's monotone chain algorithm. It returns an array of points forming the hull in counterclockwise order.",
    "codeLanguage": "javascript",
    "codeTokens": 97,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-polygon.md#2025-04-11_snippet_3",
    "pageTitle": "D3-Polygon Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.polygonHull(points) // [[3.0872864263338777, -1.300100095019402], [1.6559368816733773, -2.5092525689499605], …]"
      }
    ],
    "relevance": 0.932
  },
  {
    "codeTitle": "Creating a Brighter Color in D3.js",
    "codeDescription": "Demonstrates how to create a brighter version of a color using the brighter() method with a specified intensity.",
    "codeLanguage": "javascript",
    "codeTokens": 78,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-color.md#2025-04-11_snippet_8",
    "pageTitle": "D3 Color Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.color(\"steelblue\").brighter(1) // {r: 100, g: 185.71428571428572, b: 257.14285714285717, opacity: 1}"
      }
    ],
    "relevance": 0.932
  },
  {
    "codeTitle": "Using D3's interpolateTransformSvg Function in JavaScript",
    "codeDescription": "Demonstrates using the d3.interpolateTransformSvg function to interpolate between two SVG transform strings. The example shows interpolation between a skew transform and a combined skew/translate transform.",
    "codeLanguage": "js",
    "codeTokens": 84,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-interpolate/transform.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Transform Interpolation Documentation",
    "codeList": [
      {
        "language": "js",
        "code": "d3.interpolateTransformSvg(\"skewX(-60)\", \"skewX(60) translate(280,0)\") // \"translate(140,0) skewX(0)\""
      }
    ],
    "relevance": 0.932
  },
  {
    "codeTitle": "Custom Row Conversion with d3.dsv",
    "codeDescription": "Demonstrates how to use a row conversion function with d3.dsv() to transform and filter data during parsing. The conversion function maps each row to a more specific representation with type conversions.",
    "codeLanguage": "javascript",
    "codeTokens": 125,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-fetch.md#2025-04-11_snippet_6",
    "pageTitle": "D3-Fetch Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const data = await d3.dsv(\",\", \"example.csv\", (d) => {\n  return {\n    year: new Date(+d.Year, 0, 1), // convert \"Year\" column to Date\n    make: d.Make,\n    model: d.Model,\n    length: +d.Length // convert \"Length\" column to number\n  };\n});"
      }
    ],
    "relevance": 0.93
  },
  {
    "codeTitle": "Creating a D3 Area Generator with Method Chaining in JavaScript",
    "codeDescription": "Demonstrates how to create an area generator using method chaining to set x, y0, and y1 accessors. This is equivalent to the previous example but uses a more explicit syntax with separate method calls.",
    "codeLanguage": "javascript",
    "codeTokens": 91,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/area.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Area Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const area = d3.area()\n    .x((d) => x(d.Date))\n    .y0(y(0))\n    .y1((d) => y(d.Close));"
      }
    ],
    "relevance": 0.93
  },
  {
    "codeTitle": "Iterating Over D3 Hierarchy Descendants in JavaScript",
    "codeDescription": "Demonstrates how to iterate over the descendants of a D3 hierarchy node using the iterator protocol.",
    "codeLanguage": "JavaScript",
    "codeTokens": 47,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/hierarchy.md#2025-04-11_snippet_10",
    "pageTitle": "D3.js Hierarchy Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "for (const descendant of node) {\n  console.log(descendant);\n}"
      }
    ],
    "relevance": 0.93
  },
  {
    "codeTitle": "Creating a Custom Rainbow Sequential Scale in JavaScript",
    "codeDescription": "Creates a sequential scale with a custom interpolator function that generates a rainbow color scheme. The interpolator converts a t-value (0-1) to an HSL color string.",
    "codeLanguage": "javascript",
    "codeTokens": 79,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/sequential.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Sequential Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const rainbow = d3.scaleSequential((t) => d3.hsl(t * 360, 1, 0.5) + \"\");"
      }
    ],
    "relevance": 0.93
  },
  {
    "codeTitle": "Applying Partition Layout to Hierarchical Data in D3",
    "codeDescription": "Applies the partition layout to a root hierarchy node, assigning x0, y0, x1, and y1 properties to each node for positioning. Requires prior calling of root.sum() and optionally root.sort().",
    "codeLanguage": "javascript",
    "codeTokens": 59,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/partition.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Partition Layout Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "*partition*(*root*)"
      }
    ],
    "relevance": 0.93
  },
  {
    "codeTitle": "Applying a D3 Line Generator to SVG Path Element",
    "codeDescription": "Shows how to use a line generator to compute the 'd' attribute of an SVG path element from data. This binds data to the path and sets the path definition using the line generator.",
    "codeLanguage": "javascript",
    "codeTokens": 61,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape.md#2025-04-11_snippet_1",
    "pageTitle": "D3-Shape Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "path.datum(data).attr(\"d\", line);"
      }
    ],
    "relevance": 0.93
  },
  {
    "codeTitle": "Retrieving the current value accessor from a bin generator in D3",
    "codeDescription": "Shows how to retrieve the current value accessor function from a bin generator, which by default returns the accessor that extracts the culmen_length_mm property.",
    "codeLanguage": "javascript",
    "codeTokens": 54,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/bin.md#2025-04-11_snippet_3",
    "pageTitle": "D3 Binning Data",
    "codeList": [
      {
        "language": "javascript",
        "code": "bin.value() // (d) => d.culmen_length_mm"
      }
    ],
    "relevance": 0.93
  },
  {
    "codeTitle": "Getting Band Width in D3 Scale",
    "codeDescription": "Returns the width of each band in the band scale. This is the actual width of the rectangular space allocated for each value in the domain.",
    "codeLanguage": "javascript",
    "codeTokens": 53,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/band.md#2025-04-11_snippet_11",
    "pageTitle": "D3.js Band Scale Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "x.bandwidth() // 50.8235294117647"
      }
    ],
    "relevance": 0.93
  },
  {
    "codeTitle": "Setting the Curve Factory for a D3 Line Generator",
    "codeDescription": "Configures a line generator to use a specific curve interpolation method, in this case using a step function to create a stepped line.",
    "codeLanguage": "javascript",
    "codeTokens": 51,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/line.md#2025-04-11_snippet_12",
    "pageTitle": "D3.js Line Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const line = d3.line().curve(d3.curveStep);"
      }
    ],
    "relevance": 0.93
  },
  {
    "codeTitle": "Merging Arrays with d3.merge in JavaScript",
    "codeDescription": "Flattens an iterable of iterables into a single array. More convenient than array.concat when working with arrays of arrays or iterables of iterables.",
    "codeLanguage": "javascript",
    "codeTokens": 64,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/transform.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Data Transformation Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.merge([[1], [2, 3]]) // [1, 2, 3]"
      },
      {
        "language": "javascript",
        "code": "d3.merge(new Set([new Set([1]), new Set([2, 3])])) // [1, 2, 3]"
      }
    ],
    "relevance": 0.928
  },
  {
    "codeTitle": "Using D3 timeParse Method",
    "codeDescription": "Shows the basic usage of d3.timeParse method to create a date parser with a specific format specifier.",
    "codeLanguage": "javascript",
    "codeTokens": 42,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-time-format.md#2025-04-11_snippet_4",
    "pageTitle": "D3 Time Format Library Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.timeParse(\"%b %d\")"
      }
    ],
    "relevance": 0.928
  },
  {
    "codeTitle": "Controlling Step Size in nice() Method with Count Parameter in D3.js",
    "codeDescription": "Demonstrates how to use the count parameter with nice() to have greater control over the step size used to extend the domain bounds.",
    "codeLanguage": "javascript",
    "codeTokens": 82,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_26",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleLinear([0.241079, 0.969679], [0, 960]).nice(40);\nx.domain(); // [0.24, 0.98]"
      }
    ],
    "relevance": 0.928
  },
  {
    "codeTitle": "Setting Staggered Transition Delay in D3",
    "codeDescription": "Sets a staggered delay for transitions across a set of elements. The delay is calculated as a multiple of the element's index.",
    "codeLanguage": "javascript",
    "codeTokens": 50,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-transition/timing.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Transition Timing Configuration",
    "codeList": [
      {
        "language": "javascript",
        "code": "transition.delay((d, i) => i * 10);"
      }
    ],
    "relevance": 0.928
  },
  {
    "codeTitle": "Creating a Zoom Interpolator in JavaScript using D3",
    "codeDescription": "Demonstrates how to create a zoom interpolator between two views using d3.interpolateZoom. The interpolator calculates intermediate values for smooth transitions between different zoom levels and positions.",
    "codeLanguage": "JavaScript",
    "codeTokens": 88,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-interpolate/zoom.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Zoom Interpolation Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.interpolateZoom([30, 30, 40], [135, 85, 60])(0.5) // [72, 52, 126.04761005270991]"
      }
    ],
    "relevance": 0.926
  },
  {
    "codeTitle": "Creating HSL Color in D3 JavaScript",
    "codeDescription": "Constructs a new HSL color using d3.hsl() function. The example shows creating a yellow color in HSL space.",
    "codeLanguage": "javascript",
    "codeTokens": 68,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-color.md#2025-04-11_snippet_18",
    "pageTitle": "D3 Color Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.hsl(\"yellow\") // {h: 60, s: 1, l: 0.5, opacity: 1}"
      }
    ],
    "relevance": 0.926
  },
  {
    "codeTitle": "Using d3.extent to find value range in JavaScript",
    "codeDescription": "Returns the minimum and maximum values in an iterable as a two-element array [min, max]. An optional accessor function can be provided to transform values before comparison.",
    "codeLanguage": "javascript",
    "codeTokens": 77,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/summarize.md#2025-04-11_snippet_9",
    "pageTitle": "D3.js Data Summarization Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.extent([3, 2, 1, 1, 6, 2, 4]) // [1, 6]"
      },
      {
        "language": "javascript",
        "code": "d3.extent(alphabet, (d) => d.frequency) // [0.00074, 0.12702]"
      },
      {
        "language": "javascript",
        "code": "d3.extent(alphabet, (d) => d.doesnotexist) // [undefined, undefined]"
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "Parsing CSV Data with d3.csvParse",
    "codeDescription": "Parses a CSV string into an array of objects with column names as properties. The result includes a columns property with the column names in order.",
    "codeLanguage": "js",
    "codeTokens": 81,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-dsv.md#2025-04-11_snippet_0",
    "pageTitle": "d3-dsv: Parsing and Formatting Delimiter-Separated Values",
    "codeList": [
      {
        "language": "js",
        "code": "d3.csvParse(\"foo,bar\\n1,2\") // [{foo: \"1\", bar: \"2\"}, columns: [\"foo\", \"bar\"]]"
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "Loading HTML Documents with d3.html",
    "codeDescription": "Shows how to fetch and parse an HTML file using d3.html(). This method fetches the file as text and then parses it as HTML, returning a DOM Document object.",
    "codeLanguage": "javascript",
    "codeTokens": 58,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-fetch.md#2025-04-11_snippet_7",
    "pageTitle": "D3-Fetch Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const document = await d3.html(\"example.html\");"
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "Constructing D3 Arc Generator with Default Settings",
    "codeDescription": "Shows how to create a new D3 arc generator with default settings.",
    "codeLanguage": "javascript",
    "codeTokens": 32,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/arc.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Arc Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const arc = d3.arc();"
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "Using Quantile Scales to Map Values in D3.js",
    "codeDescription": "Demonstrates how to use a quantile scale to map numeric values to corresponding values in the output range, in this case mapping penguin weights to color values.",
    "codeLanguage": "javascript",
    "codeTokens": 80,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/quantile.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Quantile Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "color(3000); // \"#eff3ff\"\ncolor(4000); // \"#6baed6\"\ncolor(5000); // \"#08519c\""
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "Chained D3 Treemap Layout Configuration in JavaScript",
    "codeDescription": "Demonstrates a more concise way to configure and apply a D3 treemap layout using method chaining.",
    "codeLanguage": "JavaScript",
    "codeTokens": 93,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/hierarchy.md#2025-04-11_snippet_6",
    "pageTitle": "D3.js Hierarchy Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.treemap()\n    .size([width, height])\n    .padding(2)\n  (root\n      .sum((d) => d.value)\n      .sort((a, b) => b.height - a.height || b.value - a.value))\n  .descendants()"
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "Creating a Geographic Path Generator for SVG in JavaScript",
    "codeDescription": "Demonstrates how to create a new geographic path generator with a specified projection for rendering SVG paths.",
    "codeLanguage": "javascript",
    "codeTokens": 43,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/path.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Geographic Path Generation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const path = d3.geoPath(projection); // for SVG"
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "Setting Band Scale Alignment in D3",
    "codeDescription": "Sets the alignment of the band scale which determines how outer padding is distributed in the range. The alignment value must be in the range [0, 1].",
    "codeLanguage": "javascript",
    "codeTokens": 72,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/band.md#2025-04-11_snippet_9",
    "pageTitle": "D3.js Band Scale Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleBand([\"a\", \"b\", \"c\"], [0, 960]).align({{align}});"
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "Generating Bates Distribution Random Numbers with D3 in JavaScript",
    "codeDescription": "Shows how to use d3.randomBates() to generate random numbers with a Bates distribution, using 3 independent variables.",
    "codeLanguage": "javascript",
    "codeTokens": 53,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-random.md#2025-04-11_snippet_4",
    "pageTitle": "D3 Random Number Generation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.randomBates(3) // generates numbers between 0 and 1"
      }
    ],
    "relevance": 0.924
  },
  {
    "codeTitle": "Creating a D3 Quadtree",
    "codeDescription": "Demonstrates different ways to create a new quadtree using d3.quadtree(), including with and without initial data and custom accessors.",
    "codeLanguage": "JavaScript",
    "codeTokens": 49,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-quadtree.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Quadtree Implementation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const tree = d3.quadtree(data);"
      },
      {
        "language": "javascript",
        "code": "const tree = d3.quadtree().addAll(data);"
      },
      {
        "language": "javascript",
        "code": "const tree = d3.quadtree().x(x).y(y).addAll(data);"
      }
    ],
    "relevance": 0.923
  },
  {
    "codeTitle": "Using d3.least to find minimum elements with custom comparators in JavaScript",
    "codeDescription": "Returns the least element of an iterable according to a specified comparator or accessor function. The comparator can be a two-argument function or a single-argument accessor with natural ordering.",
    "codeLanguage": "javascript",
    "codeTokens": 83,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/summarize.md#2025-04-11_snippet_5",
    "pageTitle": "D3.js Data Summarization Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.least(alphabet, (a, b) => a.frequency - b.frequency) // {letter: \"Z\", frequency: 0.00074}"
      },
      {
        "language": "javascript",
        "code": "d3.least(alphabet, (a, b) => b.frequency - a.frequency) // {letter: \"E\", frequency: 0.12702}"
      },
      {
        "language": "javascript",
        "code": "d3.least(alphabet, (d) => d.frequency) // {letter: \"Z\", frequency: 0.00074}"
      },
      {
        "language": "javascript",
        "code": "d3.least(alphabet, (d) => -d.frequency) // {letter: \"E\", frequency: 0.12702}"
      },
      {
        "language": "javascript",
        "code": "d3.least(alphabet.map((d) => d.frequency)) // 0.00074"
      },
      {
        "language": "javascript",
        "code": "d3.least([]) // undefined"
      }
    ],
    "relevance": 0.922
  },
  {
    "codeTitle": "Creating a Sequential Scale with Default Domain in JavaScript",
    "codeDescription": "Creates a sequential scale with the default domain [0, 1] and the Blues color interpolator. When domain is not specified, it defaults to [0, 1].",
    "codeLanguage": "javascript",
    "codeTokens": 62,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/sequential.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Sequential Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleSequential(d3.interpolateBlues);"
      }
    ],
    "relevance": 0.922
  },
  {
    "codeTitle": "Dispatching Custom Events in JavaScript",
    "codeDescription": "Shows how to dispatch custom events after handling a native click event, preserving the current context and arguments using the apply() method of the dispatch object.",
    "codeLanguage": "javascript",
    "codeTokens": 60,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-dispatch.md#2025-04-11_snippet_4",
    "pageTitle": "D3-Dispatch Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection.on(\"click\", function() {\n  dispatch.apply(\"custom\", this, arguments);\n});"
      }
    ],
    "relevance": 0.922
  },
  {
    "codeTitle": "Setting Render Context for D3 Geographic Path Generator",
    "codeDescription": "Illustrates how to set the render context for a geographic path generator to use Canvas rendering.",
    "codeLanguage": "javascript",
    "codeTokens": 49,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/path.md#2025-04-11_snippet_12",
    "pageTitle": "D3 Geographic Path Generation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const context = canvas.getContext(\"2d\");\nconst path = d3.geoPath().context(context);"
      }
    ],
    "relevance": 0.922
  },
  {
    "codeTitle": "Creating a Sequential Scale with Array Output Range in JavaScript",
    "codeDescription": "Creates a sequential scale with an array output range instead of an interpolator function. The array is automatically converted to an interpolator using d3.interpolate.",
    "codeLanguage": "javascript",
    "codeTokens": 56,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/sequential.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js Sequential Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleSequential([\"red\", \"blue\"]);"
      }
    ],
    "relevance": 0.92
  },
  {
    "codeTitle": "Setting Canvas Context for D3.js Arc Generator",
    "codeDescription": "Demonstrates how to set the rendering context for a D3 arc generator to draw on a canvas element.",
    "codeLanguage": "javascript",
    "codeTokens": 51,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/arc.md#2025-04-11_snippet_14",
    "pageTitle": "D3 Arc Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const context = canvas.getContext(\"2d\");\nconst arc = d3.arc().context(context);"
      }
    ],
    "relevance": 0.92
  },
  {
    "codeTitle": "Initializing a D3 Force Simulation with Multiple Forces in JavaScript",
    "codeDescription": "Creates a new D3 force simulation with nodes and assigns multiple forces including charge repulsion, link constraints, and centering force. This is a common pattern for graph layout visualization.",
    "codeLanguage": "javascript",
    "codeTokens": 93,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-force/simulation.md#2025-04-11_snippet_1",
    "pageTitle": "Force Simulations in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "const simulation = d3.forceSimulation(nodes)\n    .force(\"charge\", d3.forceManyBody())\n    .force(\"link\", d3.forceLink(links))\n    .force(\"center\", d3.forceCenter());"
      }
    ],
    "relevance": 0.92
  },
  {
    "codeTitle": "Creating a Format Function with d3.format",
    "codeDescription": "This snippet shows how to create a reusable format function using d3.format, which can be used to format numbers with two decimal places.",
    "codeLanguage": "javascript",
    "codeTokens": 50,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-format.md#2025-04-11_snippet_3",
    "pageTitle": "d3-format: Number Formatting Library",
    "codeList": [
      {
        "language": "javascript",
        "code": "const f = d3.format(\".2f\");"
      }
    ],
    "relevance": 0.92
  },
  {
    "codeTitle": "Applying a treemap layout to hierarchical data in D3",
    "codeDescription": "Lays out the specified hierarchy root node, assigning rectangle coordinates to each node in the hierarchy. Requires calling root.sum() before using the layout.",
    "codeLanguage": "JavaScript",
    "codeTokens": 48,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/treemap.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Treemap Layout Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "*treemap*(*root*)"
      }
    ],
    "relevance": 0.92
  },
  {
    "codeTitle": "Creating a Basic Diverging Scale in D3.js",
    "codeDescription": "Constructs a new diverging scale with a specified domain and interpolator function. This example uses the RdBu color interpolator with a domain from -1 to 1.",
    "codeLanguage": "javascript",
    "codeTokens": 74,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/diverging.md#2025-04-11_snippet_0",
    "pageTitle": "Diverging Scales in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleDiverging([-1, 0, 1], d3.interpolateRdBu);"
      }
    ],
    "relevance": 0.92
  },
  {
    "codeTitle": "D3 Interval Filter Example",
    "codeDescription": "Demonstrates how to create a filtered interval that returns specific dates of each month using a test function.",
    "codeLanguage": "javascript",
    "codeTokens": 55,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-time.md#2025-04-11_snippet_6",
    "pageTitle": "D3 Time Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.timeDay.filter((d) => (d.getDate() - 1) % 10 === 0)"
      }
    ],
    "relevance": 0.92
  },
  {
    "codeTitle": "Setting Padding in D3 Partition Layout",
    "codeDescription": "Sets or gets the padding between adjacent children in the partition layout. The padding is specified as a number. Default padding is zero.",
    "codeLanguage": "javascript",
    "codeTokens": 44,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/partition.md#2025-04-11_snippet_4",
    "pageTitle": "D3 Partition Layout Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "*partition*.padding(*padding*)"
      }
    ],
    "relevance": 0.92
  },
  {
    "codeTitle": "Setting End Angle for D3.js Pie Generator in JavaScript",
    "codeDescription": "Configures the overall end angle for the pie chart generated by a D3.js pie generator. The angle is specified in radians, with 0 at 12 o'clock and positive angles proceeding clockwise.",
    "codeLanguage": "javascript",
    "codeTokens": 66,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/pie.md#2025-04-11_snippet_6",
    "pageTitle": "D3.js Pie Chart Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const pie = d3.pie().endAngle(Math.PI);"
      }
    ],
    "relevance": 0.92
  },
  {
    "codeTitle": "Filtering Elements with D3 Matcher",
    "codeDescription": "Demonstrates two equivalent ways to filter div elements in a D3 selection using the filter method.",
    "codeLanguage": "javascript",
    "codeTokens": 40,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/selecting.md#2025-04-11_snippet_6",
    "pageTitle": "D3.js DOM Element Selection Guide",
    "codeList": [
      {
        "language": "javascript",
        "code": "const div = selection.filter(\"div\");"
      },
      {
        "language": "javascript",
        "code": "const div = selection.filter(d3.matcher(\"div\"));"
      }
    ],
    "relevance": 0.919
  },
  {
    "codeTitle": "Using d3.minIndex to find index of minimum value in JavaScript",
    "codeDescription": "Returns the index of the minimum value in an iterable rather than the value itself. An optional accessor function can be used to transform values before comparison.",
    "codeLanguage": "javascript",
    "codeTokens": 71,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/summarize.md#2025-04-11_snippet_2",
    "pageTitle": "D3.js Data Summarization Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.minIndex([3, 2, 1, 1, 6, 2, 4]) // 2"
      },
      {
        "language": "javascript",
        "code": "d3.minIndex(alphabet, (d) => d.frequency) // 25"
      },
      {
        "language": "javascript",
        "code": "alphabet[d3.minIndex(alphabet, (d) => d.frequency)] // {letter: \"Z\", frequency: 0.00074}"
      }
    ],
    "relevance": 0.918
  },
  {
    "codeTitle": "Drawing a Circle with Canvas Methods in JavaScript",
    "codeDescription": "A function that draws a circle on a 2D context using moveTo and arc methods. This demonstrates the type of canvas code that can be used with d3-path.",
    "codeLanguage": "javascript",
    "codeTokens": 83,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-path.md#2025-04-11_snippet_0",
    "pageTitle": "D3-Path Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function drawCircle(context, radius) {\n  context.moveTo(radius, 0);\n  context.arc(0, 0, radius, 0, 2 * Math.PI);\n}"
      }
    ],
    "relevance": 0.918
  },
  {
    "codeTitle": "Setting the Maximum Digits for a D3 Line Generator",
    "codeDescription": "Configures a line generator to use a specific number of digits after the decimal separator when generating SVG path data.",
    "codeLanguage": "javascript",
    "codeTokens": 45,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/line.md#2025-04-11_snippet_16",
    "pageTitle": "D3.js Line Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const line = d3.line().digits(3);"
      }
    ],
    "relevance": 0.918
  },
  {
    "codeTitle": "Formatting Objects as CSV with Column Selection",
    "codeDescription": "Formats an array of objects as a CSV string, allowing specification of which columns to include and their order. This example only includes the 'foo' column.",
    "codeLanguage": "js",
    "codeTokens": 77,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-dsv.md#2025-04-11_snippet_8",
    "pageTitle": "d3-dsv: Parsing and Formatting Delimiter-Separated Values",
    "codeList": [
      {
        "language": "js",
        "code": "d3.csvFormat([{foo: \"1\", bar: \"2\"}]) // \"foo,bar\\n1,2\""
      },
      {
        "language": "js",
        "code": "d3.csvFormat([{foo: \"1\", bar: \"2\"}], [\"foo\"]) // \"foo\\n1\""
      }
    ],
    "relevance": 0.918
  },
  {
    "codeTitle": "Sorting D3 Hierarchy Nodes for Circle Packing in JavaScript",
    "codeDescription": "Shows how to sort nodes in a D3 hierarchy for optimal circle packing layout.",
    "codeLanguage": "JavaScript",
    "codeTokens": 56,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/hierarchy.md#2025-04-11_snippet_7",
    "pageTitle": "D3.js Hierarchy Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "root\n    .sum((d) => d.value)\n    .sort((a, b) => b.value - a.value);"
      }
    ],
    "relevance": 0.916
  },
  {
    "codeTitle": "Mapping Iterables with d3.map in JavaScript",
    "codeDescription": "Like Array.map but works with any iterable. Returns a new array with the results of calling the provided function on every element.",
    "codeLanguage": "javascript",
    "codeTokens": 75,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/transform.md#2025-04-11_snippet_6",
    "pageTitle": "D3 Data Transformation Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.map(new Set([0, 2, 3, 4]), (d) => d & 1) // [0, 0, 1, 0]"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Interpolating Text with Integer Values from 0 to 100 in D3.js",
    "codeDescription": "Example demonstrating how to use textTween to animate text with integer values from 0 to 100. This uses d3.interpolateRound to create smooth transitions between integer values.",
    "codeLanguage": "javascript",
    "codeTokens": 63,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-transition/modifying.md#2025-04-11_snippet_6",
    "pageTitle": "D3.js Element Modification with Transitions",
    "codeList": [
      {
        "language": "javascript",
        "code": "transition.textTween(() => d3.interpolateRound(0, 100));"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Vue Component Setup for Tree Layout Example",
    "codeDescription": "Sets up a Vue component that imports Plot from Observable and defines a data structure of hierarchical 'gods' to be displayed in a tree layout.",
    "codeLanguage": "vue",
    "codeTokens": 129,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/tree.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Tree Layout Documentation",
    "codeList": [
      {
        "language": "vue",
        "code": "<script setup>\n\nimport * as Plot from \"@observablehq/plot\";\nimport PlotRender from \"../components/PlotRender.js\";\n\nconst gods = [\n  \"Chaos/Gaia/Mountains\",\n  \"Chaos/Gaia/Pontus\",\n  \"Chaos/Gaia/Uranus\",\n  \"Chaos/Eros\",\n  \"Chaos/Erebus\",\n  \"Chaos/Tartarus\"\n];\n\n</script>"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Creating a Stack Generator with Tidy Data in D3",
    "codeDescription": "Demonstrates how to compute stacked series from tidy data by indexing the data by date and fruit, then using the d3.stack() generator to create a layered data structure suitable for stacked visualizations.",
    "codeLanguage": "javascript",
    "codeTokens": 115,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/stack.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Stacks Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const series = d3.stack()\n    .keys(d3.union(data.map(d => d.fruit))) // apples, bananas, cherries, …\n    .value(([, group], key) => group.get(key).sales)\n  (d3.index(data, d => d.date, d => d.fruit));"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Disabling Double-click Zoom Transitions in D3",
    "codeDescription": "Example showing how to disable double-click and double-tap zoom transitions by removing the zoom behavior's dblclick event listener after applying the zoom behavior to a selection.",
    "codeLanguage": "javascript",
    "codeTokens": 61,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-zoom.md#2025-04-11_snippet_10",
    "pageTitle": "D3 Zoom Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection\n    .call(zoom)\n    .on(\"dblclick.zoom\", null);"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Formatting a Color as Hexadecimal with Alpha in D3.js",
    "codeDescription": "Demonstrates formatting a color as an 8-digit hexadecimal string (including alpha channel) using formatHex8().",
    "codeLanguage": "javascript",
    "codeTokens": 52,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-color.md#2025-04-11_snippet_12",
    "pageTitle": "D3 Color Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.color(\"steelblue\").formatHex8() // \"#4682b4ff\""
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Rendering Equal Earth Projection with D3 and Vue",
    "codeDescription": "This snippet illustrates the use of D3's geoEqualEarth() function to create an Equal Earth projection. It configures the projection with specific height, rotation, extent, and precision settings for display in a WorldMap component.",
    "codeLanguage": "vue",
    "codeTokens": 124,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/cylindrical.md#2025-04-11_snippet_4",
    "pageTitle": "D3 Geo Projections Documentation",
    "codeList": [
      {
        "language": "vue",
        "code": "<WorldMap :height=\"width * 0.49\" :projection='d3.geoEqualEarth().rotate([0, 0]).fitExtent([[1, 1], [width - 1, width * 0.49 - 1]], {type: \"Sphere\"}).precision(0.2)' />"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Background-Safe Animation Scheduling in D3 4.0",
    "codeDescription": "Shows the preferred approach in D3 4.0 using d3.interval instead of setInterval to prevent transitions from accumulating in background tabs.",
    "codeLanguage": "javascript",
    "codeTokens": 67,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_74",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.interval(function() {\n  d3.selectAll(\"div\").transition().call(someAnimation); // GOOD\n}, 1000);"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Configuring Cubehelix Color Interpolation with Custom Gamma in D3.js",
    "codeDescription": "Shows how to use Cubehelix color interpolation with a custom gamma value of 3 for a linear scale transitioning from brown to steelblue.",
    "codeLanguage": "javascript",
    "codeTokens": 83,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_21",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleLinear()\n    .domain([10, 100])\n    .range([\"brown\", \"steelblue\"])\n    .interpolate(d3.interpolateCubehelix.gamma(3));"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Self-terminating Timer in D3 3.x",
    "codeDescription": "Shows how to create a timer in D3 3.x that stops itself after one second by returning true from the callback function.",
    "codeLanguage": "javascript",
    "codeTokens": 61,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_70",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.timer(function(elapsed) {\n  console.log(elapsed);\n  return elapsed >= 1000;\n});"
      }
    ],
    "relevance": 0.914
  },
  {
    "codeTitle": "Setting the tiling method for a D3 treemap layout",
    "codeDescription": "Sets the tiling method to the specified function or returns the current tiling method if no argument is provided. The default is treemapSquarify.",
    "codeLanguage": "JavaScript",
    "codeTokens": 52,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/treemap.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Treemap Layout Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "*treemap*.tile(*tile*)"
      }
    ],
    "relevance": 0.913
  },
  {
    "codeTitle": "Manipulating Color Properties in D3.js",
    "codeDescription": "Example of how to modify color properties (hue and saturation) in HSL color space and convert back to a string representation in RGB format.",
    "codeLanguage": "javascript",
    "codeTokens": 67,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-color.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Color Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "c.h += 90;\nc.s += 0.2;\nc + \"\"; // rgb(198, 45, 205)"
      }
    ],
    "relevance": 0.912
  },
  {
    "codeTitle": "Applying a Function to a D3 Selection Using .call()",
    "codeDescription": "Shows how to apply a previously defined function to a D3 selection using the .call() method. This approach maintains method chaining as .call() always returns the selection itself.",
    "codeLanguage": "javascript",
    "codeTokens": 62,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/control-flow.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Selection Control Flow Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.selectAll(\"div\").call(name, \"John\", \"Snow\");"
      }
    ],
    "relevance": 0.912
  },
  {
    "codeTitle": "Creating a Symbol Generator with a Cross Symbol",
    "codeDescription": "Creates an SVG path element and sets its 'd' attribute using a D3 symbol generator with the symbolCross type.",
    "codeLanguage": "javascript",
    "codeTokens": 54,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/symbol.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Symbol Generator for Data Visualization",
    "codeList": [
      {
        "language": "javascript",
        "code": "svg.append(\"path\").attr(\"d\", d3.symbol(d3.symbolCross));"
      }
    ],
    "relevance": 0.912
  },
  {
    "codeTitle": "Parsing CSV Data with d3.csvParse in JavaScript",
    "codeDescription": "Demonstrates how to parse CSV text into an array of objects using D3's csvParse function. This converts raw CSV text into structured data objects with name and parent properties.",
    "codeLanguage": "js",
    "codeTokens": 94,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/stratify.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Stratify Hierarchical Data Operator",
    "codeList": [
      {
        "language": "csv",
        "code": "name,parent\nEve,\nCain,Eve\nSeth,Eve\nEnos,Seth\nNoam,Seth\nAbel,Eve\nAwan,Eve\nEnoch,Awan\nAzura,Eve"
      },
      {
        "language": "js",
        "code": "const table = d3.csvParse(text);"
      }
    ],
    "relevance": 0.912
  },
  {
    "codeTitle": "Examining FormatSpecifier Object Structure in D3.js",
    "codeDescription": "Example of the object structure returned by formatSpecifier with properties corresponding to format specifications.",
    "codeLanguage": "javascript",
    "codeTokens": 93,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-format.md#2025-04-11_snippet_9",
    "pageTitle": "d3-format: Number Formatting Library",
    "codeList": [
      {
        "language": "javascript",
        "code": "FormatSpecifier {\n  \"fill\": \" \",\n  \"align\": \">\",\n  \"sign\": \"-\",\n  \"symbol\": \"\",\n  \"zero\": false,\n  \"width\": undefined,\n  \"comma\": false,\n  \"precision\": undefined,\n  \"trim\": false,\n  \"type\": \"s\"\n}"
      }
    ],
    "relevance": 0.912
  },
  {
    "codeTitle": "Generating a Default Circle Symbol Path Data",
    "codeDescription": "Invokes a default symbol generator with no arguments, which produces a circle path with a size of 64 square pixels.",
    "codeLanguage": "javascript",
    "codeTokens": 91,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/symbol.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Symbol Generator for Data Visualization",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.symbol()() // \"M4.514,0A4.514,4.514,0,1,1,-4.514,0A4.514,4.514,0,1,1,4.514,0\""
      }
    ],
    "relevance": 0.91
  },
  {
    "codeTitle": "Creating a Partition Layout in D3",
    "codeDescription": "Creates a new partition layout with default settings. This is the starting point for using the partition layout in D3.",
    "codeLanguage": "javascript",
    "codeTokens": 36,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/partition.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Partition Layout Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "partition()"
      }
    ],
    "relevance": 0.91
  },
  {
    "codeTitle": "Formatting Tick Labels with D3.js axis.tickFormat()",
    "codeDescription": "Shows how to set a custom formatter for axis tick labels using D3's formatting system. This example applies comma-grouping for thousands with no decimal places.",
    "codeLanguage": "javascript",
    "codeTokens": 54,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-axis.md#2025-04-11_snippet_5",
    "pageTitle": "D3.js Axis Component Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "axis.tickFormat(d3.format(\",.0f\"));"
      }
    ],
    "relevance": 0.91
  },
  {
    "codeTitle": "Packing Sibling Circles in D3",
    "codeDescription": "Packs an array of circles efficiently using the front-chain packing algorithm. Each input circle must have a radius (r property), and the function computes x and y coordinates for each circle's center.",
    "codeLanguage": "javascript",
    "codeTokens": 57,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/pack.md#2025-04-11_snippet_5",
    "pageTitle": "D3 Circle Pack Layout Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "packSiblings(*circles*)"
      }
    ],
    "relevance": 0.91
  },
  {
    "codeTitle": "Representing Tabular Data in JavaScript for D3 Stack",
    "codeDescription": "Example of how to represent tidy tabular data as a JavaScript array of objects for use with D3's stack generator. The data shows monthly fruit sales across different time periods.",
    "codeLanguage": "javascript",
    "codeTokens": 455,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/stack.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Stacks Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const data = [\n  {date: new Date(\"2015-01-01\"), fruit: \"apples\", sales: 3840},\n  {date: new Date(\"2015-01-01\"), fruit: \"bananas\", sales: 1920},\n  {date: new Date(\"2015-01-01\"), fruit: \"cherries\", sales: 960},\n  {date: new Date(\"2015-01-01\"), fruit: \"durians\", sales: 400},\n  {date: new Date(\"2015-02-01\"), fruit: \"apples\", sales: 1600},\n  {date: new Date(\"2015-02-01\"), fruit: \"bananas\", sales: 1440},\n  {date: new Date(\"2015-02-01\"), fruit: \"cherries\", sales: 960},\n  {date: new Date(\"2015-02-01\"), fruit: \"durians\", sales: 400},\n  {date: new Date(\"2015-03-01\"), fruit: \"apples\", sales: 640},\n  {date: new Date(\"2015-03-01\"), fruit: \"bananas\", sales: 960},\n  {date: new Date(\"2015-03-01\"), fruit: \"cherries\", sales: 640},\n  {date: new Date(\"2015-03-01\"), fruit: \"durians\", sales: 400},\n  {date: new Date(\"2015-04-01\"), fruit: \"apples\", sales: 320},\n  {date: new Date(\"2015-04-01\"), fruit: \"bananas\", sales: 480},\n  {date: new Date(\"2015-04-01\"), fruit: \"cherries\", sales: 640},\n  {date: new Date(\"2015-04-01\"), fruit: \"durians\", sales: 400}\n];"
      }
    ],
    "relevance": 0.91
  },
  {
    "codeTitle": "Creating a Log Scale in D3.js",
    "codeDescription": "Example of creating a logarithmic scale in D3.js with a custom base of 2 for mapping values.",
    "codeLanguage": "javascript",
    "codeTokens": 60,
    "codeId": "https://github.com/d3/d3/blob/main/docs/index.md#2025-04-11_snippet_5",
    "pageTitle": "D3.js Continuous Scale Classes",
    "codeList": [
      {
        "language": "javascript",
        "code": "var log = d3.scaleLog().base(2).domain([1, 4]).range([0, 100]);"
      }
    ],
    "relevance": 0.91
  },
  {
    "codeTitle": "Indexing Data with d3.index() in JavaScript",
    "codeDescription": "Creates an index map where each key maps to a single value. This example indexes stock data by date for quick lookup, throwing an error if multiple values exist for the same date.",
    "codeLanguage": "javascript",
    "codeTokens": 68,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/group.md#2025-04-11_snippet_10",
    "pageTitle": "D3.js Data Grouping Methods Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const aaplDate = d3.index(aapl, (d) => d.Date);"
      }
    ],
    "relevance": 0.91
  },
  {
    "codeTitle": "Configuring Stack Order with stackOrderInsideOut in D3.js",
    "codeDescription": "Sets the stack order using d3.stackOrderInsideOut, which places earliest series (by maximum value) on the inside and later series on the outside. Recommended for streamgraphs with wiggle offset.",
    "codeLanguage": "javascript",
    "codeTokens": 66,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/stack.md#2025-04-11_snippet_12",
    "pageTitle": "D3 Stacks Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const stack = d3.stack().order(d3.stackOrderInsideOut);"
      }
    ],
    "relevance": 0.91
  },
  {
    "codeTitle": "Getting an Element Attribute with D3 Selection",
    "codeDescription": "Retrieves the current value of the \"color\" attribute from the first non-null element in the selection. This is useful when you know the selection contains exactly one element.",
    "codeLanguage": "javascript",
    "codeTokens": 54,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/modifying.md#2025-04-11_snippet_3",
    "pageTitle": "D3 Selection Element Modification Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection.attr(\"color\") // \"red\""
      }
    ],
    "relevance": 0.91
  },
  {
    "codeTitle": "Various d3.format Examples",
    "codeDescription": "This series of examples showcases different formatting options available in d3-format, including percentages, currencies, padding, SI prefixes, and more.",
    "codeLanguage": "javascript",
    "codeTokens": 58,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-format.md#2025-04-11_snippet_2",
    "pageTitle": "d3-format: Number Formatting Library",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.format(\".0%\")(0.123) // rounded percentage, \"12%\""
      },
      {
        "language": "javascript",
        "code": "d3.format(\"($.2f\")(-3.5) // localized fixed-point currency, \"(£3.50)\""
      },
      {
        "language": "javascript",
        "code": "d3.format(\"+20\")(42) // space-filled and signed, \"                 +42\""
      },
      {
        "language": "javascript",
        "code": "d3.format(\".^20\")(42) // dot-filled and centered, \".........42.........\""
      },
      {
        "language": "javascript",
        "code": "d3.format(\".2s\")(42e6) // SI-prefix with two significant digits, \"42M\""
      },
      {
        "language": "javascript",
        "code": "d3.format(\"#x\")(48879) // prefixed lowercase hexadecimal, \"0xbeef\""
      },
      {
        "language": "javascript",
        "code": "d3.format(\",.2r\")(4223) // grouped thousands with two significant digits, \"4,200\""
      }
    ],
    "relevance": 0.908
  },
  {
    "codeTitle": "Multi-level Reduction with d3.rollup() in JavaScript",
    "codeDescription": "Creates a nested InternMap of reduced values using multiple key functions. This example counts penguins by both species and sex.",
    "codeLanguage": "javascript",
    "codeTokens": 71,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/group.md#2025-04-11_snippet_7",
    "pageTitle": "D3.js Data Grouping Methods Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const speciesSexCount = d3.rollup(penguins, (D) => D.length, (d) => d.species, (d) => d.sex);"
      }
    ],
    "relevance": 0.908
  },
  {
    "codeTitle": "Setting a custom threshold function for a bin generator in D3",
    "codeDescription": "Configures a bin generator with a custom threshold function that uses the median of the values as a single threshold, resulting in two bins.",
    "codeLanguage": "javascript",
    "codeTokens": 58,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/bin.md#2025-04-11_snippet_10",
    "pageTitle": "D3 Binning Data",
    "codeList": [
      {
        "language": "javascript",
        "code": "const bin = d3.bin().thresholds((values) => [d3.median(values)]);"
      }
    ],
    "relevance": 0.908
  },
  {
    "codeTitle": "Setting a domain for a bin generator in D3",
    "codeDescription": "Sets the domain (range of values to consider) for a bin generator to [0, 1]. Values outside this domain will be ignored when generating bins.",
    "codeLanguage": "javascript",
    "codeTokens": 57,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/bin.md#2025-04-11_snippet_4",
    "pageTitle": "D3 Binning Data",
    "codeList": [
      {
        "language": "javascript",
        "code": "const bin = d3.bin().domain([0, 1]);"
      }
    ],
    "relevance": 0.908
  },
  {
    "codeTitle": "Creating a Threshold Scale in D3.js",
    "codeDescription": "Demonstrates how to construct a new threshold scale with specified domain and range values. The example creates a color scale with thresholds at 0 and 1, mapping to red, white, and blue colors.",
    "codeLanguage": "javascript",
    "codeTokens": 75,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/threshold.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Threshold Scale Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleThreshold([0, 1], [\"red\", \"white\", \"blue\"]);"
      }
    ],
    "relevance": 0.906
  },
  {
    "codeTitle": "Filtering Iterables with d3.filter in JavaScript",
    "codeDescription": "Like Array.filter but works with any iterable. Returns a new array containing values that pass the test function.",
    "codeLanguage": "javascript",
    "codeTokens": 62,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/transform.md#2025-04-11_snippet_5",
    "pageTitle": "D3 Data Transformation Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.filter(new Set([0, 2, 3, 4]), (d) => d & 1) // [3]"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "Setting an Element Attribute with D3 Selection",
    "codeDescription": "Sets the \"color\" attribute to \"red\" on the selected elements. The attr method is used to modify element attributes and returns the selection for chaining.",
    "codeLanguage": "javascript",
    "codeTokens": 51,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/modifying.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Selection Element Modification Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection.attr(\"color\", \"red\")"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "Rendering a Radial Line Path in SVG using D3.js",
    "codeDescription": "Demonstrates how to use a radial line generator to create an SVG path element with the generated line data.",
    "codeLanguage": "javascript",
    "codeTokens": 54,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/radial-line.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Radial Line Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "svg.append(\"path\").attr(\"d\", line(data)).attr(\"stroke\", \"currentColor\");"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "Creating a Custom Bisector with an Accessor Function in JavaScript",
    "codeDescription": "Creates a new bisector using an accessor function that extracts the Date property from each data object. This allows bisection operations on arrays of objects sorted by their Date property.",
    "codeLanguage": "javascript",
    "codeTokens": 64,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/bisect.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Bisector Functions Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const bisector = d3.bisector((d) => d.Date);"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "Checking if a D3 Selection is Empty",
    "codeDescription": "Shows how to use the .empty() method to check if a D3 selection contains any (non-null) elements. Returns true if the selection is empty and false otherwise.",
    "codeLanguage": "javascript",
    "codeTokens": 59,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/control-flow.md#2025-04-11_snippet_4",
    "pageTitle": "D3 Selection Control Flow Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.selectAll(\"p\").empty() // false, here"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "Using schemeReds array in D3.js",
    "codeDescription": "A discrete sequential color scheme array with Red hues. The parameter k specifies the size of the color array to use, which must be between 3 and 9 inclusive.",
    "codeLanguage": "JavaScript",
    "codeTokens": 55,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale-chromatic/sequential.md#2025-04-11_snippet_11",
    "pageTitle": "D3.js Sequential Color Schemes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.schemeReds[k]"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "Generating Pie Data from Array in JavaScript",
    "codeDescription": "Uses a D3.js pie generator to compute angles for a pie chart based on an array of numeric data. The result is an array of objects representing each datum's arc angles.",
    "codeLanguage": "javascript",
    "codeTokens": 90,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/pie.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Pie Chart Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const data = [1, 1, 2, 3, 5, 8, 13, 21];\nconst pie = d3.pie();\nconst arcs = pie(data);"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "D3.js Join with Different Enter/Update Styles",
    "codeDescription": "Advanced join pattern showing different handling of enter and update selections with distinct styling.",
    "codeLanguage": "javascript",
    "codeTokens": 79,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/joining.md#2025-04-11_snippet_5",
    "pageTitle": "D3.js Data Joining Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "svg.selectAll(\"circle\")\n  .data(data)\n  .join(\n    enter => enter.append(\"circle\").attr(\"fill\", \"green\"),\n    update => update.attr(\"fill\", \"blue\")\n  )\n    .attr(\"stroke\", \"black\");"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "Unbinding Zoom Behavior from a Selection in D3",
    "codeDescription": "Removes the zoom behavior from a D3 selection by unbinding all zoom-related event listeners. This disables zoom functionality on the selected elements.",
    "codeLanguage": "javascript",
    "codeTokens": 45,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-zoom.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Zoom Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection.on(\".zoom\", null);"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "Setting Angle Accessor for Radial Area",
    "codeDescription": "Configures the angle accessor function that determines the angular position in radians.",
    "codeLanguage": "javascript",
    "codeTokens": 46,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/radial-area.md#2025-04-11_snippet_2",
    "pageTitle": "D3.js Radial Area Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const area = d3.areaRadial().angle((d) => a(d.Date));"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "Using Custom Random Number Sources with D3 Random Functions",
    "codeDescription": "Demonstrates how to use a custom random number generator as the source for D3's random distribution functions. This example creates a normal distribution random generator with a seeded linear congruential generator as its source.",
    "codeLanguage": "javascript",
    "codeTokens": 107,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-random.md#2025-04-11_snippet_17",
    "pageTitle": "D3 Random Number Generation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const seed = 0.44871573888282423; // any number in [0, 1)\nconst random = d3.randomNormal.source(d3.randomLcg(seed))(0, 1);\nrandom(); // -0.6253955998897069"
      }
    ],
    "relevance": 0.904
  },
  {
    "codeTitle": "Selecting Elements with D3 Selector",
    "codeDescription": "Shows two equivalent ways to select the first descendant div element using D3's select method.",
    "codeLanguage": "javascript",
    "codeTokens": 39,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/selecting.md#2025-04-11_snippet_7",
    "pageTitle": "D3.js DOM Element Selection Guide",
    "codeList": [
      {
        "language": "javascript",
        "code": "const div = selection.select(\"div\");"
      },
      {
        "language": "javascript",
        "code": "const div = selection.select(d3.selector(\"div\"));"
      }
    ],
    "relevance": 0.903
  },
  {
    "codeTitle": "Sorting Array in Ascending Order using D3.js",
    "codeDescription": "Demonstrates the use of d3.ascending as a comparator function with Array.sort() to arrange elements in ascending order.",
    "codeLanguage": "JavaScript",
    "codeTokens": 73,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/sort.md#2025-04-11_snippet_0",
    "pageTitle": "Sorting Data in D3.js",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "[39, 21, 1, 104, 22].sort(d3.ascending) // [1, 21, 22, 39, 104]"
      }
    ],
    "relevance": 0.902
  },
  {
    "codeTitle": "Rendering Internal Edges of Delaunay Triangulation in D3.js",
    "codeDescription": "Shows how to render the internal edges of a Delaunay triangulation using the halfedges and triangles data from the Delaunay object.",
    "codeLanguage": "JavaScript",
    "codeTokens": 155,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-delaunay/delaunay.md#2025-04-11_snippet_2",
    "pageTitle": "Delaunay Triangulations in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "const {points, halfedges, triangles} = delaunay;\nfor (let i = 0, n = halfedges.length; i < n; ++i) {\n  const j = halfedges[i];\n  if (j < i) continue;\n  const ti = triangles[i];\n  const tj = triangles[j];\n  context.moveTo(points[ti * 2], points[ti * 2 + 1]);\n  context.lineTo(points[tj * 2], points[tj * 2 + 1]);\n}"
      }
    ],
    "relevance": 0.902
  },
  {
    "codeTitle": "Creating LCH Color in D3 JavaScript",
    "codeDescription": "Constructs a new LCH (CIELCh<sub>ab</sub>) color using d3.lch() function. The example shows creating a yellow color in LCH space.",
    "codeLanguage": "javascript",
    "codeTokens": 95,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-color.md#2025-04-11_snippet_23",
    "pageTitle": "D3 Color Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.lch(\"yellow\") // {h: 99.57458688693687, c: 94.70776566727464, l: 97.60712516622824, opacity: 1}"
      }
    ],
    "relevance": 0.902
  },
  {
    "codeTitle": "Node and Link Definition Using Numeric Indices in D3.js",
    "codeDescription": "Example of defining nodes and links using the default index-based node identification, where source and target are specified as indices into the nodes array.",
    "codeLanguage": "javascript",
    "codeTokens": 106,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-force/link.md#2025-04-11_snippet_2",
    "pageTitle": "D3.js Link Force Implementation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const nodes = [\n  {\"id\": \"Alice\"},\n  {\"id\": \"Bob\"},\n  {\"id\": \"Carol\"}\n];\n\nconst links = [\n  {\"source\": 0, \"target\": 1}, // Alice → Bob\n  {\"source\": 1, \"target\": 2} // Bob → Carol\n];"
      }
    ],
    "relevance": 0.9
  },
  {
    "codeTitle": "Converting HSL to RGB Color Space in D3.js",
    "codeDescription": "Demonstrates creating an RGB color from an HSL color string using d3.rgb().",
    "codeLanguage": "javascript",
    "codeTokens": 66,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-color.md#2025-04-11_snippet_16",
    "pageTitle": "D3 Color Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.rgb(\"hsl(60, 100%, 50%)\") // {r: 255, g: 255, b: 0, opacity: 1}"
      }
    ],
    "relevance": 0.9
  },
  {
    "codeTitle": "Creating a Dispatch in JavaScript",
    "codeDescription": "Demonstrates how to create a dispatch object for 'start' and 'end' events using d3.dispatch().",
    "codeLanguage": "javascript",
    "codeTokens": 46,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-dispatch.md#2025-04-11_snippet_0",
    "pageTitle": "D3-Dispatch Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const dispatch = d3.dispatch(\"start\", \"end\");"
      }
    ],
    "relevance": 0.9
  },
  {
    "codeTitle": "Setting Pad Angle in D3.js Pie Generator",
    "codeDescription": "Creates a pie generator with a specified pad angle that determines the angular separation between adjacent arcs in radians.",
    "codeLanguage": "javascript",
    "codeTokens": 49,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/pie.md#2025-04-11_snippet_7",
    "pageTitle": "D3.js Pie Chart Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const pie = d3.pie().padAngle({{padAngle}});"
      }
    ],
    "relevance": 0.9
  },
  {
    "codeTitle": "Descending Group Sort with d3.groupSort() in JavaScript",
    "codeDescription": "Demonstrates how to sort groups in descending order by negating the group value. This example sorts penguin species by descending median body mass.",
    "codeLanguage": "javascript",
    "codeTokens": 91,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/group.md#2025-04-11_snippet_13",
    "pageTitle": "D3.js Data Grouping Methods Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.groupSort(penguins, (D) => -d3.median(D, (d) => d.body_mass_g), (d) => d.species) // [\"Gentoo\", \"Adelie\", \"Chinstrap\"]"
      }
    ],
    "relevance": 0.9
  },
  {
    "codeTitle": "Finding Median with D3.js",
    "codeDescription": "Examples of using d3.median() to find the middle value in a dataset using the R-7 method. Shows both direct array usage and accessor function implementation.",
    "codeLanguage": "javascript",
    "codeTokens": 68,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/summarize.md#2025-04-11_snippet_13",
    "pageTitle": "D3.js Data Summarization Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.median([1, 2, 2, 2, NaN, 3, null])"
      },
      {
        "language": "javascript",
        "code": "d3.median(penguins, (d) => d.body_mass_g)"
      }
    ],
    "relevance": 0.9
  },
  {
    "codeTitle": "Iterating Over Quadtree Data in D3.js v4.0",
    "codeDescription": "Example of how to iterate over all data points in a quadtree using the visit method in D3.js version 4.0. This code distinguishes between leaf nodes and internal nodes.",
    "codeLanguage": "JavaScript",
    "codeTokens": 85,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_40",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "quadtree.visit(function(node) {\n  if (!node.length) {\n    do {\n      console.log(node.data);\n    } while (node = node.next)\n  }\n});"
      }
    ],
    "relevance": 0.9
  },
  {
    "codeTitle": "Using quantize to Sample Uniform Values from an Interpolator in JavaScript",
    "codeDescription": "Demonstrates d3.quantize which returns uniformly-spaced samples from a specified interpolator. This example creates 4 evenly spaced color values between red and blue.",
    "codeLanguage": "js",
    "codeTokens": 106,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-interpolate/value.md#2025-04-11_snippet_12",
    "pageTitle": "D3.js Interpolation Functions",
    "codeList": [
      {
        "language": "js",
        "code": "d3.quantize(d3.interpolate(\"red\", \"blue\"), 4) // [\"rgb(255, 0, 0)\", \"rgb(170, 0, 85)\", \"rgb(85, 0, 170)\", \"rgb(0, 0, 255)\"]"
      }
    ],
    "relevance": 0.9
  },
  {
    "codeTitle": "Getting a Sequential Scale's Interpolator in JavaScript",
    "codeDescription": "Retrieves the current interpolator function from a sequential scale. This is useful for examining or reusing the interpolator.",
    "codeLanguage": "javascript",
    "codeTokens": 46,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/sequential.md#2025-04-11_snippet_6",
    "pageTitle": "D3.js Sequential Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "color.interpolator() // d3.interpolateBlues"
      }
    ],
    "relevance": 0.9
  },
  {
    "codeTitle": "Interpolating between colors in RGB color space using d3.interpolateRgb",
    "codeDescription": "Creates an RGB color space interpolator between two colors. The colors are converted to RGB using d3.rgb. Returns an RGB string.",
    "codeLanguage": "javascript",
    "codeTokens": 50,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-interpolate/color.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Color Interpolation Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.interpolateRgb(\"purple\", \"orange\")"
      }
    ],
    "relevance": 0.898
  },
  {
    "codeTitle": "Sorting Array in Descending Order using D3.js",
    "codeDescription": "Demonstrates the use of d3.descending as a comparator function with Array.sort() to arrange elements in descending order.",
    "codeLanguage": "JavaScript",
    "codeTokens": 73,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/sort.md#2025-04-11_snippet_1",
    "pageTitle": "Sorting Data in D3.js",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "[39, 21, 1, 104, 22].sort(d3.descending) // [104, 39, 22, 21, 1]"
      }
    ],
    "relevance": 0.898
  },
  {
    "codeTitle": "Default Y Accessor Implementation",
    "codeDescription": "The default implementation of the y accessor function used by D3 line generators, which assumes data points are two-element arrays.",
    "codeLanguage": "javascript",
    "codeTokens": 48,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/line.md#2025-04-11_snippet_8",
    "pageTitle": "D3.js Line Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function y(d) {\n  return d[1];\n}"
      }
    ],
    "relevance": 0.898
  },
  {
    "codeTitle": "Disabling Wheel-Driven Zooming in D3",
    "codeDescription": "Applies a zoom behavior but then specifically removes the wheel event listener, allowing native scrolling to work while maintaining other zoom functionality (like drag panning or touch pinch).",
    "codeLanguage": "javascript",
    "codeTokens": 60,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-zoom.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Zoom Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection\n    .call(zoom)\n    .on(\"wheel.zoom\", null);"
      }
    ],
    "relevance": 0.898
  },
  {
    "codeTitle": "Setting Curve Interpolation",
    "codeDescription": "Configures the curve interpolation method for the radial area.",
    "codeLanguage": "javascript",
    "codeTokens": 42,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/radial-area.md#2025-04-11_snippet_7",
    "pageTitle": "D3.js Radial Area Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const area = d3.areaRadial().curve(d3.curveBasisClosed);"
      }
    ],
    "relevance": 0.898
  },
  {
    "codeTitle": "Creating a B-spline interpolator in D3.js",
    "codeDescription": "Demonstrates the use of d3.interpolateBasis to create a uniform nonrational B-spline interpolator through a specified array of numeric values. This function is useful for creating smooth interpolations.",
    "codeLanguage": "javascript",
    "codeTokens": 87,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-interpolate/value.md#2025-04-11_snippet_9",
    "pageTitle": "D3.js Interpolation Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.interpolateBasis([0, 0.1, 0.4, 1])(0.5) // 0.2604166666666667"
      }
    ],
    "relevance": 0.896
  },
  {
    "codeTitle": "Permuting Array Elements using D3.js",
    "codeDescription": "Shows how to use d3.permute to create a new array by rearranging elements of the source array based on the provided keys.",
    "codeLanguage": "JavaScript",
    "codeTokens": 72,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/sort.md#2025-04-11_snippet_2",
    "pageTitle": "Sorting Data in D3.js",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.permute([\"a\", \"b\", \"c\"], [1, 2, 0]) // returns [\"b\", \"c\", \"a\"]"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Default Node ID Accessor in D3.js Link Force",
    "codeDescription": "The default node ID accessor function used by the link force, which returns the numeric index of each node.",
    "codeLanguage": "javascript",
    "codeTokens": 44,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-force/link.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Link Force Implementation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function id(d) {\n  return d.index;\n}"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Creating D3 Local Variable",
    "codeDescription": "Demonstrates how to declare a new local variable in D3 using d3.local(). Each local creates a distinct symbolic reference scoped by the DOM.",
    "codeLanguage": "javascript",
    "codeTokens": 47,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/locals.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Local Variables Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const foo = d3.local();"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Accessing Grouped Data with d3.group() in JavaScript",
    "codeDescription": "Shows how to retrieve elements from a grouped dataset. In this example, we access all penguins of the 'Adelie' species from the previously grouped data.",
    "codeLanguage": "javascript",
    "codeTokens": 59,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/group.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Data Grouping Methods Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "species.get(\"Adelie\") // Array(152)"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Creating a Pow Scale in D3.js",
    "codeDescription": "Shows how to create a power scale in D3.js that uses a power of 2.2 for mapping values.",
    "codeLanguage": "javascript",
    "codeTokens": 65,
    "codeId": "https://github.com/d3/d3/blob/main/docs/index.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Continuous Scale Classes",
    "codeList": [
      {
        "language": "javascript",
        "code": "var pow = d3.scalePow().exponent(2.2).domain([1, 2]).range([0, 100]);"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Creating Repeating Transitions with d3.active()",
    "codeDescription": "Shows how to create an infinite loop of transitions using the d3.active() method, which retrieves the active transition on an element. This example creates a 'disco mode' by cycling through red, green, and blue fills repeatedly.",
    "codeLanguage": "javascript",
    "codeTokens": 147,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-transition/selecting.md#2025-04-11_snippet_9",
    "pageTitle": "D3.js Transition Selection Methods Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.selectAll(\"circle\").transition()\n    .delay((d, i) => i * 50)\n    .on(\"start\", function repeat() {\n        d3.active(this)\n            .style(\"fill\", \"red\")\n          .transition()\n            .style(\"fill\", \"green\")\n          .transition()\n            .style(\"fill\", \"blue\")\n          .transition()\n            .on(\"start\", repeat);\n      });"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Applying Zoom Transform to Canvas 2D Context",
    "codeDescription": "Shows how to apply a D3 zoom transform to an HTML Canvas 2D context using the context's translate and scale methods in the correct order.",
    "codeLanguage": "javascript",
    "codeTokens": 57,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-zoom.md#2025-04-11_snippet_14",
    "pageTitle": "D3 Zoom Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "context.translate(transform.x, transform.y);\ncontext.scale(transform.k, transform.k);"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Calculating Tick Step with D3.js in JavaScript",
    "codeDescription": "The d3.tickStep() function returns the difference between adjacent tick values for given start, stop, and count. It returns a nicely-rounded value that is a power of ten multiplied by 1, 2 or 5.",
    "codeLanguage": "javascript",
    "codeTokens": 76,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/ticks.md#2025-04-11_snippet_2",
    "pageTitle": "D3.js Tick Generation and Range Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.tickStep(1, 9, 5) // 2"
      },
      {
        "language": "javascript",
        "code": "d3.tickStep(9, 1, 5) // -2"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Using schemeOrRd array in D3.js",
    "codeDescription": "A discrete sequential multi-hue color scheme array transitioning from Orange to Red. The parameter k specifies the size of the color array to use, which must be between 3 and 9 inclusive.",
    "codeLanguage": "JavaScript",
    "codeTokens": 61,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale-chromatic/sequential.md#2025-04-11_snippet_15",
    "pageTitle": "D3.js Sequential Color Schemes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.schemeOrRd[k]"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Using a Quantize Scale with Multiple Thresholds in D3.js",
    "codeDescription": "Shows how a quantize scale divides the domain into equal parts based on the range length. This example maps values from 10-100 to three different stroke widths.",
    "codeLanguage": "javascript",
    "codeTokens": 93,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/quantize.md#2025-04-11_snippet_3",
    "pageTitle": "Quantize Scales in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "const width = d3.scaleQuantize([10, 100], [1, 2, 4]);\nwidth(20); // 1\nwidth(50); // 2\nwidth(80); // 4"
      }
    ],
    "relevance": 0.894
  },
  {
    "codeTitle": "Loading SVG Documents with d3.svg",
    "codeDescription": "Shows how to fetch and parse an SVG file using d3.svg(). This fetches the file as text and then parses it as SVG, returning a DOM Document object that can be manipulated or rendered.",
    "codeLanguage": "javascript",
    "codeTokens": 63,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-fetch.md#2025-04-11_snippet_11",
    "pageTitle": "D3-Fetch Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const document = await d3.svg(\"example.svg\");"
      }
    ],
    "relevance": 0.893
  },
  {
    "codeTitle": "Permuting Object Properties using D3.js",
    "codeDescription": "Demonstrates how d3.permute can be used with objects to extract specific properties in a desired order.",
    "codeLanguage": "JavaScript",
    "codeTokens": 90,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/sort.md#2025-04-11_snippet_3",
    "pageTitle": "Sorting Data in D3.js",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "const object = {yield: 27, variety: \"Manchuria\", year: 1931, site: \"University Farm\"};\n\nd3.permute(object, [\"site\", \"variety\", \"yield\"]) // [\"University Farm\", \"Manchuria\", 27]"
      }
    ],
    "relevance": 0.892
  },
  {
    "codeTitle": "Generating Ticks for Logarithmic Scale in D3.js",
    "codeDescription": "Demonstrates tick generation for a logarithmic scale. Returns uniformly spaced ticks within each integer power of the base.",
    "codeLanguage": "javascript",
    "codeTokens": 120,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/log.md#2025-04-11_snippet_2",
    "pageTitle": "D3.js Logarithmic Scale Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleLog([1, 100], [0, 960]);\nconst T = x.ticks(); // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]"
      }
    ],
    "relevance": 0.892
  },
  {
    "codeTitle": "Creating an Identity Scale in D3.js",
    "codeDescription": "Demonstrates creating an identity scale where the domain and range are identical, making the scale function equivalent to the identity function.",
    "codeLanguage": "javascript",
    "codeTokens": 50,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_30",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleIdentity([0, 960]);"
      }
    ],
    "relevance": 0.892
  },
  {
    "codeTitle": "Automatic Type Inference with d3.autoType",
    "codeDescription": "Shows how to use d3.autoType as a row accessor function when parsing CSV data to automatically convert string values to appropriate JavaScript types such as numbers, dates, booleans, and null values.",
    "codeLanguage": "javascript",
    "codeTokens": 70,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-dsv.md#2025-04-11_snippet_18",
    "pageTitle": "d3-dsv: Parsing and Formatting Delimiter-Separated Values",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.csvParse(string, d3.autoType)"
      }
    ],
    "relevance": 0.891
  },
  {
    "codeTitle": "Setting the Range for a Band Scale",
    "codeDescription": "Sets the scale's range to the specified two-element array of numbers and returns the modified scale.",
    "codeLanguage": "javascript",
    "codeTokens": 46,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/band.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Band Scale Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleBand().range([0, 960]);"
      }
    ],
    "relevance": 0.89
  },
  {
    "codeTitle": "Setting the Domain of a Threshold Scale in D3.js",
    "codeDescription": "Demonstrates how to set the domain of an existing threshold scale. The domain values must be in ascending order, and if there are n+1 values in the range, there must be n values in the domain.",
    "codeLanguage": "javascript",
    "codeTokens": 78,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/threshold.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js Threshold Scale Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleThreshold([\"red\", \"white\", \"green\"]).domain([0, 1]);"
      }
    ],
    "relevance": 0.89
  },
  {
    "codeTitle": "Using d3.groups() to Create Arrays of Key-Value Pairs in JavaScript",
    "codeDescription": "Similar to d3.group() but returns an array of [key, value] entries instead of a map. This example groups penguins by species and returns an array of entries.",
    "codeLanguage": "javascript",
    "codeTokens": 78,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/group.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js Data Grouping Methods Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const species = d3.groups(penguins, (d) => d.species); // [[\"Adelie\", Array(152)], …]"
      }
    ],
    "relevance": 0.89
  },
  {
    "codeTitle": "Rendering Mercator Projection with D3 and Vue",
    "codeDescription": "This snippet shows how to create a Mercator projection using D3's geoMercator() function. It configures the projection to fit within a square extent and sets a specific precision for the WorldMap component.",
    "codeLanguage": "vue",
    "codeTokens": 116,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/cylindrical.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Geo Projections Documentation",
    "codeList": [
      {
        "language": "vue",
        "code": "<WorldMap resolution=\"50m\" :height=\"width\" :projection='d3.geoMercator().rotate([0, 0]).fitExtent([[1, 1], [width - 1, width - 1]], {type: \"Sphere\"}).precision(0.2)' />"
      }
    ],
    "relevance": 0.89
  },
  {
    "codeTitle": "Creating a Voronoi Diagram from Delaunay Triangulation in D3.js",
    "codeDescription": "Demonstrates how to create a Voronoi diagram from a Delaunay triangulation of points using D3.js. The diagram is clipped to specified bounds.",
    "codeLanguage": "javascript",
    "codeTokens": 107,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-delaunay/voronoi.md#2025-04-11_snippet_1",
    "pageTitle": "Voronoi Diagrams in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "const delaunay = d3.Delaunay.from([[0, 0], [0, 100], [100, 0], [100, 100]]);\nconst voronoi = delaunay.voronoi([0, 0, 640, 480]);"
      }
    ],
    "relevance": 0.89
  },
  {
    "codeTitle": "Creating Voronoi Diagram from Delaunay Triangulation in JavaScript",
    "codeDescription": "This snippet demonstrates how to create a Voronoi diagram from a Delaunay triangulation using D3. It first creates a Delaunay object from a set of points, then generates a Voronoi diagram with specified bounds.",
    "codeLanguage": "JavaScript",
    "codeTokens": 103,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-delaunay/delaunay.md#2025-04-11_snippet_6",
    "pageTitle": "Delaunay Triangulations in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "const delaunay = d3.Delaunay.from(points);\nconst voronoi = delaunay.voronoi([0, 0, 640, 480]);"
      }
    ],
    "relevance": 0.89
  },
  {
    "codeTitle": "Creating Delaunay Triangulation from Object Array with Accessors in D3.js",
    "codeDescription": "Demonstrates creating a Delaunay triangulation from an array of objects using custom accessor functions for x and y coordinates in D3.js.",
    "codeLanguage": "JavaScript",
    "codeTokens": 116,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-delaunay/delaunay.md#2025-04-11_snippet_5",
    "pageTitle": "Delaunay Triangulations in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "const delaunay = d3.Delaunay.from([{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}], (d) => d.x, (d) => d.y);"
      }
    ],
    "relevance": 0.89
  },
  {
    "codeTitle": "Creating a Center Force in D3",
    "codeDescription": "Creates a new center force with x and y coordinates set to the center of the visualization area. This centers the force simulation in the middle of the available space.",
    "codeLanguage": "javascript",
    "codeTokens": 61,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-force/center.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Center Force API Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const center = d3.forceCenter(width / 2, height / 2);"
      }
    ],
    "relevance": 0.89
  },
  {
    "codeTitle": "Point Scale Range Configuration",
    "codeDescription": "Shows how to set the range for a point scale using numeric values.",
    "codeLanguage": "javascript",
    "codeTokens": 41,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/point.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Point Scale Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scalePoint().range([0, 960]);"
      }
    ],
    "relevance": 0.89
  },
  {
    "codeTitle": "Reversing Iterable using D3.js",
    "codeDescription": "Shows how to use d3.reverse to create a new array with the elements of an iterable in reverse order.",
    "codeLanguage": "JavaScript",
    "codeTokens": 64,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/sort.md#2025-04-11_snippet_5",
    "pageTitle": "Sorting Data in D3.js",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.reverse(new Set([0, 2, 3, 1])) // [1, 3, 2, 0]"
      }
    ],
    "relevance": 0.888
  },
  {
    "codeTitle": "Defining Valid Data Points for D3.js Radial Line Generator",
    "codeDescription": "Sets a custom function to determine which data points should be considered valid and included in the radial line.",
    "codeLanguage": "javascript",
    "codeTokens": 53,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/radial-line.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js Radial Line Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const line = d3.lineRadial().defined((d) => !isNaN(d.temperature));"
      }
    ],
    "relevance": 0.888
  },
  {
    "codeTitle": "Formatting with Significant Digits using precisionRound in D3.js",
    "codeDescription": "Example showing how to format numbers with significant digits using precisionRound for small step values.",
    "codeLanguage": "javascript",
    "codeTokens": 97,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-format.md#2025-04-11_snippet_20",
    "pageTitle": "d3-format: Number Formatting Library",
    "codeList": [
      {
        "language": "javascript",
        "code": "const p = d3.precisionRound(0.01, 1.01);\nconst f = d3.format(\".\" + p + \"r\");\nf(0.99); // \"0.990\"\nf(1.0);  // \"1.00\"\nf(1.01); // \"1.01\""
      }
    ],
    "relevance": 0.888
  },
  {
    "codeTitle": "Appending HTML element to SVG foreignObject using D3.js",
    "codeDescription": "Demonstrates how to append an HTML div element to an SVG foreignObject element using D3.js, specifying the XHTML namespace.",
    "codeLanguage": "JavaScript",
    "codeTokens": 86,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/namespaces.md#2025-04-11_snippet_0",
    "pageTitle": "XML Namespaces in D3.js",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.create(\"svg\")\n  .append(\"foreignObject\")\n    .attr(\"width\", 300)\n    .attr(\"height\", 100)\n  .append(\"xhtml:div\")\n    .text(\"Hello, HTML!\");"
      }
    ],
    "relevance": 0.888
  },
  {
    "codeTitle": "D3 Conic Equal Area Projection Configuration",
    "codeDescription": "Configuration for D3's conic equal area projection with specific parallels, rotation, scale, and other parameters for world map visualization.",
    "codeLanguage": "javascript",
    "codeTokens": 118,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/conic.md#2025-04-11_snippet_2",
    "pageTitle": "D3.js Conic Map Projections Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.geoConicEqualArea().parallels([35, 65]).rotate([-20, 0]).scale(width * 0.55).center([0, 52]).translate([width / 2, height / 2]).clipExtent([[-1, -1], [width + 1, height + 1]]).precision(0.2)"
      }
    ],
    "relevance": 0.886
  },
  {
    "codeTitle": "Creating a Many-body Force in D3.js (JavaScript)",
    "codeDescription": "This snippet demonstrates how to create a new many-body force with a negative strength value (-100), which will cause nodes to repel each other like electrostatic charges.",
    "codeLanguage": "javascript",
    "codeTokens": 61,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-force/many-body.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Many-body Force Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const manyBody = d3.forceManyBody().strength(-100);"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Using rangeRound with a Band Scale",
    "codeDescription": "Sets the scale's range while also enabling rounding to avoid antialiasing artifacts.",
    "codeLanguage": "javascript",
    "codeTokens": 44,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/band.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js Band Scale Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleBand().rangeRound([0, 960]);"
      },
      {
        "language": "javascript",
        "code": "band.range(range).round(true)"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Creating and using a d3 timer with callback and delay",
    "codeDescription": "Shows how to create a timer that repeatedly invokes a callback until stopped. The example sets a 150ms delay before starting and stops the timer when the elapsed time exceeds 200ms.",
    "codeLanguage": "javascript",
    "codeTokens": 81,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-timer.md#2025-04-11_snippet_1",
    "pageTitle": "D3-Timer Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const t = d3.timer((elapsed) => {\n  console.log(elapsed);\n  if (elapsed > 200) t.stop();\n}, 150);"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Creating a Custom Zoom Transform with Scale and Translation",
    "codeDescription": "Demonstrates how to create a custom zoom transform with specific scale and translation values using the zoomIdentity object as a starting point.",
    "codeLanguage": "javascript",
    "codeTokens": 51,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-zoom.md#2025-04-11_snippet_13",
    "pageTitle": "D3 Zoom Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "var t = d3.zoomIdentity.translate(x, y).scale(k);"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Creating a D3.js Line with Cardinal Curve",
    "codeDescription": "Example of creating a D3.js line generator with a cardinal curve and specific tension parameter that affects the curvature of the spline between points.",
    "codeLanguage": "javascript",
    "codeTokens": 62,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/curve.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Curve Types and Interpolation Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "const line = d3.line().curve(d3.curveCardinal.tension(0.5));"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Finding Domain Extent for a Range Value in D3.js Quantile Scales",
    "codeDescription": "Uses invertExtent to find the domain values that correspond to specific range values in a quantile scale, useful for determining threshold boundaries of each color class.",
    "codeLanguage": "javascript",
    "codeTokens": 99,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/quantile.md#2025-04-11_snippet_2",
    "pageTitle": "D3.js Quantile Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "color.invertExtent(\"#eff3ff\"); // [2700, 3475]\ncolor.invertExtent(\"#6baed6\"); // [3800, 4300]\ncolor.invertExtent(\"#08519c\"); // [4950, 6300]"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Using d3.maxIndex to find index of maximum value in JavaScript",
    "codeDescription": "Returns the index of the maximum value in an iterable rather than the value itself. An optional accessor function can be used to transform values before comparison.",
    "codeLanguage": "javascript",
    "codeTokens": 71,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/summarize.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js Data Summarization Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.maxIndex([3, 2, 1, 1, 6, 2, 4]) // 2"
      },
      {
        "language": "javascript",
        "code": "d3.maxIndex(alphabet, (d) => d.frequency) // 0"
      },
      {
        "language": "javascript",
        "code": "alphabet[d3.maxIndex(alphabet, (d) => d.frequency)] // {letter: \"E\", frequency: 0.12702}"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Default Separation Function for Tree Layout",
    "codeDescription": "The default separation function used by D3's tree layout to determine spacing between nodes. It places sibling nodes closer together than non-siblings.",
    "codeLanguage": "javascript",
    "codeTokens": 61,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/tree.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Tree Layout Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function separation(a, b) {\n  return a.parent == b.parent ? 1 : 2;\n}"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Setting Start Angle for D3 Arc Generator",
    "codeDescription": "Demonstrates how to set the start angle for a D3 arc generator and retrieve the current start angle accessor.",
    "codeLanguage": "javascript",
    "codeTokens": 64,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/arc.md#2025-04-11_snippet_9",
    "pageTitle": "D3 Arc Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const arc = d3.arc().startAngle(Math.PI / 4);\n\narc.startAngle() // () => 0.7853981633974483"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Setting inner padding for a D3 treemap layout",
    "codeDescription": "Sets the inner padding to the specified number or function, or returns the current inner padding function if no argument is provided. Inner padding separates adjacent child nodes.",
    "codeLanguage": "JavaScript",
    "codeTokens": 52,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/treemap.md#2025-04-11_snippet_6",
    "pageTitle": "D3 Treemap Layout Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "*treemap*.paddingInner(*padding*)"
      }
    ],
    "relevance": 0.884
  },
  {
    "codeTitle": "Adjusting Color Opacity in D3.js",
    "codeDescription": "Shows how to change the opacity of a color and get the resulting RGBA string representation.",
    "codeLanguage": "javascript",
    "codeTokens": 55,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-color.md#2025-04-11_snippet_3",
    "pageTitle": "D3 Color Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "c.opacity = 0.8;\nc + \"\"; // rgba(198, 45, 205, 0.8)"
      }
    ],
    "relevance": 0.884
  },
  {
    "codeTitle": "Custom Subject Accessor for Canvas-Based Circle Dragging",
    "codeDescription": "A custom subject accessor function that finds the closest circle to the pointer within a given radius. This is useful for canvas-based visualizations where exact element detection is needed.",
    "codeLanguage": "javascript",
    "codeTokens": 161,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-drag.md#2025-04-11_snippet_8",
    "pageTitle": "D3 Drag Behavior Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function subject(event) {\n  let n = circles.length,\n      i,\n      dx,\n      dy,\n      d2,\n      s2 = radius * radius,\n      circle,\n      subject;\n\n  for (i = 0; i < n; ++i) {\n    circle = circles[i];\n    dx = event.x - circle.x;\n    dy = event.y - circle.y;\n    d2 = dx * dx + dy * dy;\n    if (d2 < s2) subject = circle, s2 = d2;\n  }\n\n  return subject;\n}"
      }
    ],
    "relevance": 0.883
  },
  {
    "codeTitle": "Default Strength Function for Many-body Force in D3.js (JavaScript)",
    "codeDescription": "This function shows the default strength accessor used by the many-body force when no custom strength is specified. It returns -30, creating a repulsive force between nodes.",
    "codeLanguage": "javascript",
    "codeTokens": 57,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-force/many-body.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Many-body Force Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function strength() {\n  return -30;\n}"
      }
    ],
    "relevance": 0.882
  },
  {
    "codeTitle": "Setting Outer Padding for a Band Scale",
    "codeDescription": "Sets the outer padding to specify the amount of blank space before the first band and after the last band, typically in the range [0, 1].",
    "codeLanguage": "javascript",
    "codeTokens": 73,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/band.md#2025-04-11_snippet_7",
    "pageTitle": "D3.js Band Scale Documentation",
    "codeList": [
      {
        "language": "javascript-vue",
        "code": "const x = d3.scaleBand([\"a\", \"b\", \"c\"], [0, 960]).paddingOuter({{paddingOuter}});"
      },
      {
        "language": "javascript-vue",
        "code": "x.paddingOuter() // {{paddingOuter}}"
      }
    ],
    "relevance": 0.882
  },
  {
    "codeTitle": "Initializing Vue Component with Curve Parameters",
    "codeDescription": "Vue setup script that initializes reactive variables for controlling curve parameters such as alpha, beta, and tension, along with tick marks for visualization examples.",
    "codeLanguage": "vue",
    "codeTokens": 118,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/curve.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Curve Types and Interpolation Methods",
    "codeList": [
      {
        "language": "vue",
        "code": "<script setup>\n\nimport {ref} from \"vue\";\nimport ExampleCurve from \"../components/ExampleCurve.vue\";\n\nconst alpha = ref(0.5);\nconst beta = ref(0.85);\nconst tension = ref(0);\nconst ticks = [0, 0.25, 0.5, 0.75, 1];\n\n</script>"
      }
    ],
    "relevance": 0.882
  },
  {
    "codeTitle": "Default Symbol Type Accessor Function",
    "codeDescription": "Shows the default implementation of the symbol type accessor, which returns a circle symbol.",
    "codeLanguage": "javascript",
    "codeTokens": 38,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/symbol.md#2025-04-11_snippet_5",
    "pageTitle": "D3 Symbol Generator for Data Visualization",
    "codeList": [
      {
        "language": "javascript",
        "code": "function type() {\n  return circle;\n}"
      }
    ],
    "relevance": 0.882
  },
  {
    "codeTitle": "Getting Band Scale Alignment in D3",
    "codeDescription": "Returns the current alignment value of the band scale, which defaults to 0.5 if not previously set.",
    "codeLanguage": "javascript",
    "codeTokens": 41,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/band.md#2025-04-11_snippet_10",
    "pageTitle": "D3.js Band Scale Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "x.align() // {{align}}"
      }
    ],
    "relevance": 0.88
  },
  {
    "codeTitle": "Using the slice-and-dice tiling method in D3 treemap",
    "codeDescription": "A tiling method that alternates between horizontal and vertical subdivision by depth. It delegates to treemapSlice for odd-depth nodes and treemapDice for even-depth nodes.",
    "codeLanguage": "JavaScript",
    "codeTokens": 69,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/treemap.md#2025-04-11_snippet_15",
    "pageTitle": "D3 Treemap Layout Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "treemapSliceDice(*node*, *x0*, *y0*, *x1*, *y1*)"
      }
    ],
    "relevance": 0.88
  },
  {
    "codeTitle": "Interpolating between two numbers in D3.js",
    "codeDescription": "Shows how to use d3.interpolateNumber to create an interpolator between two numbers. The interpolator is then called with a value between 0 and 1 to get the interpolated result.",
    "codeLanguage": "javascript",
    "codeTokens": 67,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-interpolate/value.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Interpolation Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.interpolateNumber(20, 620)(0.8) // 500"
      }
    ],
    "relevance": 0.88
  },
  {
    "codeTitle": "Generating UTC Time Ticks Example",
    "codeDescription": "Demonstrates how to generate UTC time ticks between two dates with a specified count. The example shows creating evenly spaced dates between 1970 and 1996 with approximately 4 intervals.",
    "codeLanguage": "javascript",
    "codeTokens": 134,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-time.md#2025-04-11_snippet_13",
    "pageTitle": "D3 Time Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const start = new Date(\"1970-03-01\");\nconst stop = new Date(\"1996-03-19\");\nconst count = 4;\nconst ticks = d3.utcTicks(start, stop, count); // [1975-01-01, 1980-01-01, 1985-01-01, 1990-01-01, 1995-01-01]"
      }
    ],
    "relevance": 0.88
  },
  {
    "codeTitle": "Creating Ordinal Scale with Domain and Range",
    "codeDescription": "Demonstrates how to construct a new ordinal scale with specified domain and range arrays for mapping categories to colors.",
    "codeLanguage": "javascript",
    "codeTokens": 60,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/ordinal.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Ordinal Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleOrdinal([\"a\", \"b\", \"c\"], [\"red\", \"green\", \"blue\"]);"
      }
    ],
    "relevance": 0.88
  },
  {
    "codeTitle": "Interpolating between colors in CIELCh color space using d3.interpolateHcl",
    "codeDescription": "Returns a CIELCh(ab) color space interpolator between two colors. Uses the shortest path between hues. The colors are converted to CIELCh using d3.hcl. Returns an RGB string.",
    "codeLanguage": "javascript",
    "codeTokens": 65,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-interpolate/color.md#2025-04-11_snippet_6",
    "pageTitle": "D3.js Color Interpolation Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.interpolateHcl(\"purple\", \"orange\")"
      }
    ],
    "relevance": 0.88
  },
  {
    "codeTitle": "D3.js Stack Generator Output Format",
    "codeDescription": "Example showing the output format of the D3.js 4.0 stack generator. Each series contains points with lower and upper values defining the baseline and topline positions for visualization in stacked charts.",
    "codeLanguage": "javascript",
    "codeTokens": 202,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_59",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "[\n  [[   0, 3840], [   0, 1600], [   0,  640], [   0,  320]], // apples\n  [[3840, 5760], [1600, 3040], [ 640, 1600], [ 320,  800]], // bananas\n  [[5760, 6720], [3040, 4000], [1600, 2240], [ 800, 1440]], // cherries\n  [[6720, 7120], [4000, 4400], [2240, 2640], [1440, 1840]], // dates\n]"
      }
    ],
    "relevance": 0.88
  },
  {
    "codeTitle": "Using interpolateYlOrBr function in D3.js",
    "codeDescription": "A function that returns colors from the 'YlOrBr' (Yellow-Orange-Brown) sequential color scheme. It accepts a value t between 0 and 1 and returns an RGB string representing the corresponding color.",
    "codeLanguage": "JavaScript",
    "codeTokens": 68,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale-chromatic/sequential.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js Sequential Color Schemes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.interpolateYlOrBr(t)"
      }
    ],
    "relevance": 0.88
  },
  {
    "codeTitle": "Setting Inner Tick Size in D3.js",
    "codeDescription": "Shows how to configure only the inner tick size for a D3.js axis. Inner tick size controls the length of tick lines extending from the axis line.",
    "codeLanguage": "javascript",
    "codeTokens": 58,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-axis.md#2025-04-11_snippet_9",
    "pageTitle": "D3.js Axis Component Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const axis = d3.axisBottom(x).tickSizeInner(0);"
      }
    ],
    "relevance": 0.88
  },
  {
    "codeTitle": "Node and Link Definition Using String Identifiers in D3.js",
    "codeDescription": "Example of defining nodes and links using string-based node identification, where source and target are specified by node id strings instead of indices.",
    "codeLanguage": "javascript",
    "codeTokens": 95,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-force/link.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js Link Force Implementation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const nodes = [\n  {\"id\": \"Alice\"},\n  {\"id\": \"Bob\"},\n  {\"id\": \"Carol\"}\n];\n\nconst links = [\n  {\"source\": \"Alice\", \"target\": \"Bob\"},\n  {\"source\": \"Bob\", \"target\": \"Carol\"}\n];"
      }
    ],
    "relevance": 0.878
  },
  {
    "codeTitle": "Iterating Through D3 Selection Elements with a For-Of Loop",
    "codeDescription": "Demonstrates how to use the iterator functionality of D3 selections to iterate through the selected (non-null) elements using a standard JavaScript for-of loop.",
    "codeLanguage": "javascript",
    "codeTokens": 56,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/control-flow.md#2025-04-11_snippet_7",
    "pageTitle": "D3 Selection Control Flow Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "for (const element of selection) {\n  console.log(element);\n}"
      }
    ],
    "relevance": 0.878
  },
  {
    "codeTitle": "Setting top padding for a D3 treemap layout",
    "codeDescription": "Sets the top padding to the specified number or function, or returns the current top padding function if no argument is provided. Top padding separates a node's top edge from its children.",
    "codeLanguage": "JavaScript",
    "codeTokens": 57,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/treemap.md#2025-04-11_snippet_8",
    "pageTitle": "D3 Treemap Layout Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "*treemap*.paddingTop(*padding*)"
      }
    ],
    "relevance": 0.878
  },
  {
    "codeTitle": "Migrating from Category10 Scale to schemeCategory10 Array",
    "codeDescription": "Comparison between D3.js v3.x categorical color scales and the new scheme arrays in v4.0, showing how to create an ordinal scale with a color scheme.",
    "codeLanguage": "javascript",
    "codeTokens": 55,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_47",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "var color = d3.scale.category10();"
      },
      {
        "language": "javascript",
        "code": "var color = d3.scaleOrdinal(d3.schemeCategory10);"
      }
    ],
    "relevance": 0.878
  },
  {
    "codeTitle": "Retrieving Current Y1 Accessor from D3 Area Generator in JavaScript",
    "codeDescription": "Shows how to get the current y1 accessor from an area generator. This returns a function that was previously set with the y1() method.",
    "codeLanguage": "javascript",
    "codeTokens": 53,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/area.md#2025-04-11_snippet_16",
    "pageTitle": "D3 Area Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "area.y1() // (d) => y(d.Close)"
      }
    ],
    "relevance": 0.877
  },
  {
    "codeTitle": "Using interval.count for hour of week in D3.js v4.0",
    "codeDescription": "Example of using the interval.count method in D3.js version 4.0 to calculate the hour within the current week, demonstrating a more general use case for the method, such as creating a heatmap.",
    "codeLanguage": "javascript",
    "codeTokens": 69,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_69",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.timeHour.count(d3.timeWeek(now), now); // 64"
      }
    ],
    "relevance": 0.876
  },
  {
    "codeTitle": "Creating Radial Force in D3 Force Simulation",
    "codeDescription": "Creates a new radial position force that pushes nodes towards a circle of specified radius centered at the given x and y coordinates. This can be used to create circular layouts or constrain nodes to a circular area.",
    "codeLanguage": "JavaScript",
    "codeTokens": 73,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-force/position.md#2025-04-11_snippet_5",
    "pageTitle": "Position Forces in D3 Force Simulation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "const radial = d3.forceRadial(r, width / 2, height / 2);"
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "Setting Range for D3 Linear Scale",
    "codeDescription": "Sets the range (output values) for a linear scale. The range must contain two or more values compatible with the scale's interpolator.",
    "codeLanguage": "javascript",
    "codeTokens": 56,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_8",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleLinear().range([0, 960]);"
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "Equivalent Function Call Without Using .call() in D3",
    "codeDescription": "Demonstrates the equivalent way to call a function on a selection without using .call(). The key difference is that this approach doesn't preserve method chaining as it returns the function's return value instead of the selection.",
    "codeLanguage": "javascript",
    "codeTokens": 67,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/control-flow.md#2025-04-11_snippet_3",
    "pageTitle": "D3 Selection Control Flow Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "name(d3.selectAll(\"div\"), \"John\", \"Snow\");"
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "Setting the Domain for a Band Scale",
    "codeDescription": "Setting the domain for a band scale with an array of values. The first element is mapped to the first band, and so on.",
    "codeLanguage": "javascript",
    "codeTokens": 73,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/band.md#2025-04-11_snippet_2",
    "pageTitle": "D3.js Band Scale Documentation",
    "codeList": [
      {
        "language": "javascript-vue",
        "code": "const x = d3.scaleBand([0, 960]).domain([{{d3.csvParseRows(domain).flat().map(JSON.stringify).join(\", \")}});"
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "D3 Time Range Generation Example",
    "codeDescription": "Demonstrates how to generate a range of dates for weekly intervals within a month using d3.timeWeek.range().",
    "codeLanguage": "javascript",
    "codeTokens": 160,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-time.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Time Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const start = d3.timeMonth.floor(new Date(2015, 0, 15)); // 2015-01-01T00:00\nconst stop = d3.timeMonth.ceil(new Date(2015, 0, 15)); // 2015-02-01T00:00\nconst weeks = d3.timeWeek.range(start, stop); // [2015-01-04T00:00, 2015-01-11T00:00, 2015-01-18T00:00, 2015-01-25T00:00]"
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "Rendering Natural Earth 1 Projection with D3 and Vue",
    "codeDescription": "This code shows how to implement the Natural Earth 1 projection using D3's geoNaturalEarth1() function. It sets up the projection with specific height, rotation, extent, and precision parameters for use in a WorldMap component.",
    "codeLanguage": "vue",
    "codeTokens": 127,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/cylindrical.md#2025-04-11_snippet_5",
    "pageTitle": "D3 Geo Projections Documentation",
    "codeList": [
      {
        "language": "vue",
        "code": "<WorldMap :height=\"width * 0.5\" :projection='d3.geoNaturalEarth1().rotate([0, 0]).fitExtent([[1, 1], [width - 1, width * 0.5 - 1]], {type: \"Sphere\"}).precision(0.2)' />"
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "D3.js Step Curve Functions",
    "codeDescription": "Collection of step function implementations including standard step, step-after, and step-before variations. Creates piecewise constant functions with alternating horizontal and vertical lines.",
    "codeLanguage": "javascript",
    "codeTokens": 58,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/curve.md#2025-04-11_snippet_10",
    "pageTitle": "D3.js Curve Types and Interpolation Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "curveStep(context)\ncurveStepAfter(context)\ncurveStepBefore(context)"
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "Sorting Iterable using D3.js",
    "codeDescription": "Demonstrates the use of d3.sort to create a new sorted array from an iterable, with optional custom comparator or accessor function.",
    "codeLanguage": "JavaScript",
    "codeTokens": 68,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/sort.md#2025-04-11_snippet_8",
    "pageTitle": "Sorting Data in D3.js",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.sort(new Set([0, 2, 3, 1])) // [0, 1, 2, 3]"
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "Setting Projection for D3 Geographic Path Generator",
    "codeDescription": "Shows how to set the projection for a geographic path generator using path.projection().",
    "codeLanguage": "javascript",
    "codeTokens": 42,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/path.md#2025-04-11_snippet_10",
    "pageTitle": "D3 Geographic Path Generation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const path = d3.geoPath().projection(d3.geoAlbers());"
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "Canvas Container Accessor for D3 Drag Behavior",
    "codeDescription": "A container accessor function for canvas-based drag operations that uses the element itself as the container rather than its parent node.",
    "codeLanguage": "javascript",
    "codeTokens": 43,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-drag.md#2025-04-11_snippet_4",
    "pageTitle": "D3 Drag Behavior Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function container() {\n  return this;\n}"
      }
    ],
    "relevance": 0.874
  },
  {
    "codeTitle": "Setting numeric threshold count for a bin generator in D3",
    "codeDescription": "Configures a bin generator to create approximately 20 bins by dividing the domain uniformly. The exact number may differ based on the domain's extent.",
    "codeLanguage": "javascript",
    "codeTokens": 52,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/bin.md#2025-04-11_snippet_8",
    "pageTitle": "D3 Binning Data",
    "codeList": [
      {
        "language": "javascript",
        "code": "const bin = d3.bin().thresholds(20);"
      }
    ],
    "relevance": 0.873
  },
  {
    "codeTitle": "Creating Custom Number Formats with formatSpecifier in D3.js",
    "codeDescription": "Example showing how to create a custom number format by modifying a formatSpecifier object with calculated precision.",
    "codeLanguage": "javascript",
    "codeTokens": 72,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-format.md#2025-04-11_snippet_10",
    "pageTitle": "d3-format: Number Formatting Library",
    "codeList": [
      {
        "language": "javascript",
        "code": "const s = d3.formatSpecifier(\"f\");\ns.precision = d3.precisionFixed(0.01);\nconst f = d3.format(s);\nf(42); // \"42.00\";"
      }
    ],
    "relevance": 0.872
  },
  {
    "codeTitle": "Getting the Current Range of a D3 Linear Scale",
    "codeDescription": "Retrieves a copy of the scale's current range using the range() method without arguments.",
    "codeLanguage": "javascript",
    "codeTokens": 40,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_9",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "x.range() // [0, 960]"
      }
    ],
    "relevance": 0.872
  },
  {
    "codeTitle": "D3.js 3.x Time Format Parser Definition",
    "codeDescription": "Example of how to define a time parser in D3.js 3.x using the format.parse method. This approach has been deprecated in D3.js 4.0 in favor of dedicated parser constructors.",
    "codeLanguage": "javascript",
    "codeTokens": 66,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_60",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "var parseTime = d3.time.format(\"%c\").parse;"
      }
    ],
    "relevance": 0.872
  },
  {
    "codeTitle": "Using bisectLeft() Function on an Array of Dates in JavaScript",
    "codeDescription": "Uses the bisectLeft function to find an insertion point before any existing equivalent dates. This example finds where January 2, 2014 would be inserted before any existing instances in an array of dates.",
    "codeLanguage": "javascript",
    "codeTokens": 83,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/bisect.md#2025-04-11_snippet_7",
    "pageTitle": "D3.js Bisector Functions Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.bisectLeft(aapl.map((d) => d.Date), new Date(\"2014-01-02\")) // 162"
      }
    ],
    "relevance": 0.872
  },
  {
    "codeTitle": "Creating a Quadtree in D3.js v4.0",
    "codeDescription": "Updated example of creating a quadtree using the new d3.quadtree method in D3.js version 4.0. This approach directly creates a quadtree and adds data to it.",
    "codeLanguage": "JavaScript",
    "codeTokens": 80,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_39",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "var quadtree = d3.quadtree()\n    .extent([[0, 0], [width, height]])\n    .addAll(data);"
      }
    ],
    "relevance": 0.87
  },
  {
    "codeTitle": "Using HCL Color Interpolation in D3.js Linear Scales",
    "codeDescription": "Demonstrates configuring a linear scale to use HCL color space interpolation between brown and steelblue colors for a domain from 10 to 100.",
    "codeLanguage": "javascript",
    "codeTokens": 79,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_20",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleLinear()\n    .domain([10, 100])\n    .range([\"brown\", \"steelblue\"])\n    .interpolate(d3.interpolateHcl);"
      }
    ],
    "relevance": 0.87
  },
  {
    "codeTitle": "Setting X0 Accessor for D3 Area Generator in JavaScript",
    "codeDescription": "Sets the x0 accessor (baseline x coordinate) for an area generator. This example uses a constant x-coordinate as the baseline, suitable for vertically-oriented areas.",
    "codeLanguage": "javascript",
    "codeTokens": 56,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/area.md#2025-04-11_snippet_5",
    "pageTitle": "D3 Area Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const area = d3.area().x0(x(0));"
      }
    ],
    "relevance": 0.87
  },
  {
    "codeTitle": "Finding Centroid of a Geographic Feature in D3",
    "codeDescription": "Demonstrates how to use path.centroid() to find the projected planar centroid of a GeoJSON object.",
    "codeLanguage": "javascript",
    "codeTokens": 58,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/path.md#2025-04-11_snippet_6",
    "pageTitle": "D3 Geographic Path Generation",
    "codeList": [
      {
        "language": "javascript",
        "code": "path.centroid(california) // [82.08679434495191, 288.14204870673404]"
      }
    ],
    "relevance": 0.87
  },
  {
    "codeTitle": "Parsing CSV with Column Headers",
    "codeDescription": "Demonstrates parsing a CSV string with d3.csvParse, which expects the first line to be a header with column names. These column names become properties in the resulting objects.",
    "codeLanguage": "js",
    "codeTokens": 88,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-dsv.md#2025-04-11_snippet_6",
    "pageTitle": "d3-dsv: Parsing and Formatting Delimiter-Separated Values",
    "codeList": [
      {
        "language": "js",
        "code": "d3.csvParse(\"foo,bar\\n1,2\") // [{foo: \"1\", bar: \"2\"}, columns: [\"foo\", \"bar\"]]"
      }
    ],
    "relevance": 0.87
  },
  {
    "codeTitle": "Generating Poisson Distribution Random Numbers in JavaScript with D3",
    "codeDescription": "Creates a function that generates random numbers following a Poisson distribution with mean (lambda) 400. The Poisson distribution is used to model the number of events occurring in a fixed interval of time or space.",
    "codeLanguage": "javascript",
    "codeTokens": 62,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-random.md#2025-04-11_snippet_16",
    "pageTitle": "D3 Random Number Generation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.randomPoisson(400)"
      }
    ],
    "relevance": 0.87
  },
  {
    "codeTitle": "Converting RGB to HSL Color in D3.js",
    "codeDescription": "Shows how to convert a color from RGB to HSL color space using d3.hsl(), which transforms the color representation to hue, saturation, and lightness values.",
    "codeLanguage": "javascript",
    "codeTokens": 84,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-color.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Color Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "c = d3.hsl(c); // {h: 207.27…, s: 0.44, l: 0.4902…, opacity: 1}"
      }
    ],
    "relevance": 0.87
  },
  {
    "codeTitle": "Generating Beta Distribution Random Numbers with D3 in JavaScript",
    "codeDescription": "Demonstrates how to use d3.randomBeta() to generate random numbers with a beta distribution, with shape parameters alpha=3 and beta=1.5.",
    "codeLanguage": "javascript",
    "codeTokens": 55,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-random.md#2025-04-11_snippet_12",
    "pageTitle": "D3 Random Number Generation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.randomBeta(3, 1.5)"
      }
    ],
    "relevance": 0.87
  },
  {
    "codeTitle": "Interpolating Colors with D3",
    "codeDescription": "This snippet demonstrates color interpolation using D3's interpolateLab function. It finds the perceptual midpoint between steelblue and brown.",
    "codeLanguage": "javascript",
    "codeTokens": 63,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-interpolate.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Interpolation Module",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.interpolateLab(\"steelblue\", \"brown\")(0.5); // \"rgb(142, 92, 109)\""
      }
    ],
    "relevance": 0.87
  },
  {
    "codeTitle": "Retrieving the Current Source Accessor from D3.js Link Generator",
    "codeDescription": "Shows how to retrieve the current source accessor function from a link generator.",
    "codeLanguage": "javascript",
    "codeTokens": 38,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/link.md#2025-04-11_snippet_5",
    "pageTitle": "D3.js Link Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "link.source() // (d) => d[0]"
      }
    ],
    "relevance": 0.87
  },
  {
    "codeTitle": "Using precisionPrefix for SI Unit Formatting in D3.js",
    "codeDescription": "The precisionPrefix function calculates appropriate decimal precision for SI prefix notation based on step size and reference value.",
    "codeLanguage": "javascript",
    "codeTokens": 52,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-format.md#2025-04-11_snippet_17",
    "pageTitle": "d3-format: Number Formatting Library",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.precisionPrefix(1e5, 1.3e6) // 1"
      }
    ],
    "relevance": 0.868
  },
  {
    "codeTitle": "Retrieving Current X0 Accessor from D3 Area Generator in JavaScript",
    "codeDescription": "Shows how to get the current x0 accessor from an area generator. This returns a function that was previously set with the x0() method.",
    "codeLanguage": "javascript",
    "codeTokens": 49,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/area.md#2025-04-11_snippet_6",
    "pageTitle": "D3 Area Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "area.x0() // () => 20"
      }
    ],
    "relevance": 0.868
  },
  {
    "codeTitle": "Setting Inner Radius for D3 Arc Generator",
    "codeDescription": "Shows how to set the inner radius for a D3 arc generator and retrieve the current inner radius accessor.",
    "codeLanguage": "javascript",
    "codeTokens": 53,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/arc.md#2025-04-11_snippet_6",
    "pageTitle": "D3 Arc Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const arc = d3.arc().innerRadius(40);\n\narc.innerRadius() // () => 40"
      }
    ],
    "relevance": 0.868
  },
  {
    "codeTitle": "Finding Polygon Centroid with D3",
    "codeDescription": "This function calculates the centroid (geometric center) of a given polygon using D3's polygonCentroid method.",
    "codeLanguage": "javascript",
    "codeTokens": 77,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-polygon.md#2025-04-11_snippet_2",
    "pageTitle": "D3-Polygon Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.polygonCentroid([[1, 1], [1.5, 0], [2, 1]]) // [1.5, 0.6666666666666666]"
      }
    ],
    "relevance": 0.868
  },
  {
    "codeTitle": "Setting Angle Accessor for D3.js Radial Line Generator",
    "codeDescription": "Configures the angle accessor for a radial line generator, which determines the angle in radians for each data point.",
    "codeLanguage": "javascript",
    "codeTokens": 54,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/radial-line.md#2025-04-11_snippet_2",
    "pageTitle": "D3.js Radial Line Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const line = d3.lineRadial().angle((d) => a(d.Date));"
      }
    ],
    "relevance": 0.866
  },
  {
    "codeTitle": "Demonstrating JavaScript Floating Point Precision Issues",
    "codeDescription": "This snippet shows how JavaScript's floating point arithmetic can lead to unexpected results when printing decimal numbers in a loop.",
    "codeLanguage": "javascript",
    "codeTokens": 63,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-format.md#2025-04-11_snippet_0",
    "pageTitle": "d3-format: Number Formatting Library",
    "codeList": [
      {
        "language": "javascript",
        "code": "for (let i = 0; i < 10; ++i) {\n  console.log(0.1 * i);\n}"
      }
    ],
    "relevance": 0.865
  },
  {
    "codeTitle": "Loading Images with d3.image",
    "codeDescription": "Demonstrates how to load an image using d3.image(). This returns a promise that resolves to an HTMLImageElement when the image has finished loading.",
    "codeLanguage": "javascript",
    "codeTokens": 53,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-fetch.md#2025-04-11_snippet_8",
    "pageTitle": "D3-Fetch Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const image = await d3.image(\"example.png\");"
      }
    ],
    "relevance": 0.865
  },
  {
    "codeTitle": "Formatting a Color as Hexadecimal in D3.js",
    "codeDescription": "Shows how to format a color as a hexadecimal string using the formatHex() method.",
    "codeLanguage": "javascript",
    "codeTokens": 45,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-color.md#2025-04-11_snippet_11",
    "pageTitle": "D3 Color Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.color(\"steelblue\").formatHex() // \"#4682b4\""
      }
    ],
    "relevance": 0.865
  },
  {
    "codeTitle": "Implementing Zoom Constraint Function in JavaScript",
    "codeDescription": "Default implementation of the zoom constraint function. It ensures that the viewport extent does not go outside the translate extent.",
    "codeLanguage": "JavaScript",
    "codeTokens": 214,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-zoom.md#2025-04-11_snippet_5",
    "pageTitle": "D3 Zoom Module Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "function constrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}"
      }
    ],
    "relevance": 0.865
  },
  {
    "codeTitle": "Summing Node Values in D3 Hierarchy (JavaScript)",
    "codeDescription": "Demonstrates how to sum values in a hierarchy, useful for preparing data for treemap or circle packing layouts.",
    "codeLanguage": "JavaScript",
    "codeTokens": 50,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/hierarchy.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js Hierarchy Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "root.sum((d) => d.value ? 1 : 0);"
      }
    ],
    "relevance": 0.865
  },
  {
    "codeTitle": "Creating a Tick Format Function for a Linear Scale in D3.js",
    "codeDescription": "Shows how to create a number format function for displaying tick values with automatically computed precision based on the interval between ticks.",
    "codeLanguage": "javascript",
    "codeTokens": 86,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_23",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleLinear([0.1, 1], [\"red\", \"blue\"]);\nconst f = x.tickFormat();\nf(0.1); // \"0.1\"\nf(1); // \"1.0\""
      }
    ],
    "relevance": 0.865
  },
  {
    "codeTitle": "Checking Point Containment in Polygon with D3",
    "codeDescription": "This function determines whether a given point is inside a specified polygon using D3's polygonContains method.",
    "codeLanguage": "javascript",
    "codeTokens": 69,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-polygon.md#2025-04-11_snippet_4",
    "pageTitle": "D3-Polygon Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.polygonContains([[1, 1], [1.5, 0], [2, 1]], [1.5, 0.667]) // true"
      }
    ],
    "relevance": 0.865
  },
  {
    "codeTitle": "Accessing Nested Grouped Data in JavaScript",
    "codeDescription": "Demonstrates how to retrieve elements from a nested grouped dataset. This example accesses female Adelie penguins from data that was grouped by species and then by sex.",
    "codeLanguage": "javascript",
    "codeTokens": 65,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/group.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Data Grouping Methods Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "speciesSex.get(\"Adelie\").get(\"FEMALE\") // Array(73)"
      }
    ],
    "relevance": 0.865
  },
  {
    "codeTitle": "Creating Custom Stack Order with Reverse Key Order",
    "codeDescription": "Example of defining a custom stack order function that reverses the order of the series. This demonstrates how to manipulate the arrangement of layers in a stacked visualization.",
    "codeLanguage": "javascript",
    "codeTokens": 60,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/stack.md#2025-04-11_snippet_7",
    "pageTitle": "D3 Stacks Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const stack = d3.stack().order(series => d3.range(series.length).reverse());"
      }
    ],
    "relevance": 0.865
  },
  {
    "codeTitle": "Adding Data to D3 Quadtree",
    "codeDescription": "Illustrates methods for adding single data points or multiple data points to a quadtree, using the current x and y accessors.",
    "codeLanguage": "JavaScript",
    "codeTokens": 53,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-quadtree.md#2025-04-11_snippet_5",
    "pageTitle": "D3 Quadtree Implementation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const tree = d3.quadtree().add([0, 0]);"
      },
      {
        "language": "javascript",
        "code": "const tree = d3.quadtree().addAll([[0, 0], [1, 2]]);"
      }
    ],
    "relevance": 0.864
  },
  {
    "codeTitle": "Equivalent SelectAll Transition Method in D3.js",
    "codeDescription": "Shows the equivalent method for transition.selectAll() using selection and transition chaining.",
    "codeLanguage": "javascript",
    "codeTokens": 44,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-transition/selecting.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Transition Selection Methods Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "transition\n  .selection()\n  .selectAll(selector)\n  .transition(transition)"
      }
    ],
    "relevance": 0.863
  },
  {
    "codeTitle": "Creating a Darker Color in D3.js",
    "codeDescription": "Shows how to create a darker version of a color using the darker() method with a specified intensity.",
    "codeLanguage": "javascript",
    "codeTokens": 65,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-color.md#2025-04-11_snippet_9",
    "pageTitle": "D3 Color Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.color(\"steelblue\").darker(1) // {r: 49, g: 91, b: 126, opacity: 1}"
      }
    ],
    "relevance": 0.863
  },
  {
    "codeTitle": "Using geoBounds to determine spherical bounding box",
    "codeDescription": "Returns the spherical bounding box for a GeoJSON object as a two-dimensional array of coordinate pairs representing the corners in degrees.",
    "codeLanguage": "javascript",
    "codeTokens": 40,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/math.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Spherical Math Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "geoBounds(object)"
      }
    ],
    "relevance": 0.862
  },
  {
    "codeTitle": "Handling Unknown Values",
    "codeDescription": "Demonstrates how to handle unknown input values by setting a specific unknown value.",
    "codeLanguage": "javascript",
    "codeTokens": 95,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/ordinal.md#2025-04-11_snippet_6",
    "pageTitle": "D3.js Ordinal Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleOrdinal([\"a\", \"b\", \"c\"], d3.schemeTableau10).unknown(null);\ncolor(\"a\"); // \"#4e79a7\"\ncolor(\"b\"); // \"#f28e2c\"\ncolor(\"c\"); // \"#e15759\"\ncolor(\"d\"); // null"
      }
    ],
    "relevance": 0.862
  },
  {
    "codeTitle": "Setting Inner Padding for a Band Scale",
    "codeDescription": "Sets the inner padding to specify the proportion of the range reserved for blank space between bands. A value of 0 means no space between bands.",
    "codeLanguage": "javascript",
    "codeTokens": 71,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/band.md#2025-04-11_snippet_6",
    "pageTitle": "D3.js Band Scale Documentation",
    "codeList": [
      {
        "language": "javascript-vue",
        "code": "const x = d3.scaleBand([\"a\", \"b\", \"c\"], [0, 960]).paddingInner({{paddingInner}});"
      },
      {
        "language": "javascript-vue",
        "code": "x.paddingInner() // {{paddingInner}}"
      }
    ],
    "relevance": 0.862
  },
  {
    "codeTitle": "Loading TSV Data with d3.tsv",
    "codeDescription": "Shows how to load a tab-separated values file using d3.tsv(). This is a convenience wrapper around d3.dsv with tab as the delimiter, returning parsed data as an array of objects.",
    "codeLanguage": "javascript",
    "codeTokens": 62,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-fetch.md#2025-04-11_snippet_13",
    "pageTitle": "D3-Fetch Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const data = await d3.tsv(\"example.tsv\");"
      }
    ],
    "relevance": 0.86
  },
  {
    "codeTitle": "Retrieving Current Y Accessor from D3 Area Generator in JavaScript",
    "codeDescription": "Shows how to get the current y0 accessor from an area generator. This returns the function that was previously set with the y() or y0() method.",
    "codeLanguage": "javascript",
    "codeTokens": 55,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/area.md#2025-04-11_snippet_11",
    "pageTitle": "D3 Area Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "area.y() // (d) => y(d.Date)"
      }
    ],
    "relevance": 0.86
  },
  {
    "codeTitle": "Implementing Temporary Drag Event Listeners in D3.js",
    "codeDescription": "Example of using event.on to register temporary drag and end event listeners within a start event handler. This pattern creates closure functions that manage the visual state of a dragged circle element during a drag operation.",
    "codeLanguage": "javascript",
    "codeTokens": 134,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-drag.md#2025-04-11_snippet_9",
    "pageTitle": "D3 Drag Behavior Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function started(event) {\n  const circle = d3.select(this).classed(\"dragging\", true);\n  const dragged = (event, d) => circle.raise().attr(\"cx\", d.x = event.x).attr(\"cy\", d.y = event.y);\n  const ended = () => circle.classed(\"dragging\", false);\n  event.on(\"drag\", dragged).on(\"end\", ended);\n}"
      }
    ],
    "relevance": 0.86
  },
  {
    "codeTitle": "Inverting a Threshold Scale in D3.js",
    "codeDescription": "Shows how to use the invertExtent method to find the domain values corresponding to a range value. This returns the lower and upper bounds of the domain that map to the given range value.",
    "codeLanguage": "javascript",
    "codeTokens": 112,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/threshold.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Threshold Scale Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleThreshold([0, 1], [\"red\", \"white\", \"green\"]);\ncolor.invertExtent(\"red\"); // [undefined, 0]\ncolor.invertExtent(\"white\"); // [0, 1]\ncolor.invertExtent(\"green\"); // [1, undefined]"
      }
    ],
    "relevance": 0.86
  },
  {
    "codeTitle": "Interpolating Fill Attribute from Red to Blue using attrTween in D3.js",
    "codeDescription": "Example showing how to use attrTween to interpolate the fill attribute from red to blue. This uses d3.interpolateRgb to create a smooth color transition between two fixed values.",
    "codeLanguage": "javascript",
    "codeTokens": 66,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-transition/modifying.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Element Modification with Transitions",
    "codeList": [
      {
        "language": "javascript",
        "code": "transition.attrTween(\"fill\", () => d3.interpolateRgb(\"red\", \"blue\"));"
      }
    ],
    "relevance": 0.86
  },
  {
    "codeTitle": "Importing D3.js in JavaScript Applications",
    "codeDescription": "These snippets demonstrate different ways to import D3.js in a JavaScript application after installing it via a package manager. They show importing the entire library, specific functions, or from submodules.",
    "codeLanguage": "javascript",
    "codeTokens": 59,
    "codeId": "https://github.com/d3/d3/blob/main/docs/getting-started.md#2025-04-11_snippet_6",
    "pageTitle": "Getting Started with D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "import * as d3 from \"d3\";"
      },
      {
        "language": "javascript",
        "code": "import {select, selectAll} from \"d3\";"
      },
      {
        "language": "javascript",
        "code": "import {mean, median} from \"d3-array\";"
      }
    ],
    "relevance": 0.86
  },
  {
    "codeTitle": "Removing a Force from a D3 Simulation in JavaScript",
    "codeDescription": "Demonstrates how to remove a force from an existing D3 force simulation by passing null as the force parameter. This example shows removing the charge force.",
    "codeLanguage": "javascript",
    "codeTokens": 50,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-force/simulation.md#2025-04-11_snippet_2",
    "pageTitle": "Force Simulations in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "simulation.force(\"charge\", null);"
      }
    ],
    "relevance": 0.86
  },
  {
    "codeTitle": "Creating B-spline interpolator with multiple colors using d3.interpolateRgbBasis",
    "codeDescription": "Returns a uniform nonrational B-spline interpolator through an array of colors, converted to RGB color space. Generates implicit control points such that the interpolator returns first color at t=0 and last color at t=1.",
    "codeLanguage": "javascript",
    "codeTokens": 75,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-interpolate/color.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Color Interpolation Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.interpolateRgbBasis([\"purple\", \"green\", \"orange\"])"
      }
    ],
    "relevance": 0.86
  },
  {
    "codeTitle": "External Timer Control with d3.timeout in D3 4.0",
    "codeDescription": "Shows how to use d3.timeout to stop a timer externally, demonstrating the separation of concerns and improved resource management in D3 4.0.",
    "codeLanguage": "javascript",
    "codeTokens": 75,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_72",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "var t = d3.timer(function(elapsed) {\n  console.log(elapsed);\n});\n\nd3.timeout(function() {\n  t.stop();\n}, 1000);"
      }
    ],
    "relevance": 0.86
  },
  {
    "codeTitle": "Using geoDistance to calculate great-arc distance",
    "codeDescription": "Returns the great-arc distance in radians between two points specified as longitude/latitude arrays in degrees.",
    "codeLanguage": "javascript",
    "codeTokens": 38,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/math.md#2025-04-11_snippet_3",
    "pageTitle": "D3 Spherical Math Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "geoDistance(a, b)"
      }
    ],
    "relevance": 0.858
  },
  {
    "codeTitle": "Retrieving Current Y0 Accessor from D3 Area Generator in JavaScript",
    "codeDescription": "Shows how to get the current y0 accessor from an area generator. This returns a function that was previously set with the y0() method or the default implementation.",
    "codeLanguage": "javascript",
    "codeTokens": 53,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/area.md#2025-04-11_snippet_13",
    "pageTitle": "D3 Area Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "area.y0() // () => 360"
      }
    ],
    "relevance": 0.858
  },
  {
    "codeTitle": "Setting Pixel Offset in D3.js Axis",
    "codeDescription": "Shows how to set a pixel offset for a D3.js axis. This can be used to ensure crisp rendering on various display resolutions by adjusting the position of the entire axis.",
    "codeLanguage": "javascript",
    "codeTokens": 60,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-axis.md#2025-04-11_snippet_15",
    "pageTitle": "D3.js Axis Component Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const axis = d3.axisBottom(x).offset(0);"
      }
    ],
    "relevance": 0.858
  },
  {
    "codeTitle": "Using D3 utcParse Method",
    "codeDescription": "Shows the basic usage of d3.utcParse method to create a UTC date parser with a specific format specifier.",
    "codeLanguage": "javascript",
    "codeTokens": 43,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-time-format.md#2025-04-11_snippet_6",
    "pageTitle": "D3 Time Format Library Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.utcParse(\"%b %d\")"
      }
    ],
    "relevance": 0.858
  },
  {
    "codeTitle": "Setting Outer Radius for D3 Arc Generator",
    "codeDescription": "Demonstrates how to set the outer radius for a D3 arc generator and retrieve the current outer radius accessor.",
    "codeLanguage": "javascript",
    "codeTokens": 54,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/arc.md#2025-04-11_snippet_7",
    "pageTitle": "D3 Arc Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const arc = d3.arc().outerRadius(240);\n\narc.outerRadius() // () => 240"
      }
    ],
    "relevance": 0.856
  },
  {
    "codeTitle": "Loading JSON Data with d3.json",
    "codeDescription": "Demonstrates how to fetch and parse a JSON file using d3.json(). This method automatically parses the response as JSON and returns the resulting JavaScript object or array.",
    "codeLanguage": "javascript",
    "codeTokens": 55,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-fetch.md#2025-04-11_snippet_10",
    "pageTitle": "D3-Fetch Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const data = await d3.json(\"example.json\");"
      }
    ],
    "relevance": 0.856
  },
  {
    "codeTitle": "Using geoLength to measure great-arc length",
    "codeDescription": "Returns the great-arc length of a GeoJSON object in radians, calculating perimeters for polygons including exterior and interior rings.",
    "codeLanguage": "javascript",
    "codeTokens": 41,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/math.md#2025-04-11_snippet_4",
    "pageTitle": "D3 Spherical Math Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "geoLength(object)"
      }
    ],
    "relevance": 0.855
  },
  {
    "codeTitle": "Default Y0 Accessor Implementation in D3 Area Generator",
    "codeDescription": "Shows the default implementation of the y0 accessor in D3's area generator. By default, it returns a constant value of 0, which represents the top of the chart in SVG's default coordinate system.",
    "codeLanguage": "javascript",
    "codeTokens": 63,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/area.md#2025-04-11_snippet_14",
    "pageTitle": "D3 Area Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function y() {\n  return 0;\n}"
      }
    ],
    "relevance": 0.855
  },
  {
    "codeTitle": "Demonstrating Clamping Behavior in D3 Linear Scale",
    "codeDescription": "Shows the effect of enabling clamping on a linear scale, comparing behavior with and without clamping for values outside the domain.",
    "codeLanguage": "javascript",
    "codeTokens": 125,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_13",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleLinear([10, 130], [0, 960]); // clamping disabled by default\nx(-10); // -160, outside range\nx.invert(-160); // -10, outside domain\nx.clamp(true); // enable clamping\nx(-10); // 0, clamped to range\nx.invert(-160); // 10, clamped to domain"
      }
    ],
    "relevance": 0.855
  },
  {
    "codeTitle": "Implementing Default 10° Global Graticule Generator with D3",
    "codeDescription": "A convenience function that creates the default 10° global graticule as a GeoJSON MultiLineString. It demonstrates how to use the geoGraticule function directly.",
    "codeLanguage": "javascript",
    "codeTokens": 67,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/shape.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Geo Spherical Shapes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function geoGraticule10() {\n  return d3.geoGraticule()();\n}"
      }
    ],
    "relevance": 0.855
  },
  {
    "codeTitle": "Rendering Equirectangular Projection with D3 and Vue",
    "codeDescription": "This code demonstrates how to create an equirectangular projection using D3's geoEquirectangular() function. It sets up the projection parameters and fits it to a specific extent within a WorldMap component.",
    "codeLanguage": "vue",
    "codeTokens": 120,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/cylindrical.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Geo Projections Documentation",
    "codeList": [
      {
        "language": "vue",
        "code": "<WorldMap :height=\"width / 2\" :projection='d3.geoEquirectangular().rotate([0, 0]).fitExtent([[1, 1], [width - 1, width / 2 - 1]], {type: \"Sphere\"}).precision(0.2)' />"
      }
    ],
    "relevance": 0.855
  },
  {
    "codeTitle": "Creating a Square Root Scale in D3.js",
    "codeDescription": "Constructs a square root scale (power scale with exponent 0.5) with a domain of [0, 100] and a range of [\"red\", \"blue\"]. This creates a scale where output changes more rapidly for smaller input values.",
    "codeLanguage": "javascript",
    "codeTokens": 82,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/pow.md#2025-04-11_snippet_1",
    "pageTitle": "Power Scales in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleSqrt([0, 100], [\"red\", \"blue\"]);"
      }
    ],
    "relevance": 0.855
  },
  {
    "codeTitle": "Initializing D3 and WorldMap Component in Vue",
    "codeDescription": "This snippet sets up the necessary imports and constants for using D3 geo projections with a WorldMap component in a Vue.js application. It imports D3 and a custom WorldMap component, and defines width and height constants for the map display.",
    "codeLanguage": "javascript",
    "codeTokens": 100,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/cylindrical.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Geo Projections Documentation",
    "codeList": [
      {
        "language": "vue",
        "code": "<script setup>\n\nimport * as d3 from \"d3\";\nimport WorldMap from \"../components/WorldMap.vue\";\n\nconst width = 688;\nconst height = 400;\n\n</script>"
      }
    ],
    "relevance": 0.855
  },
  {
    "codeTitle": "Creating Y-Axis Force in D3 Force Simulation",
    "codeDescription": "Creates a new position force along the y-axis towards the center of the height. This force can be used to push nodes vertically towards a specific position.",
    "codeLanguage": "JavaScript",
    "codeTokens": 55,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-force/position.md#2025-04-11_snippet_3",
    "pageTitle": "Position Forces in D3 Force Simulation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "const y = d3.forceY(height / 2);"
      }
    ],
    "relevance": 0.855
  },
  {
    "codeTitle": "Setting Curve Factory for D3 Area Generator in JavaScript",
    "codeDescription": "Sets the curve factory for an area generator, which determines how points are connected. This example uses a step curve, which creates a stepped area rather than a smooth one.",
    "codeLanguage": "javascript",
    "codeTokens": 58,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/area.md#2025-04-11_snippet_21",
    "pageTitle": "D3 Area Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const area = d3.area().curve(d3.curveStep);"
      }
    ],
    "relevance": 0.854
  },
  {
    "codeTitle": "Setting Defined Accessor for D3 Area Generator in JavaScript",
    "codeDescription": "Sets a defined accessor that determines which data points should be included in the area. This example skips data points where the Close value is NaN, creating disconnected segments for missing data.",
    "codeLanguage": "javascript",
    "codeTokens": 63,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/area.md#2025-04-11_snippet_18",
    "pageTitle": "D3 Area Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const area = d3.area().defined((d) => !isNaN(d.Close));"
      }
    ],
    "relevance": 0.853
  },
  {
    "codeTitle": "Applying rotation to coordinates",
    "codeDescription": "Applies the rotation to a point and returns a new array of coordinates in degrees representing the rotated point.",
    "codeLanguage": "javascript",
    "codeTokens": 35,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/math.md#2025-04-11_snippet_8",
    "pageTitle": "D3 Spherical Math Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "rotation(point)"
      }
    ],
    "relevance": 0.852
  },
  {
    "codeTitle": "Using a bin generator with a linear scale in D3",
    "codeDescription": "Demonstrates how to configure a bin generator to work with a D3 linear scale by using the scale's domain and generating thresholds from the scale's ticks.",
    "codeLanguage": "javascript",
    "codeTokens": 61,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/bin.md#2025-04-11_snippet_6",
    "pageTitle": "D3 Binning Data",
    "codeList": [
      {
        "language": "javascript",
        "code": "const bin = d3.bin().domain(x.domain()).thresholds(x.ticks(20));"
      }
    ],
    "relevance": 0.852
  },
  {
    "codeTitle": "Managing Extent of D3 Quadtree",
    "codeDescription": "Demonstrates how to set and retrieve the extent of a quadtree, which defines the boundaries of the space it covers.",
    "codeLanguage": "JavaScript",
    "codeTokens": 58,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-quadtree.md#2025-04-11_snippet_3",
    "pageTitle": "D3 Quadtree Implementation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const tree = d3.quadtree().extent([[0, 0], [1, 1]]);"
      },
      {
        "language": "javascript",
        "code": "tree.extent() // [[0, 0], [2, 2]]"
      }
    ],
    "relevance": 0.852
  },
  {
    "codeTitle": "Setting X1 Accessor for D3 Area Generator in JavaScript",
    "codeDescription": "Sets the x1 accessor (topline x coordinate) for an area generator. This example maps the Close property of each data point to an x-coordinate, suitable for vertically-oriented areas.",
    "codeLanguage": "javascript",
    "codeTokens": 65,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/area.md#2025-04-11_snippet_8",
    "pageTitle": "D3 Area Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const area = d3.area().x1((d) => x(d.Close));"
      }
    ],
    "relevance": 0.85
  },
  {
    "codeTitle": "Setting Rounded Range for D3 Linear Scale",
    "codeDescription": "Uses rangeRound() to set the range while also configuring the scale to use rounded interpolation, which helps avoid antialiasing artifacts.",
    "codeLanguage": "javascript",
    "codeTokens": 55,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_10",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleLinear().rangeRound([0, 960]);"
      }
    ],
    "relevance": 0.85
  },
  {
    "codeTitle": "Data Reduction with d3.rollup() in JavaScript",
    "codeDescription": "Groups and reduces values into an InternMap from key to reduced value. This example counts penguins by species by using a reducer function that returns array length.",
    "codeLanguage": "javascript",
    "codeTokens": 70,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/group.md#2025-04-11_snippet_5",
    "pageTitle": "D3.js Data Grouping Methods Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const speciesCount = d3.rollup(penguins, (D) => D.length, (d) => d.species);"
      }
    ],
    "relevance": 0.85
  },
  {
    "codeTitle": "Creating Basic Symlog Scale in D3.js",
    "codeDescription": "Demonstrates how to create a basic symlog scale with domain [0, 100] mapping to range [0, 960]. This scale allows for logarithmic-like transformation that can handle zero values.",
    "codeLanguage": "javascript",
    "codeTokens": 74,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/symlog.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Symlog Scale Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleSymlog([0, 100], [0, 960]);"
      }
    ],
    "relevance": 0.85
  },
  {
    "codeTitle": "Using D3 locale.parse Method",
    "codeDescription": "Shows the basic usage of locale.parse (via d3.timeParse) to create a date parser with a specific format specifier.",
    "codeLanguage": "javascript",
    "codeTokens": 46,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-time-format.md#2025-04-11_snippet_12",
    "pageTitle": "D3 Time Format Library Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.timeParse(\"%b %d\")"
      }
    ],
    "relevance": 0.85
  },
  {
    "codeTitle": "Converting D3 Selection to Array Using Spread Syntax",
    "codeDescription": "Shows how to flatten a D3 selection into an array using JavaScript's spread syntax, which utilizes the selection's built-in iterator functionality.",
    "codeLanguage": "javascript",
    "codeTokens": 45,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/control-flow.md#2025-04-11_snippet_8",
    "pageTitle": "D3 Selection Control Flow Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "const elements = [...selection];"
      }
    ],
    "relevance": 0.85
  },
  {
    "codeTitle": "Alternative Way to Get an Array from D3 Selection Using Array.from()",
    "codeDescription": "Shows an equivalent way to convert a D3 selection to an array using the Array.from() method, which leverages the selection's iterator functionality.",
    "codeLanguage": "javascript",
    "codeTokens": 45,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/control-flow.md#2025-04-11_snippet_6",
    "pageTitle": "D3 Selection Control Flow Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "Array.from(selection)"
      }
    ],
    "relevance": 0.85
  },
  {
    "codeTitle": "Sorting Array with Accessor Function in D3.js",
    "codeDescription": "Shows how to use d3.sort with an accessor function to sort an array of objects based on a specific property.",
    "codeLanguage": "JavaScript",
    "codeTokens": 47,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/sort.md#2025-04-11_snippet_9",
    "pageTitle": "Sorting Data in D3.js",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.sort(data, (d) => d.value)"
      }
    ],
    "relevance": 0.85
  },
  {
    "codeTitle": "Using D3's interpolateTransformCss Function in JavaScript",
    "codeDescription": "Demonstrates using the d3.interpolateTransformCss function to interpolate between two CSS transform strings. The interpolator function returns a transform string at the specified position (0.5) between the start and end transforms.",
    "codeLanguage": "js",
    "codeTokens": 114,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-interpolate/transform.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Transform Interpolation Documentation",
    "codeList": [
      {
        "language": "js",
        "code": "d3.interpolateTransformCss(\"translateY(12px) scale(2)\", \"translateX(30px) rotate(5deg)\")(0.5) // \"translate(15px,6px) rotate(2.5deg) scale(1.5,1.5)\""
      }
    ],
    "relevance": 0.849
  },
  {
    "codeTitle": "Inverting rotation for coordinates",
    "codeDescription": "The inverse operation of rotation, returns the original coordinates when given rotated coordinates as a two-element array of longitude and latitude in degrees.",
    "codeLanguage": "javascript",
    "codeTokens": 43,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/math.md#2025-04-11_snippet_9",
    "pageTitle": "D3 Spherical Math Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "rotation.invert(point)"
      }
    ],
    "relevance": 0.848
  },
  {
    "codeTitle": "Accessing Indexed Data in JavaScript",
    "codeDescription": "Shows how to retrieve values from an indexed dataset. This example looks up the closing price of an Apple stock on a specific date.",
    "codeLanguage": "javascript",
    "codeTokens": 61,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/group.md#2025-04-11_snippet_11",
    "pageTitle": "D3.js Data Grouping Methods Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "aaplDate.get(new Date(\"2013-12-31\")).Close // 80.145714"
      }
    ],
    "relevance": 0.848
  },
  {
    "codeTitle": "Initializing Delaunay Triangulation Data in Vue.js",
    "codeDescription": "Sets up data for a Delaunay triangulation example using D3.js and Vue.js. It generates random points and initializes state variables for finding neighbors.",
    "codeLanguage": "JavaScript",
    "codeTokens": 165,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-delaunay/delaunay.md#2025-04-11_snippet_0",
    "pageTitle": "Delaunay Triangulations in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "import * as Plot from \"@observablehq/plot\";\nimport * as d3 from \"d3\";\nimport {shallowRef} from \"vue\";\nimport PlotRender from \"../components/PlotRender.js\";\n\nconst random = d3.randomNormal.source(d3.randomLcg(42))();\nconst points = Array.from({length: 1000}, () => [random(), random()]);\nconst findState = shallowRef({x: 0, y: 0, i: -1});\nconst neighborsState = shallowRef({i: -1, N: []});"
      }
    ],
    "relevance": 0.848
  },
  {
    "codeTitle": "Implementing easeBounceInOut in D3.js",
    "codeDescription": "Example of using the easeBounceInOut function for symmetric bounce easing. Creates an array with a single easing function for visualization.",
    "codeLanguage": "javascript",
    "codeTokens": 47,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-ease.md#2025-04-11_snippet_10",
    "pageTitle": "D3 Easing Functions Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "[{y: d3.easeBounceInOut}]"
      }
    ],
    "relevance": 0.848
  },
  {
    "codeTitle": "Applying Pack Layout to a Hierarchy in D3",
    "codeDescription": "Applies the pack layout to a hierarchy root node, computing x and y coordinates for circle centers and radius values for each node. Requires calling root.sum() before use and optionally root.sort() for better layouts.",
    "codeLanguage": "javascript",
    "codeTokens": 59,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/pack.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Circle Pack Layout Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "*pack*(*root*)"
      }
    ],
    "relevance": 0.846
  },
  {
    "codeTitle": "Setting Fractional Digits for SVG Path Coordinates in D3",
    "codeDescription": "Shows how to set the number of fractional digits for coordinates in SVG path strings using path.digits().",
    "codeLanguage": "javascript",
    "codeTokens": 43,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/path.md#2025-04-11_snippet_7",
    "pageTitle": "D3 Geographic Path Generation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const path = d3.geoPath().digits(3);"
      }
    ],
    "relevance": 0.845
  },
  {
    "codeTitle": "Retrieving the current domain from a bin generator in D3",
    "codeDescription": "Shows how to retrieve the current domain from a bin generator, which in this example returns [0, 1] as the domain range.",
    "codeLanguage": "javascript",
    "codeTokens": 49,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/bin.md#2025-04-11_snippet_5",
    "pageTitle": "D3 Binning Data",
    "codeList": [
      {
        "language": "javascript",
        "code": "bin.domain() // [0, 1]"
      }
    ],
    "relevance": 0.845
  },
  {
    "codeTitle": "Creating a Value-Based Symbol Size Generator",
    "codeDescription": "Creates a symbol generator that dynamically determines symbol size based on a data value using a linear scale.",
    "codeLanguage": "javascript",
    "codeTokens": 63,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/symbol.md#2025-04-11_snippet_7",
    "pageTitle": "D3 Symbol Generator for Data Visualization",
    "codeList": [
      {
        "language": "javascript",
        "code": "const symbolSize = d3.scaleLinear([0, 100]);\nconst symbol = d3.symbol().size((d) => symbolSize(d.value));"
      }
    ],
    "relevance": 0.845
  },
  {
    "codeTitle": "Creating a Vertical Link Shorthand in D3.js",
    "codeDescription": "Demonstrates the shorthand method for creating a link with curveBumpY, suitable for tree diagrams rooted on the top edge of the display.",
    "codeLanguage": "javascript",
    "codeTokens": 53,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/link.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Link Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const link = d3.link(d3.curveBumpY);"
      }
    ],
    "relevance": 0.845
  },
  {
    "codeTitle": "Generating Ticks from a Linear Scale in D3.js",
    "codeDescription": "Demonstrates how to generate uniformly spaced tick values from a linear scale's domain, with default count of 10 if not specified.",
    "codeLanguage": "javascript",
    "codeTokens": 93,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_22",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleLinear([10, 100], [\"red\", \"blue\"]);\nx.ticks(); // [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]"
      }
    ],
    "relevance": 0.845
  },
  {
    "codeTitle": "D3 Time Range with Step Example",
    "codeDescription": "Shows how to generate date ranges with specific step intervals, demonstrating both odd and even day ranges.",
    "codeLanguage": "javascript",
    "codeTokens": 99,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-time.md#2025-04-11_snippet_5",
    "pageTitle": "D3 Time Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.timeDay.range(new Date(2015, 0, 1), new Date(2015, 0, 7), 2) // [2015-01-01T00:00, 2015-01-03T00:00, 2015-01-05T00:00]"
      }
    ],
    "relevance": 0.845
  },
  {
    "codeTitle": "Using schemeGnBu array in D3.js",
    "codeDescription": "A discrete sequential multi-hue color scheme array transitioning from Green to Blue. The parameter k specifies the size of the color array to use, which must be between 3 and 9 inclusive.",
    "codeLanguage": "JavaScript",
    "codeTokens": 61,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale-chromatic/sequential.md#2025-04-11_snippet_14",
    "pageTitle": "D3.js Sequential Color Schemes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.schemeGnBu[k]"
      }
    ],
    "relevance": 0.845
  },
  {
    "codeTitle": "Custom Node ID Accessor for String Identifiers in D3.js",
    "codeDescription": "A custom ID accessor function that returns the id string property of each node, allowing links to reference nodes by name instead of index.",
    "codeLanguage": "javascript",
    "codeTokens": 49,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-force/link.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Link Force Implementation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function id(d) {\n  return d.id;\n}"
      }
    ],
    "relevance": 0.845
  },
  {
    "codeTitle": "Creating a Quantile Scale in D3.js",
    "codeDescription": "Creates a new quantile scale with a domain of penguin body mass values and a range using the Blues color scheme with 5 classes.",
    "codeLanguage": "javascript",
    "codeTokens": 70,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/quantile.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Quantile Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleQuantile(penguins.map((d) => d.body_mass_g), d3.schemeBlues[5]);"
      }
    ],
    "relevance": 0.844
  },
  {
    "codeTitle": "Retrieving the Current Digits Precision",
    "codeDescription": "Retrieves the current maximum fraction digits setting from a symbol generator.",
    "codeLanguage": "javascript",
    "codeTokens": 32,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/symbol.md#2025-04-11_snippet_13",
    "pageTitle": "D3 Symbol Generator for Data Visualization",
    "codeList": [
      {
        "language": "javascript",
        "code": "symbol.digits() // 3"
      }
    ],
    "relevance": 0.843
  },
  {
    "codeTitle": "Calculating Tick Increment with D3.js in JavaScript",
    "codeDescription": "The d3.tickIncrement() function calculates the tick step for given start, stop, and count values. It returns the negative inverse tick step if the calculated step would be less than one.",
    "codeLanguage": "javascript",
    "codeTokens": 68,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/ticks.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Tick Generation and Range Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.tickIncrement(1, 9, 5) // 2"
      },
      {
        "language": "javascript",
        "code": "d3.tickIncrement(1, 9, 20) // -2, meaning a tick step 0.5"
      }
    ],
    "relevance": 0.842
  },
  {
    "codeTitle": "Retrieving Current Projection from D3 Path Generator",
    "codeDescription": "Demonstrates how to retrieve the current projection set for the path generator.",
    "codeLanguage": "javascript",
    "codeTokens": 37,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/path.md#2025-04-11_snippet_11",
    "pageTitle": "D3 Geographic Path Generation",
    "codeList": [
      {
        "language": "javascript",
        "code": "path.projection() // a d3.geoAlbers instance"
      }
    ],
    "relevance": 0.842
  },
  {
    "codeTitle": "Advanced CSV Parsing with Row Conversion Function",
    "codeDescription": "Demonstrates using a row conversion function to transform parsed CSV data. This example converts a CSV row with year and length values into a custom object with type conversion.",
    "codeLanguage": "js",
    "codeTokens": 131,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-dsv.md#2025-04-11_snippet_10",
    "pageTitle": "d3-dsv: Parsing and Formatting Delimiter-Separated Values",
    "codeList": [
      {
        "language": "js",
        "code": "const data = d3.csvParse(string, (d) => {\n  return {\n    year: new Date(+d.Year, 0, 1), // lowercase and convert \"Year\" to Date\n    make: d.Make, // lowercase\n    model: d.Model, // lowercase\n    length: +d.Length // lowercase and convert \"Length\" to number\n  };\n});"
      }
    ],
    "relevance": 0.842
  },
  {
    "codeTitle": "Setting Domain for a D3.js Quantile Scale",
    "codeDescription": "Shows how to set the domain of a quantile scale after construction, using an array of penguin body mass values that will be internally sorted and analyzed for threshold computation.",
    "codeLanguage": "javascript",
    "codeTokens": 78,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/quantile.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Quantile Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleQuantile(d3.schemeBlues[5]);\ncolor.domain(penguins.map((d) => d.body_mass_g));"
      }
    ],
    "relevance": 0.842
  },
  {
    "codeTitle": "Appending Elements with D3.js Selection",
    "codeDescription": "Examples of appending paragraph elements to all div elements using d3.selectAll().append() method. Shows three equivalent implementations with different approaches.",
    "codeLanguage": "javascript",
    "codeTokens": 48,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/modifying.md#2025-04-11_snippet_16",
    "pageTitle": "D3 Selection Element Modification Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.selectAll(\"div\").append(\"p\");"
      },
      {
        "language": "javascript",
        "code": "d3.selectAll(\"div\").append(() => document.createElement(\"p\"));"
      },
      {
        "language": "javascript",
        "code": "d3.selectAll(\"div\").select(function() {\n  return this.appendChild(document.createElement(\"p\"));\n});"
      }
    ],
    "relevance": 0.84
  },
  {
    "codeTitle": "Setting Symbol Type with a Constant Value",
    "codeDescription": "Configures a symbol generator to use the cross symbol type, returning the modified generator for chaining.",
    "codeLanguage": "javascript",
    "codeTokens": 45,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/symbol.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Symbol Generator for Data Visualization",
    "codeList": [
      {
        "language": "javascript",
        "code": "const symbol = d3.symbol().type(d3.symbolCross);"
      }
    ],
    "relevance": 0.84
  },
  {
    "codeTitle": "Creating a Link Generator with Custom Curve in D3.js",
    "codeDescription": "Creates a new link generator using the curveBumpY curve type, with custom x and y accessors. This is suitable for visualizing links in a tree diagram rooted on the top edge of the display.",
    "codeLanguage": "javascript",
    "codeTokens": 87,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/link.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Link Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const link = d3.link(d3.curveBumpY)\n    .x((d) => d.x)\n    .y((d) => d.y);"
      }
    ],
    "relevance": 0.84
  },
  {
    "codeTitle": "Registering Callbacks with Dispatch in JavaScript",
    "codeDescription": "Shows how to register multiple callbacks for different event types using the on() method of the dispatch object.",
    "codeLanguage": "javascript",
    "codeTokens": 57,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-dispatch.md#2025-04-11_snippet_1",
    "pageTitle": "D3-Dispatch Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "dispatch.on(\"start\", callback1);\ndispatch.on(\"start.foo\", callback2);\ndispatch.on(\"end\", callback3);"
      }
    ],
    "relevance": 0.84
  },
  {
    "codeTitle": "Using a Band Scale to Get a Band Position",
    "codeDescription": "Using the band scale to convert a domain value to its corresponding band position in the output range. Returns undefined for values not in the domain.",
    "codeLanguage": "javascript",
    "codeTokens": 92,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/band.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Band Scale Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleBand([\"a\", \"b\", \"c\"], [0, 960]);\nx(\"a\"); // 0\nx(\"b\"); // 320\nx(\"c\"); // 640\nx(\"d\"); // undefined"
      }
    ],
    "relevance": 0.84
  },
  {
    "codeTitle": "Initializing a Custom DSV Parser for a Specific Delimiter",
    "codeDescription": "Creates a new DSV parser and formatter for the specified delimiter character. This example creates a CSV parser using a comma as the delimiter.",
    "codeLanguage": "js",
    "codeTokens": 57,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-dsv.md#2025-04-11_snippet_5",
    "pageTitle": "d3-dsv: Parsing and Formatting Delimiter-Separated Values",
    "codeList": [
      {
        "language": "js",
        "code": "const csv = d3.dsvFormat(\",\");"
      }
    ],
    "relevance": 0.84
  },
  {
    "codeTitle": "Converting a Color to String in D3.js",
    "codeDescription": "Shows how to convert a color to its string representation using toString(), which is an alias for formatRgb().",
    "codeLanguage": "javascript",
    "codeTokens": 52,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-color.md#2025-04-11_snippet_15",
    "pageTitle": "D3 Color Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.color(\"yellow\").toString() // \"rgb(255, 255, 0)\""
      }
    ],
    "relevance": 0.84
  },
  {
    "codeTitle": "Accessing Current Domain",
    "codeDescription": "Shows how to retrieve the current domain of an ordinal scale.",
    "codeLanguage": "javascript",
    "codeTokens": 39,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/ordinal.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Ordinal Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "color.domain() // [\"a\", \"b\", \"c\"]"
      }
    ],
    "relevance": 0.84
  },
  {
    "codeTitle": "Retrieving Current Point Radius from D3 Path Generator",
    "codeDescription": "Demonstrates how to retrieve the current point radius setting from the path generator.",
    "codeLanguage": "javascript",
    "codeTokens": 33,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/path.md#2025-04-11_snippet_14",
    "pageTitle": "D3 Geographic Path Generation",
    "codeList": [
      {
        "language": "javascript",
        "code": "path.pointRadius() // 10"
      }
    ],
    "relevance": 0.838
  },
  {
    "codeTitle": "Creating Custom DSV Parser with d3.dsvFormat",
    "codeDescription": "Creates a custom delimiter-separated values parser and formatter using a specified delimiter character. This example uses a pipe character as the delimiter.",
    "codeLanguage": "js",
    "codeTokens": 82,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-dsv.md#2025-04-11_snippet_4",
    "pageTitle": "d3-dsv: Parsing and Formatting Delimiter-Separated Values",
    "codeList": [
      {
        "language": "js",
        "code": "d3.dsvFormat(\"|\").parse(\"foo|bar\\n1|2\")) // [{foo: \"1\", bar: \"2\"}, columns: [\"foo\", \"bar\"]]"
      }
    ],
    "relevance": 0.838
  },
  {
    "codeTitle": "Retrieving the Current X Accessor",
    "codeDescription": "Shows how to retrieve the currently configured x accessor function from a line generator.",
    "codeLanguage": "javascript",
    "codeTokens": 39,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/line.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js Line Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "line.x() // (d) => x(d.Date)"
      }
    ],
    "relevance": 0.838
  },
  {
    "codeTitle": "Resetting Zoom Transform Instantly in D3",
    "codeDescription": "Resets the zoom transform to the identity transform (no zoom, no pan) instantly. This is useful for implementing 'reset view' functionality in a visualization.",
    "codeLanguage": "javascript",
    "codeTokens": 53,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-zoom.md#2025-04-11_snippet_3",
    "pageTitle": "D3 Zoom Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection.call(zoom.transform, d3.zoomIdentity);"
      }
    ],
    "relevance": 0.838
  },
  {
    "codeTitle": "Creating CIELAB Color in D3 JavaScript",
    "codeDescription": "Constructs a new CIELAB color using d3.lab() function. The example shows creating a red color in CIELAB space.",
    "codeLanguage": "javascript",
    "codeTokens": 84,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-color.md#2025-04-11_snippet_20",
    "pageTitle": "D3 Color Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.lab(\"red\") // {l: 54.29173376861782, a: 80.8124553179771, b: 69.88504032350531, opacity: 1}"
      }
    ],
    "relevance": 0.836
  },
  {
    "codeTitle": "Formatting a Single Row as CSV with d3.csvFormatRow",
    "codeDescription": "Shows how to format a single array of values as a CSV row. This function handles escaping of special characters like commas, quotes, and newlines within the values.",
    "codeLanguage": "javascript",
    "codeTokens": 70,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-dsv.md#2025-04-11_snippet_16",
    "pageTitle": "d3-dsv: Parsing and Formatting Delimiter-Separated Values",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.csvFormatRow([\"foo\", \"bar\"]) // \"foo,bar\""
      }
    ],
    "relevance": 0.835
  },
  {
    "codeTitle": "Sorting D3 Hierarchy Nodes for Treemaps and Icicles in JavaScript",
    "codeDescription": "Demonstrates sorting nodes in a D3 hierarchy for treemap and icicle layouts, prioritizing height and value.",
    "codeLanguage": "JavaScript",
    "codeTokens": 69,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/hierarchy.md#2025-04-11_snippet_8",
    "pageTitle": "D3.js Hierarchy Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "root\n    .sum((d) => d.value)\n    .sort((a, b) => b.height - a.height || b.value - a.value);"
      }
    ],
    "relevance": 0.835
  },
  {
    "codeTitle": "Creating D3 Ribbon Generator",
    "codeDescription": "Creates a new ribbon generator with default settings for chord diagrams.",
    "codeLanguage": "javascript",
    "codeTokens": 30,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-chord/ribbon.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Ribbon Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const ribbon = d3.ribbon();"
      }
    ],
    "relevance": 0.835
  },
  {
    "codeTitle": "Using closePath Method with D3 Path Object",
    "codeDescription": "Demonstrates the closePath method which ends the current subpath and draws a straight line from the current point to the initial point. Equivalent to context.closePath in canvas.",
    "codeLanguage": "javascript",
    "codeTokens": 48,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-path.md#2025-04-11_snippet_3",
    "pageTitle": "D3-Path Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "path.closePath();"
      }
    ],
    "relevance": 0.835
  },
  {
    "codeTitle": "Rendering a Triangle from Delaunay Triangulation in D3.js",
    "codeDescription": "Illustrates how to render a single triangle from a Delaunay triangulation using the triangles and points data from the Delaunay object.",
    "codeLanguage": "JavaScript",
    "codeTokens": 157,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-delaunay/delaunay.md#2025-04-11_snippet_3",
    "pageTitle": "Delaunay Triangulations in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "const {points, triangles} = delaunay;\nconst t0 = triangles[i * 3 + 0];\nconst t1 = triangles[i * 3 + 1];\nconst t2 = triangles[i * 3 + 2];\ncontext.moveTo(points[t0 * 2], points[t0 * 2 + 1]);\ncontext.lineTo(points[t1 * 2], points[t1 * 2 + 1]);\ncontext.lineTo(points[t2 * 2], points[t2 * 2 + 1]);\ncontext.closePath();"
      }
    ],
    "relevance": 0.835
  },
  {
    "codeTitle": "Creating and Using Date Parsers with D3",
    "codeDescription": "Shows how to create a date parser using d3.utcParse with a format specifier and use it to convert a string representation of a date into a Date object.",
    "codeLanguage": "javascript",
    "codeTokens": 79,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-time-format.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Time Format Library Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const parseTime = d3.utcParse(\"%B %d, %Y\");\nparseTime(\"June 30, 2015\"); // 2023-05-31"
      }
    ],
    "relevance": 0.835
  },
  {
    "codeTitle": "Using a Quantize Scale with Binary Output in D3.js",
    "codeDescription": "Demonstrates how to apply a quantize scale to map continuous values to discrete outputs. Values below the middle threshold map to \"brown\", while values above map to \"steelblue\".",
    "codeLanguage": "javascript",
    "codeTokens": 92,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/quantize.md#2025-04-11_snippet_2",
    "pageTitle": "Quantize Scales in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleQuantize([0, 1], [\"brown\", \"steelblue\"]);\ncolor(0.49); // \"brown\"\ncolor(0.51); // \"steelblue\""
      }
    ],
    "relevance": 0.835
  },
  {
    "codeTitle": "Copying Ordinal Scale",
    "codeDescription": "Shows how to create an exact copy of an ordinal scale.",
    "codeLanguage": "javascript",
    "codeTokens": 58,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/ordinal.md#2025-04-11_snippet_7",
    "pageTitle": "D3.js Ordinal Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const c1 = d3.scaleOrdinal([\"a\", \"b\", \"c\"], d3.schemeTableau10);\nconst c2 = c1.copy();"
      }
    ],
    "relevance": 0.835
  },
  {
    "codeTitle": "Configuring Stack Order with stackOrderDescending in D3.js",
    "codeDescription": "Sets the stack order using d3.stackOrderDescending, which arranges series so that the largest (by sum of values) appears at the bottom of the stack.",
    "codeLanguage": "javascript",
    "codeTokens": 58,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/stack.md#2025-04-11_snippet_11",
    "pageTitle": "D3 Stacks Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const stack = d3.stack().order(d3.stackOrderDescending);"
      }
    ],
    "relevance": 0.835
  },
  {
    "codeTitle": "Fetching Binary Data as Blob with d3.blob",
    "codeDescription": "Demonstrates how to fetch a binary file as a Blob using d3.blob(). This is useful for handling binary data like database files or images that need to be processed as Blob objects.",
    "codeLanguage": "javascript",
    "codeTokens": 60,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-fetch.md#2025-04-11_snippet_2",
    "pageTitle": "D3-Fetch Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const blob = await d3.blob(\"example.db\");"
      }
    ],
    "relevance": 0.834
  },
  {
    "codeTitle": "Default Source Accessor",
    "codeDescription": "Default function for accessing source data in ribbon generator.",
    "codeLanguage": "javascript",
    "codeTokens": 32,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-chord/ribbon.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Ribbon Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function source(d) {\n  return d.source;\n}"
      }
    ],
    "relevance": 0.833
  },
  {
    "codeTitle": "Finding Smallest Enclosing Circle in D3",
    "codeDescription": "Computes the smallest circle that encloses a given array of circles. Each input circle must have radius (r) and center coordinates (x, y). Uses the Matoušek-Sharir-Welzl algorithm to find the optimal enclosing circle.",
    "codeLanguage": "javascript",
    "codeTokens": 69,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/pack.md#2025-04-11_snippet_6",
    "pageTitle": "D3 Circle Pack Layout Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "packEnclose(*circles*)"
      }
    ],
    "relevance": 0.832
  },
  {
    "codeTitle": "Implementing Spherical Mercator Projection in JavaScript",
    "codeDescription": "This function implements the spherical Mercator projection, converting longitude (lambda) and latitude (phi) in radians to x and y coordinates on a plane. It demonstrates a basic point transformation approach to map projections.",
    "codeLanguage": "javascript",
    "codeTokens": 101,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo.md#2025-04-11_snippet_0",
    "pageTitle": "D3-Geo: Map Projections and Geographic Data Handling",
    "codeList": [
      {
        "language": "javascript",
        "code": "function mercator(lambda, phi) {\n  const x = lambda;\n  const y = Math.log(Math.tan(Math.PI / 4 + phi / 2));\n  return [x, y];\n}"
      }
    ],
    "relevance": 0.832
  },
  {
    "codeTitle": "Retrieving the Range from a D3.js Quantile Scale",
    "codeDescription": "Demonstrates how to get the current range values from a quantile scale, which returns the array of discrete output values that domain values are mapped to.",
    "codeLanguage": "javascript",
    "codeTokens": 76,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/quantile.md#2025-04-11_snippet_6",
    "pageTitle": "D3.js Quantile Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "color.range() // [\"#eff3ff\", \"#bdd7e7\", \"#6baed6\", \"#3182bd\", \"#08519c\"]"
      }
    ],
    "relevance": 0.832
  },
  {
    "codeTitle": "Default Pad Angle Accessor",
    "codeDescription": "Default function for accessing pad angle in ribbon generator.",
    "codeLanguage": "javascript",
    "codeTokens": 32,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-chord/ribbon.md#2025-04-11_snippet_8",
    "pageTitle": "D3 Ribbon Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function padAngle() {\n  return 0;\n}"
      }
    ],
    "relevance": 0.83
  },
  {
    "codeTitle": "Using moveTo Method with D3 Path Object",
    "codeDescription": "Shows how to use the moveTo method with a d3.path object to move to a specific point. This is equivalent to context.moveTo in canvas and SVG's moveto command.",
    "codeLanguage": "javascript",
    "codeTokens": 55,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-path.md#2025-04-11_snippet_2",
    "pageTitle": "D3-Path Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "path.moveTo(100, 100);"
      }
    ],
    "relevance": 0.83
  },
  {
    "codeTitle": "Retrieving the Current Curve Factory",
    "codeDescription": "Shows how to retrieve the currently configured curve factory from a line generator.",
    "codeLanguage": "javascript",
    "codeTokens": 34,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/line.md#2025-04-11_snippet_13",
    "pageTitle": "D3.js Line Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "line.curve() // d3.curveStep"
      }
    ],
    "relevance": 0.83
  },
  {
    "codeTitle": "Using d3.max to find maximum values in JavaScript",
    "codeDescription": "Returns the maximum value in the given iterable using natural order. Ignores undefined, null and NaN values. An optional accessor function can be used to transform values before comparison.",
    "codeLanguage": "javascript",
    "codeTokens": 76,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/summarize.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Data Summarization Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.max([3, 2, 1, 1, 6, 2, 4]) // 6"
      },
      {
        "language": "javascript",
        "code": "d3.max([\"bob\", \"alice\", \"carol\"]) // \"carol\""
      },
      {
        "language": "javascript",
        "code": "d3.max([new Date(\"2018-01-01\"), new Date(\"2011-03-09\")]) // 2018-01-01"
      },
      {
        "language": "javascript",
        "code": "d3.max([3, 2, 1, NaN, 4]) // 4"
      },
      {
        "language": "javascript",
        "code": "d3.max(alphabet, (d) => d.frequency) // 0.12702"
      },
      {
        "language": "javascript",
        "code": "d3.max(alphabet, (d) => d.letter === \"E\" ? NaN : d.frequency) // 0.09056"
      },
      {
        "language": "javascript",
        "code": "d3.max([]) // undefined"
      },
      {
        "language": "javascript",
        "code": "d3.max(alphabet, (d) => d.doesnotexist) // undefined"
      }
    ],
    "relevance": 0.83
  },
  {
    "codeTitle": "Creating Radial Link Generator in D3",
    "codeDescription": "Demonstrates how to create a radial link generator for visualizing links in a tree diagram with elements positioned using angle and radius. This example shows the basic setup where angle is mapped to the node's x coordinate and radius to the y coordinate.",
    "codeLanguage": "javascript",
    "codeTokens": 90,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/radial-link.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Radial Link Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const link = d3.linkRadial()\n    .angle((d) => d.x)\n    .radius((d) => d.y);"
      }
    ],
    "relevance": 0.83
  },
  {
    "codeTitle": "Disjoint Check in D3.js - JavaScript",
    "codeDescription": "Shows how to check if two iterables are disjoint, returning true if they have no values in common.",
    "codeLanguage": "javascript",
    "codeTokens": 51,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/sets.md#2025-04-11_snippet_5",
    "pageTitle": "D3.js Set Operations Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.disjoint([1, 3], [2, 4]) // true"
      }
    ],
    "relevance": 0.83
  },
  {
    "codeTitle": "Configuring Start Angle for D3.js Pie Generator in JavaScript",
    "codeDescription": "Sets the overall start angle for the pie chart generated by a D3.js pie generator. The angle is specified in radians, with 0 at 12 o'clock and positive angles proceeding clockwise.",
    "codeLanguage": "javascript",
    "codeTokens": 65,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/pie.md#2025-04-11_snippet_5",
    "pageTitle": "D3.js Pie Chart Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const pie = d3.pie().startAngle(0);"
      }
    ],
    "relevance": 0.83
  },
  {
    "codeTitle": "Setting Y Accessor for D3 Area Generator in JavaScript",
    "codeDescription": "Demonstrates setting the y accessor for a D3 area generator, which internally sets y0 to the specified accessor and y1 to null. This is used for vertically-oriented areas where time flows from top to bottom.",
    "codeLanguage": "javascript",
    "codeTokens": 70,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/area.md#2025-04-11_snippet_10",
    "pageTitle": "D3 Area Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const area = d3.area().y((d) => y(d.Date));"
      }
    ],
    "relevance": 0.83
  },
  {
    "codeTitle": "Using lineTo Method with D3 Path Object",
    "codeDescription": "Shows how to use the lineTo method to draw a straight line from the current point to a specified point. Equivalent to context.lineTo in canvas.",
    "codeLanguage": "javascript",
    "codeTokens": 49,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-path.md#2025-04-11_snippet_4",
    "pageTitle": "D3-Path Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "path.lineTo(200, 200);"
      }
    ],
    "relevance": 0.828
  },
  {
    "codeTitle": "Using arcTo Method with D3 Path Object",
    "codeDescription": "Demonstrates the arcTo method which draws a circular arc segment with a specified radius, tangent to lines between given points.",
    "codeLanguage": "javascript",
    "codeTokens": 54,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-path.md#2025-04-11_snippet_7",
    "pageTitle": "D3-Path Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "path.arcTo(150, 150, 300, 10, 40);"
      }
    ],
    "relevance": 0.828
  },
  {
    "codeTitle": "Using arc Method with D3 Path Object",
    "codeDescription": "Shows how to draw a circular arc segment with the arc method, specifying center point, radius, start angle, and end angle.",
    "codeLanguage": "javascript",
    "codeTokens": 58,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-path.md#2025-04-11_snippet_8",
    "pageTitle": "D3-Path Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "path.arc(80, 80, 70, 0, Math.PI * 2);"
      }
    ],
    "relevance": 0.828
  },
  {
    "codeTitle": "Setting Size for Pack Layout in D3",
    "codeDescription": "Sets or gets the size of the pack layout as a two-element array [width, height]. The default size is [1, 1].",
    "codeLanguage": "javascript",
    "codeTokens": 48,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/pack.md#2025-04-11_snippet_3",
    "pageTitle": "D3 Circle Pack Layout Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "*pack*.size(*size*)"
      }
    ],
    "relevance": 0.828
  },
  {
    "codeTitle": "Creating Constant Functions in D3",
    "codeDescription": "Implementation of a helper function that replaces the removed d3.functor method. This pattern creates a function that always returns the same constant value regardless of the arguments passed to it.",
    "codeLanguage": "javascript",
    "codeTokens": 64,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_31",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function constant(x) {\n  return function() {\n    return x;\n  };\n}"
      }
    ],
    "relevance": 0.828
  },
  {
    "codeTitle": "Retrieving the Current Precision from D3.js Link Generator",
    "codeDescription": "Shows how to retrieve the current maximum fraction digits setting from a link generator.",
    "codeLanguage": "javascript",
    "codeTokens": 34,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/link.md#2025-04-11_snippet_19",
    "pageTitle": "D3.js Link Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "link.digits() // 3"
      }
    ],
    "relevance": 0.826
  },
  {
    "codeTitle": "Generating Binomial Distribution Random Numbers with D3 in JavaScript",
    "codeDescription": "Shows how to use d3.randomBinomial() to generate random numbers with a binomial distribution, with 40 trials and a success probability of 0.5.",
    "codeLanguage": "javascript",
    "codeTokens": 58,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-random.md#2025-04-11_snippet_10",
    "pageTitle": "D3 Random Number Generation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.randomBinomial(40, 0.5)"
      }
    ],
    "relevance": 0.825
  },
  {
    "codeTitle": "Retrieving the Current X Accessor from D3.js Link Generator",
    "codeDescription": "Shows how to retrieve the current x accessor function from a link generator.",
    "codeLanguage": "javascript",
    "codeTokens": 38,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/link.md#2025-04-11_snippet_11",
    "pageTitle": "D3.js Link Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "link.x() // (d) => x(d.x)"
      }
    ],
    "relevance": 0.825
  },
  {
    "codeTitle": "Importing Vue Component for Force Simulation Example",
    "codeDescription": "Vue script setup block that imports the ExampleDisjointForce component to be used in the documentation page as a demonstration of d3-force capabilities.",
    "codeLanguage": "vue",
    "codeTokens": 61,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-force.md#2025-04-11_snippet_0",
    "pageTitle": "d3-force Module Documentation",
    "codeList": [
      {
        "language": "vue",
        "code": "<script setup>\n\nimport ExampleDisjointForce from \"./components/ExampleDisjointForce.vue\";\n\n</script>"
      }
    ],
    "relevance": 0.825
  },
  {
    "codeTitle": "Using the d3.color Function with a Color Name",
    "codeDescription": "Example of parsing a CSS color name into an RGB color object using d3.color().",
    "codeLanguage": "javascript",
    "codeTokens": 57,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-color.md#2025-04-11_snippet_4",
    "pageTitle": "D3 Color Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.color(\"steelblue\") // {r: 70, g: 130, b: 180, opacity: 1}"
      }
    ],
    "relevance": 0.825
  },
  {
    "codeTitle": "Using schemePurples array in D3.js",
    "codeDescription": "A discrete sequential color scheme array with Purple hues. The parameter k specifies the size of the color array to use, which must be between 3 and 9 inclusive.",
    "codeLanguage": "JavaScript",
    "codeTokens": 57,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale-chromatic/sequential.md#2025-04-11_snippet_10",
    "pageTitle": "D3.js Sequential Color Schemes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.schemePurples[k]"
      }
    ],
    "relevance": 0.825
  },
  {
    "codeTitle": "Initializing InternMap with Date keys in D3",
    "codeDescription": "Creates a new InternMap for storing values indexed by Date objects. This allows date-based lookups that match by value rather than reference, bypassing JavaScript's default object equality checking.",
    "codeLanguage": "js",
    "codeTokens": 111,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/intern.md#2025-04-11_snippet_0",
    "pageTitle": "D3 InternMap and InternSet for Value Interning",
    "codeList": [
      {
        "language": "js",
        "code": "const valueByDate = new d3.InternMap([\n  [new Date(\"2021-01-01\"), 42],\n  [new Date(\"2022-01-01\"), 12],\n  [new Date(\"2023-01-01\"), 45]\n]);"
      }
    ],
    "relevance": 0.825
  },
  {
    "codeTitle": "Full-Precision Summation with Accessor using D3 fsum in JavaScript",
    "codeDescription": "Calculates the full-precision sum of values extracted from an array of objects using an accessor function.",
    "codeLanguage": "javascript",
    "codeTokens": 53,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/add.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js Precision Number Addition Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.fsum(penguins, (d) => d.body_mass_g) // 1437000"
      }
    ],
    "relevance": 0.825
  },
  {
    "codeTitle": "Formatting Tick Values with D3.js Time Scales",
    "codeDescription": "Example of creating a time format function for displaying tick values. The function automatically chooses appropriate formats based on the tick interval.",
    "codeLanguage": "javascript",
    "codeTokens": 181,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/time.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js Time Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleUtc().domain([new Date(\"2000-01-01T00:00Z\"), new Date(\"2000-01-01T02:00Z\")]);\nconst T = x.ticks(); // [2000-01-01T00:00Z, 2000-01-01T00:15Z, 2000-01-01T00:30Z, …]\nconst f = x.tickFormat();\nT.map(f); // [\"2000\", \"12:15\", \"12:30\", \"12:45\", \"01 AM\", \"01:15\", \"01:30\", \"01:45\", \"02 AM\"]"
      }
    ],
    "relevance": 0.825
  },
  {
    "codeTitle": "Using d3.time.days with step parameter in D3.js v3.x",
    "codeDescription": "Example of using d3.time.days with a step parameter in D3.js version 3.x, which filtered returned dates based on field number. This returns only odd days of the month from the date range.",
    "codeLanguage": "javascript",
    "codeTokens": 177,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_63",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.time.days(new Date(2016, 4, 28), new Date(2016, 5, 5), 2);\n// [Sun May 29 2016 00:00:00 GMT-0700 (PDT),\n//  Tue May 31 2016 00:00:00 GMT-0700 (PDT),\n//  Wed Jun 01 2016 00:00:00 GMT-0700 (PDT),\n//  Fri Jun 03 2016 00:00:00 GMT-0700 (PDT)]"
      }
    ],
    "relevance": 0.824
  },
  {
    "codeTitle": "Default Y Accessor Function for D3.js Link Generator",
    "codeDescription": "The default y accessor function used by D3.js link generators, which extracts the second element from the input data array.",
    "codeLanguage": "javascript",
    "codeTokens": 48,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/link.md#2025-04-11_snippet_15",
    "pageTitle": "D3.js Link Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function y(d) {\n  return d[1];\n}"
      }
    ],
    "relevance": 0.823
  },
  {
    "codeTitle": "Generating Gamma Distribution Random Numbers with D3 in JavaScript",
    "codeDescription": "Illustrates the usage of d3.randomGamma() to generate random numbers with a gamma distribution, with shape parameter k=2 and scale parameter theta=1.",
    "codeLanguage": "javascript",
    "codeTokens": 53,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-random.md#2025-04-11_snippet_11",
    "pageTitle": "D3 Random Number Generation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.randomGamma(2, 1)"
      }
    ],
    "relevance": 0.822
  },
  {
    "codeTitle": "HTML Structure for Key-based Data Joining",
    "codeDescription": "Sample HTML structure showing div elements with IDs that will be used for key-based data joining.",
    "codeLanguage": "html",
    "codeTokens": 80,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/joining.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Data Joining Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<div id=\"Ford\"></div>\n<div id=\"Jarrah\"></div>\n<div id=\"Kwon\"></div>\n<div id=\"Locke\"></div>\n<div id=\"Reyes\"></div>\n<div id=\"Shephard\"></div>"
      }
    ],
    "relevance": 0.822
  },
  {
    "codeTitle": "Accessing Nested Rolled-up Data in JavaScript",
    "codeDescription": "Demonstrates how to retrieve values from a nested rollup result. This example gets the count of female Adelie penguins from data rolled up by species and sex.",
    "codeLanguage": "javascript",
    "codeTokens": 65,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/group.md#2025-04-11_snippet_8",
    "pageTitle": "D3.js Data Grouping Methods Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "speciesSexCount.get(\"Adelie\").get(\"FEMALE\") // 73"
      }
    ],
    "relevance": 0.822
  },
  {
    "codeTitle": "Adding Multiple CSS Classes to Elements with D3 Selection",
    "codeDescription": "Adds multiple CSS classes (\"foo\" and \"bar\") to the selected elements by providing space-separated class names and setting the value to true.",
    "codeLanguage": "javascript",
    "codeTokens": 49,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/modifying.md#2025-04-11_snippet_5",
    "pageTitle": "D3 Selection Element Modification Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection.classed(\"foo bar\", true)"
      }
    ],
    "relevance": 0.821
  },
  {
    "codeTitle": "Default ID Accessor for D3 Stratify",
    "codeDescription": "Shows the default implementation of the id accessor function for the stratify operator. This function extracts the 'id' property from each data object to identify nodes in the hierarchy.",
    "codeLanguage": "js",
    "codeTokens": 59,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/stratify.md#2025-04-11_snippet_4",
    "pageTitle": "D3 Stratify Hierarchical Data Operator",
    "codeList": [
      {
        "language": "js",
        "code": "function id(d) {\n  return d.id;\n}"
      }
    ],
    "relevance": 0.82
  },
  {
    "codeTitle": "Lowering Elements in D3.js Selection",
    "codeDescription": "Example of lowering elements to become the first child of their parent using the each() method. This effectively moves elements to the beginning of their parent's child list.",
    "codeLanguage": "javascript",
    "codeTokens": 60,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/modifying.md#2025-04-11_snippet_20",
    "pageTitle": "D3 Selection Element Modification Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection.each(function() {\n  this.parentNode.insertBefore(this, this.parentNode.firstChild);\n});"
      }
    ],
    "relevance": 0.82
  },
  {
    "codeTitle": "Using nice() to Extend Time Scale Domains in D3.js",
    "codeDescription": "Example of extending a time scale's domain to start and end on nice round values. This is useful when domains are computed from data and may have irregular bounds.",
    "codeLanguage": "javascript",
    "codeTokens": 118,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/time.md#2025-04-11_snippet_5",
    "pageTitle": "D3.js Time Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleUtc().domain([new Date(\"2000-01-01T12:34Z\"), new Date(\"2000-01-01T12:59Z\")]).nice();\nx.domain(); // [2000-01-01T12:30Z, 2000-01-01T13:00Z]"
      }
    ],
    "relevance": 0.82
  },
  {
    "codeTitle": "Vue.js Component Setup for D3.js Color Schemes",
    "codeDescription": "This code sets up a Vue.js component that imports D3.js and a custom ColorSwatches component. It's used to display and interact with the various color schemes discussed in the document.",
    "codeLanguage": "html",
    "codeTokens": 82,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale-chromatic/categorical.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Categorical Color Schemes",
    "codeList": [
      {
        "language": "html",
        "code": "<script setup>\n\nimport * as d3 from \"d3\";\nimport ColorSwatches from \"../components/ColorSwatches.vue\";\n\n</script>"
      }
    ],
    "relevance": 0.82
  },
  {
    "codeTitle": "Configuring Value Accessor for D3 Stack Generator",
    "codeDescription": "Demonstrates setting the value accessor for a D3 stack generator. The value accessor determines how values are extracted from the data for each key (series).",
    "codeLanguage": "javascript",
    "codeTokens": 58,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/stack.md#2025-04-11_snippet_5",
    "pageTitle": "D3 Stacks Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const stack = d3.stack().value((d, key) => d[key]);"
      }
    ],
    "relevance": 0.82
  },
  {
    "codeTitle": "Constructing a D3 Hierarchy from Data in JavaScript",
    "codeDescription": "Shows how to create a D3 hierarchy object from a hierarchical data structure.",
    "codeLanguage": "JavaScript",
    "codeTokens": 37,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/hierarchy.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Hierarchy Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const root = d3.hierarchy(data);"
      }
    ],
    "relevance": 0.82
  },
  {
    "codeTitle": "Setting Decimal Precision for D3.js Arc Generator",
    "codeDescription": "Shows how to set the maximum number of digits after the decimal point for arc path data generation.",
    "codeLanguage": "javascript",
    "codeTokens": 41,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/arc.md#2025-04-11_snippet_16",
    "pageTitle": "D3 Arc Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const arc = d3.arc().digits(3);"
      }
    ],
    "relevance": 0.82
  },
  {
    "codeTitle": "Using schemeYlGnBu array in D3.js",
    "codeDescription": "A discrete sequential multi-hue color scheme array transitioning from Yellow to Green to Blue. The parameter k specifies the size of the color array to use, which must be between 3 and 9 inclusive.",
    "codeLanguage": "JavaScript",
    "codeTokens": 65,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale-chromatic/sequential.md#2025-04-11_snippet_20",
    "pageTitle": "D3.js Sequential Color Schemes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.schemeYlGnBu[k]"
      }
    ],
    "relevance": 0.82
  },
  {
    "codeTitle": "Setting a Custom X Accessor for D3.js Link Generator",
    "codeDescription": "Demonstrates how to set a custom x-accessor function for a horizontal link generator that applies a scale function to the x property of the data.",
    "codeLanguage": "javascript",
    "codeTokens": 58,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/link.md#2025-04-11_snippet_10",
    "pageTitle": "D3.js Link Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const link = d3.linkHorizontal().x((d) => x(d.x));"
      }
    ],
    "relevance": 0.82
  },
  {
    "codeTitle": "Setting a Diverging Scale's Interpolator in D3.js",
    "codeDescription": "Demonstrates how to set a diverging scale's interpolator function after creation.",
    "codeLanguage": "javascript",
    "codeTokens": 50,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/diverging.md#2025-04-11_snippet_4",
    "pageTitle": "Diverging Scales in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleDiverging().interpolator(d3.interpolateRdBu);"
      }
    ],
    "relevance": 0.818
  },
  {
    "codeTitle": "Using Creator Function in D3.js",
    "codeDescription": "Examples showing how d3.creator() can be used to create element-generating functions for append() and insert() methods. Shows two equivalent implementations.",
    "codeLanguage": "javascript",
    "codeTokens": 46,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/modifying.md#2025-04-11_snippet_22",
    "pageTitle": "D3 Selection Element Modification Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection.append(\"div\");"
      },
      {
        "language": "javascript",
        "code": "selection.append(d3.creator(\"div\"));"
      }
    ],
    "relevance": 0.818
  },
  {
    "codeTitle": "Loading XML File with MIME Type in D3.js v4.0",
    "codeDescription": "Example of loading an XML file using d3.xml with a specified MIME type in D3.js version 4.0. This demonstrates the new method chaining approach for setting the MIME type.",
    "codeLanguage": "JavaScript",
    "codeTokens": 75,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_41",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.xml(\"file.svg\").mimeType(\"image/svg+xml\").get(function(error, svg) {\n  …\n});"
      }
    ],
    "relevance": 0.818
  },
  {
    "codeTitle": "Interpolating between colors in Cubehelix color space using d3.interpolateCubehelix",
    "codeDescription": "Returns a Cubehelix color space interpolator between two colors using a configurable gamma. Uses the shortest path between hues. The colors are converted to Cubehelix using d3.cubehelix.",
    "codeLanguage": "javascript",
    "codeTokens": 66,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-interpolate/color.md#2025-04-11_snippet_8",
    "pageTitle": "D3.js Color Interpolation Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.interpolateCubehelix(\"purple\", \"orange\")"
      }
    ],
    "relevance": 0.818
  },
  {
    "codeTitle": "Calculating Polygon Area with D3",
    "codeDescription": "This function calculates the signed area of a polygon. A positive result indicates counterclockwise vertex order, while a negative result indicates clockwise order.",
    "codeLanguage": "javascript",
    "codeTokens": 71,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-polygon.md#2025-04-11_snippet_1",
    "pageTitle": "D3-Polygon Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.polygonArea([[1, 1], [1.5, 0], [2, 1]]) // -0.5"
      }
    ],
    "relevance": 0.816
  },
  {
    "codeTitle": "Retrieving a Diverging Scale's Interpolator in D3.js",
    "codeDescription": "Shows how to get the current interpolator function from a diverging scale.",
    "codeLanguage": "javascript",
    "codeTokens": 41,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/diverging.md#2025-04-11_snippet_5",
    "pageTitle": "Diverging Scales in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "color.interpolator() // d3.interpolateRdBu"
      }
    ],
    "relevance": 0.815
  },
  {
    "codeTitle": "Using Path-Based Hierarchy with D3 Stratify",
    "codeDescription": "Demonstrates how to use the path accessor in stratify to automatically create hierarchies from slash-delimited file paths. This method ignores id and parentId accessors and infers relationships from the path structure.",
    "codeLanguage": "js",
    "codeTokens": 166,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/stratify.md#2025-04-11_snippet_6",
    "pageTitle": "D3 Stratify Hierarchical Data Operator",
    "codeList": [
      {
        "language": "js",
        "code": "const paths = [\n  \"axes.js\",\n  \"channel.js\",\n  \"context.js\",\n  \"legends.js\",\n  \"legends/ramp.js\",\n  \"marks/density.js\",\n  \"marks/dot.js\",\n  \"marks/frame.js\",\n  \"scales/diverging.js\",\n  \"scales/index.js\",\n  \"scales/ordinal.js\",\n  \"stats.js\",\n  \"style.js\",\n  \"transforms/basic.js\",\n  \"transforms/bin.js\",\n  \"transforms/centroid.js\",\n  \"warnings.js\",\n];"
      },
      {
        "language": "js",
        "code": "const root = d3.stratify().path((d) => d)(paths);"
      }
    ],
    "relevance": 0.815
  },
  {
    "codeTitle": "Setting CSS Style Properties with D3 Selection",
    "codeDescription": "Sets the CSS \"color\" style property to \"red\" on the selected elements. The style method allows direct manipulation of inline CSS styles on elements.",
    "codeLanguage": "javascript",
    "codeTokens": 50,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/modifying.md#2025-04-11_snippet_8",
    "pageTitle": "D3 Selection Element Modification Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection.style(\"color\", \"red\")"
      }
    ],
    "relevance": 0.815
  },
  {
    "codeTitle": "Setting Both Inner and Outer Padding with the padding Method",
    "codeDescription": "A convenience method for setting both inner and outer padding to the same value on a band scale.",
    "codeLanguage": "javascript",
    "codeTokens": 59,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/band.md#2025-04-11_snippet_8",
    "pageTitle": "D3.js Band Scale Documentation",
    "codeList": [
      {
        "language": "javascript-vue",
        "code": "const x = d3.scaleBand([\"a\", \"b\", \"c\"], [0, 960]).padding({{padding}});"
      },
      {
        "language": "javascript-vue",
        "code": "x.padding() // {{padding}}"
      }
    ],
    "relevance": 0.815
  },
  {
    "codeTitle": "Creating a Radial Line Generator in D3.js",
    "codeDescription": "Constructs a new radial line generator with default settings using d3.lineRadial().",
    "codeLanguage": "javascript",
    "codeTokens": 39,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/radial-line.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Radial Line Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const line = d3.lineRadial();"
      }
    ],
    "relevance": 0.815
  },
  {
    "codeTitle": "Sorting D3 Hierarchy Nodes for Trees and Dendrograms in JavaScript",
    "codeDescription": "Shows how to sort nodes in a D3 hierarchy for tree and dendrogram layouts, considering height and node id.",
    "codeLanguage": "JavaScript",
    "codeTokens": 73,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/hierarchy.md#2025-04-11_snippet_9",
    "pageTitle": "D3.js Hierarchy Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "root\n    .sum((d) => d.value)\n    .sort((a, b) => b.height - a.height || d3.ascending(a.id, b.id));"
      }
    ],
    "relevance": 0.815
  },
  {
    "codeTitle": "Using schemeGreys array in D3.js",
    "codeDescription": "A discrete sequential color scheme array with Grey hues. The parameter k specifies the size of the color array to use, which must be between 3 and 9 inclusive.",
    "codeLanguage": "JavaScript",
    "codeTokens": 55,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale-chromatic/sequential.md#2025-04-11_snippet_8",
    "pageTitle": "D3.js Sequential Color Schemes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.schemeGreys[k]"
      }
    ],
    "relevance": 0.815
  },
  {
    "codeTitle": "Creating a D3 Chord Layout",
    "codeDescription": "Initializes a new chord layout with default settings. This is the first step to create a chord diagram, which will later be used to compute angle calculations based on a matrix of values.",
    "codeLanguage": "javascript",
    "codeTokens": 56,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-chord/chord.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Chord Layout Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const chord = d3.chord();"
      }
    ],
    "relevance": 0.815
  },
  {
    "codeTitle": "Vue Component Setup with D3 Axis",
    "codeDescription": "Initial setup of a Vue component with D3 axis integration, including reactive domain updates and lifecycle hooks.",
    "codeLanguage": "javascript",
    "codeTokens": 121,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-axis.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Axis Component Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const domain = shallowRef([0, 100]);\nconst range = [20, 668];\n\nlet timer;\n\nonMounted(() => {\n  timer = d3.interval(() => {\n    const x = Math.random() * 100;\n    const l = Math.random() * 100;\n    domain.value = [x, x + l];\n  }, 5000);\n});\n\nonUnmounted(() => {\n  timer?.stop();\n});"
      }
    ],
    "relevance": 0.815
  },
  {
    "codeTitle": "Setting a value accessor for a bin generator in D3",
    "codeDescription": "Sets the value accessor function for a bin generator to extract the culmen_length_mm property from each data point. This determines which values are used for binning.",
    "codeLanguage": "javascript",
    "codeTokens": 62,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/bin.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Binning Data",
    "codeList": [
      {
        "language": "javascript",
        "code": "const bin = d3.bin().value((d) => d.culmen_length_mm);"
      }
    ],
    "relevance": 0.814
  },
  {
    "codeTitle": "Raising Elements in D3.js Selection",
    "codeDescription": "Example of raising elements to become the last child of their parent using the each() method. This effectively moves elements to the end of their parent's child list.",
    "codeLanguage": "javascript",
    "codeTokens": 56,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/modifying.md#2025-04-11_snippet_19",
    "pageTitle": "D3 Selection Element Modification Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection.each(function() {\n  this.parentNode.appendChild(this);\n});"
      }
    ],
    "relevance": 0.814
  },
  {
    "codeTitle": "Default Weight Accessor in D3 Density Estimation",
    "codeDescription": "Default function for determining point weights in D3's density estimation. Returns a constant weight of 1 for all points.",
    "codeLanguage": "javascript",
    "codeTokens": 46,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-contour/density.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Density Estimation Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function weight() {\n  return 1;\n}"
      }
    ],
    "relevance": 0.813
  },
  {
    "codeTitle": "Getting the Current Domain of a D3 Linear Scale",
    "codeDescription": "Retrieves a copy of the scale's current domain using the domain() method without arguments.",
    "codeLanguage": "javascript",
    "codeTokens": 43,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_7",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "color.domain() // [-1, 0, 1]"
      }
    ],
    "relevance": 0.812
  },
  {
    "codeTitle": "Checking Default Unknown Value",
    "codeDescription": "Demonstrates how to check the default unknown value of an ordinal scale.",
    "codeLanguage": "javascript",
    "codeTokens": 59,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/ordinal.md#2025-04-11_snippet_8",
    "pageTitle": "D3.js Ordinal Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleOrdinal([\"a\", \"b\", \"c\"], d3.schemeTableau10);\ncolor.unknown(); // d3.scaleImplicit"
      }
    ],
    "relevance": 0.812
  },
  {
    "codeTitle": "Using bisectRight() Function on an Array of Dates in JavaScript",
    "codeDescription": "Uses the bisectRight function to find an insertion point after any existing equivalent dates. This returns the same result as bisect() and finds where January 2, 2014 would be inserted after any existing instances.",
    "codeLanguage": "javascript",
    "codeTokens": 86,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/bisect.md#2025-04-11_snippet_6",
    "pageTitle": "D3.js Bisector Functions Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.bisectRight(aapl.map((d) => d.Date), new Date(\"2014-01-02\")) // 163"
      }
    ],
    "relevance": 0.812
  },
  {
    "codeTitle": "Vue Component Setup for Displaying Cluster Example",
    "codeDescription": "A Vue setup script that imports the Plot library and defines a sample hierarchical dataset of gods for visualization with the cluster layout.",
    "codeLanguage": "vue",
    "codeTokens": 124,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/cluster.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Cluster Layout Documentation",
    "codeList": [
      {
        "language": "vue",
        "code": "<script setup>\n\nimport * as Plot from \"@observablehq/plot\";\nimport PlotRender from \"../components/PlotRender.js\";\n\nconst gods = [\n  \"Chaos/Gaia/Mountains\",\n  \"Chaos/Gaia/Pontus\",\n  \"Chaos/Gaia/Uranus\",\n  \"Chaos/Eros\",\n  \"Chaos/Erebus\",\n  \"Chaos/Tartarus\"\n];\n\n</script>"
      }
    ],
    "relevance": 0.81
  },
  {
    "codeTitle": "Parsing TSV Data with d3.tsvParse",
    "codeDescription": "Parses a TSV (tab-separated values) string into an array of objects with column names as properties. The result includes a columns property with the column names in order.",
    "codeLanguage": "js",
    "codeTokens": 87,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-dsv.md#2025-04-11_snippet_1",
    "pageTitle": "d3-dsv: Parsing and Formatting Delimiter-Separated Values",
    "codeList": [
      {
        "language": "js",
        "code": "d3.tsvParse(\"foo\\tbar\\n1\\t2\") // [{foo: \"1\", bar: \"2\"}, columns: [\"foo\", \"bar\"]]"
      }
    ],
    "relevance": 0.81
  },
  {
    "codeTitle": "Retrieving the current threshold generator in D3",
    "codeDescription": "Shows how to retrieve the current threshold generator function from a bin generator, which in this example returns a function that creates thresholds at 0, 0.5, and 1.",
    "codeLanguage": "javascript",
    "codeTokens": 66,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/bin.md#2025-04-11_snippet_11",
    "pageTitle": "D3 Binning Data",
    "codeList": [
      {
        "language": "javascript",
        "code": "bin.thresholds() // () => [0, 0.5, 1]"
      }
    ],
    "relevance": 0.81
  },
  {
    "codeTitle": "Initializing D3 Radial Area Generator",
    "codeDescription": "Creates a new radial area generator with default settings.",
    "codeLanguage": "javascript",
    "codeTokens": 33,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/radial-area.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Radial Area Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const area = d3.areaRadial();"
      }
    ],
    "relevance": 0.81
  },
  {
    "codeTitle": "Sorting Array with Multiple Accessors in D3.js",
    "codeDescription": "Demonstrates how to use d3.sort with multiple accessor functions to sort an array of objects based on multiple properties.",
    "codeLanguage": "JavaScript",
    "codeTokens": 52,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/sort.md#2025-04-11_snippet_10",
    "pageTitle": "Sorting Data in D3.js",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.sort(points, ({x}) => x, ({y}) => y)"
      }
    ],
    "relevance": 0.81
  },
  {
    "codeTitle": "Creating an Ordinal Scale with Stroke Symbols",
    "codeDescription": "Creates an ordinal scale that maps categories to symbol types designed for stroking.",
    "codeLanguage": "javascript",
    "codeTokens": 42,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/symbol.md#2025-04-11_snippet_15",
    "pageTitle": "D3 Symbol Generator for Data Visualization",
    "codeList": [
      {
        "language": "javascript",
        "code": "const symbolType = d3.scaleOrdinal(d3.symbolsStroke);"
      }
    ],
    "relevance": 0.81
  },
  {
    "codeTitle": "Implementing Default Separation Function for Cluster Layout",
    "codeDescription": "The default separation function used by D3's cluster layout to determine the spacing between neighboring leaf nodes. It returns 1 for siblings and 2 for non-siblings.",
    "codeLanguage": "javascript",
    "codeTokens": 67,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/cluster.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Cluster Layout Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function separation(a, b) {\n  return a.parent == b.parent ? 1 : 2;\n}"
      }
    ],
    "relevance": 0.81
  },
  {
    "codeTitle": "Fitting New Jersey State Plane Projection",
    "codeDescription": "Example of using fitExtent to scale and translate a Transverse Mercator projection to fit New Jersey GeoJSON data within a 960×500 bounding box with 20px padding.",
    "codeLanguage": "javascript",
    "codeTokens": 100,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/projection.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Geo Projections API Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "var projection = d3.geoTransverseMercator()\n    .rotate([74 + 30 / 60, -38 - 50 / 60])\n    .fitExtent([[20, 20], [940, 480]], nj);"
      }
    ],
    "relevance": 0.81
  },
  {
    "codeTitle": "Generating Random Integers with D3 in JavaScript",
    "codeDescription": "Shows the usage of d3.randomInt() to generate random integers with a uniform distribution between 0 and 99.",
    "codeLanguage": "javascript",
    "codeTokens": 50,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-random.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Random Number Generation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.randomInt(100) // generate integers ≥0 and <100"
      }
    ],
    "relevance": 0.81
  },
  {
    "codeTitle": "Custom Percentage Tick Formatting in D3.js Linear Scales",
    "codeDescription": "Demonstrates creating a custom percentage format for ticks where the precision is automatically set by the scale based on the tick interval.",
    "codeLanguage": "javascript",
    "codeTokens": 119,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_24",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleLinear([-1, 1], [0, 960]);\nconst T = x.ticks(5); // [-1, -0.5, 0, 0.5, 1]\nconst f = x.tickFormat(5, \"+%\");\nT.map(f); // [\"−100%\", \"−50%\", \"+0%\", \"+50%\", \"+100%\"]"
      }
    ],
    "relevance": 0.808
  },
  {
    "codeTitle": "Using interval.every with interval.range from different start date in JavaScript",
    "codeDescription": "Creates a range of dates containing only every 2nd day, but starting from January 2 to January 8, 2015. This demonstrates how consistent intervals are maintained regardless of range start date.",
    "codeLanguage": "javascript",
    "codeTokens": 122,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-time.md#2025-04-11_snippet_9",
    "pageTitle": "D3 Time Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.timeDay.every(2).range(new Date(2015, 0, 2), new Date(2015, 0, 8)) // [2015-01-03T00:00, 2015-01-05T00:00, 2015-01-07T00:00]"
      }
    ],
    "relevance": 0.808
  },
  {
    "codeTitle": "Default Radius Accessor",
    "codeDescription": "Default function for accessing radius in ribbon generator.",
    "codeLanguage": "javascript",
    "codeTokens": 31,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-chord/ribbon.md#2025-04-11_snippet_5",
    "pageTitle": "D3 Ribbon Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function radius(d) {\n  return d.radius;\n}"
      }
    ],
    "relevance": 0.808
  },
  {
    "codeTitle": "Configuring Rounding in D3 Partition Layout",
    "codeDescription": "Enables or disables rounding in the partition layout. When enabled, it rounds the x0, y0, x1, and y1 values to integers. Default is false.",
    "codeLanguage": "javascript",
    "codeTokens": 53,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/partition.md#2025-04-11_snippet_3",
    "pageTitle": "D3 Partition Layout Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "*partition*.round(*round*)"
      }
    ],
    "relevance": 0.808
  },
  {
    "codeTitle": "Qualifying namespace names using d3.namespace function",
    "codeDescription": "Shows how to use the d3.namespace function to qualify a name with a namespace prefix, returning an object with space and local attributes.",
    "codeLanguage": "JavaScript",
    "codeTokens": 68,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/namespaces.md#2025-04-11_snippet_1",
    "pageTitle": "XML Namespaces in D3.js",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.namespace(\"svg:text\") // {space: \"http://www.w3.org/2000/svg\", local: \"text\"}"
      }
    ],
    "relevance": 0.807
  },
  {
    "codeTitle": "Using formatPrefix for Consistent SI Prefix Formatting",
    "codeDescription": "This snippet shows how to use formatPrefix to create a formatter that consistently uses the same SI prefix for a range of values, useful for comparing numbers in the same units.",
    "codeLanguage": "javascript",
    "codeTokens": 90,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-format.md#2025-04-11_snippet_7",
    "pageTitle": "d3-format: Number Formatting Library",
    "codeList": [
      {
        "language": "javascript",
        "code": "const f = d3.formatPrefix(\",.0\", 1e-6);\nf(0.00042); // \"420µ\"\nf(0.0042); // \"4,200µ\""
      }
    ],
    "relevance": 0.806
  },
  {
    "codeTitle": "Creating a Copy of a Linear Scale in D3.js",
    "codeDescription": "Shows how to create an exact copy of a scale that can be modified independently of the original scale using the copy() method.",
    "codeLanguage": "javascript",
    "codeTokens": 66,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_27",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x1 = d3.scaleLinear([0, 100], [\"red\", \"blue\"]);\nconst x2 = x1.copy();"
      }
    ],
    "relevance": 0.805
  },
  {
    "codeTitle": "Transposing Matrices with d3.transpose in JavaScript",
    "codeDescription": "Performs a matrix transpose operation, converting rows to columns and columns to rows. Useful for restructuring tabular data.",
    "codeLanguage": "javascript",
    "codeTokens": 74,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/transform.md#2025-04-11_snippet_3",
    "pageTitle": "D3 Data Transformation Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.transpose([[\"Alice\", \"Bob\", \"Carol\"], [32, 13, 14]]) // [[\"Alice\", 32], [\"Bob\", 13], [\"Carol\", 14]]"
      },
      {
        "language": "javascript",
        "code": "d3.transpose([[\"Alice\", 32], [\"Bob\", 13], [\"Carol\", 14]]) // [[\"Alice\", \"Bob\", \"Carol\"], [32, 13, 14]]"
      }
    ],
    "relevance": 0.805
  },
  {
    "codeTitle": "Retrieving Transition Easing Function in D3",
    "codeDescription": "Returns the current easing function for the first non-null element in the transition. Useful when the transition contains only one element.",
    "codeLanguage": "javascript",
    "codeTokens": 44,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-transition/timing.md#2025-04-11_snippet_6",
    "pageTitle": "D3 Transition Timing Configuration",
    "codeList": [
      {
        "language": "javascript",
        "code": "transition.ease() // d3.easeCubic"
      }
    ],
    "relevance": 0.805
  },
  {
    "codeTitle": "Applying Box Blur to a 2D Matrix in JavaScript",
    "codeDescription": "Shows how to use d3.blur2() to blur a 2D matrix represented as a flat array with width and height properties. The example blurs a 4×3 matrix with a radius of 1.",
    "codeLanguage": "javascript",
    "codeTokens": 126,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/blur.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Blur Functions Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const matrix = {\n  width: 4,\n  height: 3,\n  data: [\n    1, 0, 0, 0,\n    0, 0, 0, 0,\n    0, 0, 0, 1\n  ]\n};\n\nd3.blur2(matrix, 1);"
      }
    ],
    "relevance": 0.805
  },
  {
    "codeTitle": "Creating and Using a D3 Path Object for SVG Path Generation",
    "codeDescription": "Demonstrates how to create a d3.path object, use it with the drawCircle function, and convert the result to an SVG path data string.",
    "codeLanguage": "javascript",
    "codeTokens": 94,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-path.md#2025-04-11_snippet_1",
    "pageTitle": "D3-Path Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const path = d3.path();\ndrawCircle(path, 40);\npath.toString(); // \"M40,0A40,40,0,1,1,-40,0A40,40,0,1,1,40,0\""
      }
    ],
    "relevance": 0.805
  },
  {
    "codeTitle": "Configuring Custom Time Format Locale in D3.js",
    "codeDescription": "This snippet demonstrates how to create a custom time format locale using d3.timeFormatLocale(). It defines date and time formats, weekday and month names, and other locale-specific settings for English (US).",
    "codeLanguage": "javascript",
    "codeTokens": 234,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-time-format.md#2025-04-11_snippet_15",
    "pageTitle": "D3 Time Format Library Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const enUs = d3.timeFormatLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});"
      }
    ],
    "relevance": 0.805
  },
  {
    "codeTitle": "Zipping Arrays with d3.zip in JavaScript",
    "codeDescription": "Combines multiple arrays by pairing elements at the same index positions. The result is truncated to the length of the shortest input array.",
    "codeLanguage": "javascript",
    "codeTokens": 77,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/transform.md#2025-04-11_snippet_4",
    "pageTitle": "D3 Data Transformation Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.zip([\"Alice\", \"Bob\", \"Carol\"], [32, 13, 14]) // [[\"Alice\", 32], [\"Bob\", 13], [\"Carol\", 14]]"
      }
    ],
    "relevance": 0.805
  },
  {
    "codeTitle": "Using the nice() Method to Round Domain Values in D3.js",
    "codeDescription": "Shows how the nice() method extends a scale's domain to start and end on nice round values, making it more readable for visualization purposes.",
    "codeLanguage": "javascript",
    "codeTokens": 80,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_25",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleLinear([0.241079, 0.969679], [0, 960]).nice();\nx.domain(); // [0.2, 1]"
      }
    ],
    "relevance": 0.805
  },
  {
    "codeTitle": "Default X-Coordinate Accessor in D3 Density Estimation",
    "codeDescription": "Default function for accessing x-coordinates from data points in D3's density estimation. Returns the first element of the data point array.",
    "codeLanguage": "javascript",
    "codeTokens": 51,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-contour/density.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Density Estimation Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function x(d) {\n  return d[0];\n}"
      }
    ],
    "relevance": 0.805
  },
  {
    "codeTitle": "Using d3.count to count valid numeric values in JavaScript",
    "codeDescription": "Returns the number of valid number values (i.e., not null, NaN, or undefined) in the specified iterable. Accepts an optional accessor function.",
    "codeLanguage": "javascript",
    "codeTokens": 63,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/summarize.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Data Summarization Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.count(penguins, (d) => d.body_mass_g) // 342"
      }
    ],
    "relevance": 0.804
  },
  {
    "codeTitle": "Setting Varying Easing Functions in D3 Transitions",
    "codeDescription": "Specifies a factory for creating easing functions for each element in the transition. Allows for dynamic easing based on data or element properties.",
    "codeLanguage": "javascript",
    "codeTokens": 56,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-transition/timing.md#2025-04-11_snippet_7",
    "pageTitle": "D3 Transition Timing Configuration",
    "codeList": [
      {
        "language": "javascript",
        "code": "transition.easeVarying((d) => d3.easePolyIn.exponent(d.exponent));"
      }
    ],
    "relevance": 0.803
  },
  {
    "codeTitle": "Setting Base for Logarithmic Scale in D3.js",
    "codeDescription": "Sets the base of the logarithmic scale to 2 instead of the default 10. Affects which ticks are chosen but not the scale encoding.",
    "codeLanguage": "javascript",
    "codeTokens": 68,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/log.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Logarithmic Scale Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleLog([1, 1024], [0, 960]).base(2);"
      }
    ],
    "relevance": 0.802
  },
  {
    "codeTitle": "Configuring Data Sorting for D3.js Pie Generator in JavaScript",
    "codeDescription": "Sets a custom sorting function for the data used in a D3.js pie generator. This affects the order of the pie slices in the generated chart.",
    "codeLanguage": "javascript",
    "codeTokens": 68,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/pie.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Pie Chart Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const pie = d3.pie().sort((a, b) => d3.ascending(a.name, b.name));"
      }
    ],
    "relevance": 0.802
  },
  {
    "codeTitle": "Setting Radius Accessor for D3.js Radial Line Generator",
    "codeDescription": "Configures the radius accessor for a radial line generator, which determines the distance from the origin for each data point.",
    "codeLanguage": "javascript",
    "codeTokens": 55,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/radial-line.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Radial Line Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const line = d3.lineRadial().radius((d) => r(d.temperature));"
      }
    ],
    "relevance": 0.802
  },
  {
    "codeTitle": "Converting Object Arrays to CSV with Map and CsvFormatRows",
    "codeDescription": "Shows how to convert an array of objects to a CSV string by first mapping each object to an array of values, then using csvFormatRows to format the result. This approach allows explicit control over column order and data transformation.",
    "codeLanguage": "javascript",
    "codeTokens": 117,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-dsv.md#2025-04-11_snippet_14",
    "pageTitle": "d3-dsv: Parsing and Formatting Delimiter-Separated Values",
    "codeList": [
      {
        "language": "javascript",
        "code": "const string = d3.csvFormatRows(data.map((d, i) => {\n  return [\n    d.year.getUTCFullYear(), // Assuming d.year is a Date object.\n    d.make,\n    d.model,\n    d.length\n  ];\n}));"
      }
    ],
    "relevance": 0.8
  },
  {
    "codeTitle": "Using Quickselect Algorithm with D3.js",
    "codeDescription": "Demonstrates the use of d3.quickselect to rearrange array elements and find the k-th smallest element. It modifies the array in-place.",
    "codeLanguage": "JavaScript",
    "codeTokens": 98,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/sort.md#2025-04-11_snippet_4",
    "pageTitle": "Sorting Data in D3.js",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "const numbers = [65, 28, 59, 33, 21, 56, 22, 95, 50, 12, 90, 53, 28, 77, 39];\n\nd3.quickselect(numbers, 8)"
      }
    ],
    "relevance": 0.8
  },
  {
    "codeTitle": "Interpolating Fill Style from Red to Blue using styleTween in D3.js",
    "codeDescription": "Example showing how to use styleTween to interpolate the fill style from red to blue. This utilizes d3.interpolateRgb to create a smooth color transition between two fixed values.",
    "codeLanguage": "javascript",
    "codeTokens": 66,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-transition/modifying.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Element Modification with Transitions",
    "codeList": [
      {
        "language": "javascript",
        "code": "transition.styleTween(\"fill\", () => d3.interpolateRgb(\"red\", \"blue\"));"
      }
    ],
    "relevance": 0.8
  },
  {
    "codeTitle": "Using Freedman-Diaconis rule for bin thresholds in D3",
    "codeDescription": "Configures a bin generator to use the Freedman-Diaconis rule to determine the optimal number of bins based on the data distribution.",
    "codeLanguage": "javascript",
    "codeTokens": 58,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/bin.md#2025-04-11_snippet_12",
    "pageTitle": "D3 Binning Data",
    "codeList": [
      {
        "language": "javascript",
        "code": "const bin = d3.bin().thresholds(d3.thresholdFreedmanDiaconis);"
      }
    ],
    "relevance": 0.8
  },
  {
    "codeTitle": "Using easeBackInOut with different overshoot configurations in D3.js",
    "codeDescription": "Demonstration of easeBackInOut function with various overshoot parameters. Creates an array of easing functions with different characteristics for visualization.",
    "codeLanguage": "javascript",
    "codeTokens": 74,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-ease.md#2025-04-11_snippet_6",
    "pageTitle": "D3 Easing Functions Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.ticks(0.5, 3, 6).map((a) => ({y: d3.easeBackInOut.overshoot(a), stroke: a}))"
      }
    ],
    "relevance": 0.8
  },
  {
    "codeTitle": "Calculating Projected Area of a Geographic Feature in D3",
    "codeDescription": "Shows how to use the path.area() method to calculate the projected planar area of a GeoJSON object.",
    "codeLanguage": "javascript",
    "codeTokens": 49,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/path.md#2025-04-11_snippet_4",
    "pageTitle": "D3 Geographic Path Generation",
    "codeList": [
      {
        "language": "javascript",
        "code": "path.area(california) // 17063.1671837991 px²"
      }
    ],
    "relevance": 0.8
  },
  {
    "codeTitle": "Generating a Link Path in D3.js",
    "codeDescription": "Shows how to generate a link path using source and target coordinates. Returns an SVG path string representing a smooth curve between the points.",
    "codeLanguage": "javascript",
    "codeTokens": 76,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/link.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Link Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "link({source: [100, 100], target: [300, 300]}) // \"M100,100C200,100,200,300,300,300\""
      }
    ],
    "relevance": 0.8
  },
  {
    "codeTitle": "Getting UTC Time Tick Interval Example",
    "codeDescription": "Shows how to determine the time interval that would be used for UTC time ticks between two dates. Returns the interval object that would generate the closest number of ticks to the specified count.",
    "codeLanguage": "javascript",
    "codeTokens": 102,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-time.md#2025-04-11_snippet_14",
    "pageTitle": "D3 Time Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const start = new Date(\"1970-03-01\");\nconst stop = new Date(\"1996-03-19\");\nconst count = 4;\nconst interval = d3.utcTickInterval(start, stop, count); // d3.utcYear.every(5)"
      }
    ],
    "relevance": 0.8
  },
  {
    "codeTitle": "Creating Delaunay Triangulation from Array of Points in D3.js",
    "codeDescription": "Shows how to create a Delaunay triangulation from an array of point coordinates using the Delaunay.from() method in D3.js.",
    "codeLanguage": "JavaScript",
    "codeTokens": 85,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-delaunay/delaunay.md#2025-04-11_snippet_4",
    "pageTitle": "Delaunay Triangulations in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "const delaunay = d3.Delaunay.from([[0, 0], [0, 1], [1, 0], [1, 1]]);"
      }
    ],
    "relevance": 0.8
  },
  {
    "codeTitle": "Setting Range for Ordinal Scale",
    "codeDescription": "Shows how to set the range values for an ordinal scale.",
    "codeLanguage": "javascript",
    "codeTokens": 44,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/ordinal.md#2025-04-11_snippet_5",
    "pageTitle": "D3.js Ordinal Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleOrdinal().range([\"red\", \"green\", \"blue\"]);"
      }
    ],
    "relevance": 0.798
  },
  {
    "codeTitle": "Creating Custom Color Interpolation with D3.js transition.tween()",
    "codeDescription": "Demonstrates how to use the transition.tween() method to create a custom interpolator that transitions an element's fill attribute to blue. The tween function captures the current fill color and creates an interpolator to the target color, then updates the attribute for each frame of the transition.",
    "codeLanguage": "javascript",
    "codeTokens": 114,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-transition/modifying.md#2025-04-11_snippet_7",
    "pageTitle": "D3.js Element Modification with Transitions",
    "codeList": [
      {
        "language": "javascript",
        "code": "transition.tween(\"attr.fill\", function() {\n  const i = d3.interpolateRgb(this.getAttribute(\"fill\"), \"blue\");\n  return function(t) {\n    this.setAttribute(\"fill\", i(t));\n  };\n});"
      }
    ],
    "relevance": 0.798
  },
  {
    "codeTitle": "Using D3 locale.utcFormat Method",
    "codeDescription": "Demonstrates the basic usage of locale.utcFormat (via d3.utcFormat) to create a UTC date formatter with a specific format specifier.",
    "codeLanguage": "javascript",
    "codeTokens": 49,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-time-format.md#2025-04-11_snippet_13",
    "pageTitle": "D3 Time Format Library Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.utcFormat(\"%b %d\")"
      }
    ],
    "relevance": 0.798
  },
  {
    "codeTitle": "Using schemePuBuGn array in D3.js",
    "codeDescription": "A discrete sequential multi-hue color scheme array transitioning from Purple to Blue to Green. The parameter k specifies the size of the color array to use, which must be between 3 and 9 inclusive.",
    "codeLanguage": "JavaScript",
    "codeTokens": 64,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale-chromatic/sequential.md#2025-04-11_snippet_16",
    "pageTitle": "D3.js Sequential Color Schemes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.schemePuBuGn[k]"
      }
    ],
    "relevance": 0.798
  },
  {
    "codeTitle": "Vue Component Setup with D3 Imports",
    "codeDescription": "Initial setup of a Vue component importing D3 and custom color components",
    "codeLanguage": "vue",
    "codeTokens": 70,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale-chromatic/sequential.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Sequential Color Schemes Documentation",
    "codeList": [
      {
        "language": "vue",
        "code": "<script setup>\n\nimport * as d3 from \"d3\";\nimport ColorRamp from \"../components/ColorRamp.vue\";\nimport ColorSwatches from \"../components/ColorSwatches.vue\";\n\n</script>"
      }
    ],
    "relevance": 0.796
  },
  {
    "codeTitle": "Getting Quantile Thresholds in D3.js",
    "codeDescription": "Retrieves the computed quantile thresholds from a quantile scale, which are the boundary values that separate the quantiles of the input domain.",
    "codeLanguage": "javascript",
    "codeTokens": 62,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/quantile.md#2025-04-11_snippet_7",
    "pageTitle": "D3.js Quantile Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "color.quantiles() // [3475, 3800, 4300, 4950]"
      }
    ],
    "relevance": 0.795
  },
  {
    "codeTitle": "Difference Operation in D3.js - JavaScript",
    "codeDescription": "Demonstrates the difference operation that returns a new InternSet containing values from the first iterable that are not present in other iterables.",
    "codeLanguage": "javascript",
    "codeTokens": 65,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/sets.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Set Operations Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.difference([0, 1, 2, 0], [1]) // Set {0, 2}"
      }
    ],
    "relevance": 0.795
  },
  {
    "codeTitle": "Using schemeBuGn array in D3.js",
    "codeDescription": "A discrete sequential multi-hue color scheme array transitioning from Blue to Green. The parameter k specifies the size of the color array to use, which must be between 3 and 9 inclusive.",
    "codeLanguage": "JavaScript",
    "codeTokens": 61,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale-chromatic/sequential.md#2025-04-11_snippet_12",
    "pageTitle": "D3.js Sequential Color Schemes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.schemeBuGn[k]"
      }
    ],
    "relevance": 0.795
  },
  {
    "codeTitle": "Equivalent SelectChild Transition Method in D3.js",
    "codeDescription": "Demonstrates the equivalent method for transition.selectChild() using selection and transition chaining.",
    "codeLanguage": "javascript",
    "codeTokens": 47,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-transition/selecting.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js Transition Selection Methods Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "transition\n  .selection()\n  .selectChild(selector)\n  .transition(transition)"
      }
    ],
    "relevance": 0.795
  },
  {
    "codeTitle": "Using d3.rollups() to Create Arrays of Key-Value Pairs in JavaScript",
    "codeDescription": "Similar to d3.rollup() but returns an array of [key, value] entries instead of a map. This example counts penguins by species and returns an array of entries.",
    "codeLanguage": "javascript",
    "codeTokens": 87,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/group.md#2025-04-11_snippet_9",
    "pageTitle": "D3.js Data Grouping Methods Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const speciesCounts = d3.rollups(penguins, (D) => D.length, (d) => d.species); // [[\"Adelie\", 152], …]"
      }
    ],
    "relevance": 0.795
  },
  {
    "codeTitle": "Setting Y0 Accessor for D3 Area Generator in JavaScript",
    "codeDescription": "Sets the y0 accessor (baseline y coordinate) for an area generator. This example uses the y-scale's zero value as the baseline, which is typical for horizontally-oriented areas.",
    "codeLanguage": "javascript",
    "codeTokens": 60,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/area.md#2025-04-11_snippet_12",
    "pageTitle": "D3 Area Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const area = d3.area().y0(y(0));"
      }
    ],
    "relevance": 0.795
  },
  {
    "codeTitle": "Creating a Radial Scale in D3.js",
    "codeDescription": "Shows how to create a radial scale that maps input values linearly to squared output values, useful for visualizations where area corresponds to input values.",
    "codeLanguage": "javascript",
    "codeTokens": 62,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_31",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const r = d3.scaleRadial([100, 200], [0, 480]);"
      }
    ],
    "relevance": 0.795
  },
  {
    "codeTitle": "Default Link Strength Accessor in D3.js",
    "codeDescription": "The default strength accessor function for link forces, which adjusts link strength based on the number of connections each node has to improve simulation stability.",
    "codeLanguage": "javascript",
    "codeTokens": 60,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-force/link.md#2025-04-11_snippet_6",
    "pageTitle": "D3.js Link Force Implementation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function strength(link) {\n  return 1 / Math.min(count(link.source), count(link.target));\n}"
      }
    ],
    "relevance": 0.795
  },
  {
    "codeTitle": "Getting Element Properties with D3 Selection",
    "codeDescription": "Retrieves the current value of the \"checked\" property from the first non-null element in the selection. This is useful for special properties like form field values that can't be accessed as attributes.",
    "codeLanguage": "javascript",
    "codeTokens": 59,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/modifying.md#2025-04-11_snippet_11",
    "pageTitle": "D3 Selection Element Modification Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection.property(\"checked\") // true, perhaps"
      }
    ],
    "relevance": 0.795
  },
  {
    "codeTitle": "Setting a Custom Source Accessor for D3.js Link Generator",
    "codeDescription": "Demonstrates how to set a custom source accessor function for a horizontal link generator that extracts the source point from the first element of an array.",
    "codeLanguage": "javascript",
    "codeTokens": 57,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/link.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js Link Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const link = d3.linkHorizontal().source((d) => d[0]);"
      }
    ],
    "relevance": 0.794
  },
  {
    "codeTitle": "Element Modification with D3 Selection Using Multiple Statements",
    "codeDescription": "Demonstrates how to modify elements without method chaining by storing the selection in a variable and applying methods separately. This approach is equivalent to the chained version but more verbose.",
    "codeLanguage": "javascript",
    "codeTokens": 70,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/modifying.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Selection Element Modification Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "const p = d3.selectAll(\"p\");\np.attr(\"class\", \"graf\");\np.style(\"color\", \"red\");"
      }
    ],
    "relevance": 0.793
  },
  {
    "codeTitle": "Using schemeYlGn array in D3.js",
    "codeDescription": "A discrete sequential multi-hue color scheme array transitioning from Yellow to Green. The parameter k specifies the size of the color array to use, which must be between 3 and 9 inclusive.",
    "codeLanguage": "JavaScript",
    "codeTokens": 62,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale-chromatic/sequential.md#2025-04-11_snippet_21",
    "pageTitle": "D3.js Sequential Color Schemes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.schemeYlGn[k]"
      }
    ],
    "relevance": 0.793
  },
  {
    "codeTitle": "Getting Quantiles from a Sequential Quantile Scale in JavaScript",
    "codeDescription": "Creates a sequential quantile scale based on penguin body mass data and gets 4 quantiles (resulting in 5 boundary values). This divides the data into 4 equal-sized groups.",
    "codeLanguage": "javascript",
    "codeTokens": 114,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/sequential.md#2025-04-11_snippet_9",
    "pageTitle": "D3.js Sequential Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleSequentialQuantile()\n    .domain(penguins.map((d) => d.body_mass_g))\n    .interpolator(d3.interpolateBlues);\n\ncolor.quantiles(4); // [2700, 3550, 4050, 4750, 6300]"
      }
    ],
    "relevance": 0.792
  },
  {
    "codeTitle": "Setting Value Accessor for D3.js Pie Generator in JavaScript",
    "codeDescription": "Configures the value accessor function for a D3.js pie generator. This function determines how the numeric value is extracted from each data item for pie chart calculations.",
    "codeLanguage": "javascript",
    "codeTokens": 61,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/pie.md#2025-04-11_snippet_2",
    "pageTitle": "D3.js Pie Chart Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const pie = d3.pie().value((d) => d.value);"
      }
    ],
    "relevance": 0.792
  },
  {
    "codeTitle": "Using d3.time.dayOfYear in D3.js v3.x",
    "codeDescription": "Example of using d3.time.dayOfYear in D3.js version 3.x to calculate the day number within the current year.",
    "codeLanguage": "javascript",
    "codeTokens": 54,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_66",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "var now = new Date;\nd3.time.dayOfYear(now); // 165"
      }
    ],
    "relevance": 0.792
  },
  {
    "codeTitle": "Subset Check in D3.js - JavaScript",
    "codeDescription": "Demonstrates checking if one iterable is a subset of another, returning true if all values in the first iterable exist in the second.",
    "codeLanguage": "javascript",
    "codeTokens": 65,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/sets.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js Set Operations Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.subset([1, 3], [0, 2, 1, 3, 0]) // true"
      }
    ],
    "relevance": 0.79
  },
  {
    "codeTitle": "Creating a Copy of a Threshold Scale in D3.js",
    "codeDescription": "Demonstrates how to create an exact copy of a threshold scale. Changes to one scale will not affect the other.",
    "codeLanguage": "javascript",
    "codeTokens": 59,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/threshold.md#2025-04-11_snippet_8",
    "pageTitle": "D3.js Threshold Scale Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const c1 = d3.scaleThreshold(d3.schemeBlues[5]);\nconst c2 = c1.copy();"
      }
    ],
    "relevance": 0.79
  },
  {
    "codeTitle": "Generating Arc Path with Preconfigured D3 Arc Generator",
    "codeDescription": "Demonstrates how to generate an arc path using a D3 arc generator with predefined constant values.",
    "codeLanguage": "javascript",
    "codeTokens": 93,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/arc.md#2025-04-11_snippet_5",
    "pageTitle": "D3 Arc Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.arc()\n    .innerRadius(0)\n    .outerRadius(100)\n    .startAngle(0)\n    .endAngle(Math.PI / 2)\n  (); // \"M0,-100A100,100,0,0,1,100,0L0,0Z\""
      }
    ],
    "relevance": 0.79
  },
  {
    "codeTitle": "Calculating Polygon Perimeter Length with D3",
    "codeDescription": "This function calculates the length of the perimeter of a given polygon using D3's polygonLength method.",
    "codeLanguage": "javascript",
    "codeTokens": 66,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-polygon.md#2025-04-11_snippet_5",
    "pageTitle": "D3-Polygon Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.polygonLength([[1, 1], [1.5, 0], [2, 1]]) // 3.23606797749979"
      }
    ],
    "relevance": 0.79
  },
  {
    "codeTitle": "Setting Keys for D3 Stack Generator",
    "codeDescription": "Example of how to configure the keys accessor for a D3 stack generator. The keys specify which series (layers) will be generated in the resulting stack.",
    "codeLanguage": "javascript",
    "codeTokens": 66,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/stack.md#2025-04-11_snippet_4",
    "pageTitle": "D3 Stacks Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const stack = d3.stack().keys([\"apples\", \"bananas\", \"cherries\", \"durians\"]);"
      }
    ],
    "relevance": 0.79
  },
  {
    "codeTitle": "Generating Ribbon Path",
    "codeDescription": "Demonstrates generating a ribbon path from chord data with start/end angles and radius.",
    "codeLanguage": "javascript",
    "codeTokens": 88,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-chord/ribbon.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Ribbon Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "ribbon({\n  source: {startAngle: 0.7524114, endAngle: 1.1212972, radius: 240},\n  target: {startAngle: 1.8617078, endAngle: 1.9842927, radius: 240}\n})"
      }
    ],
    "relevance": 0.79
  },
  {
    "codeTitle": "Fetching Binary Data as ArrayBuffer with d3.buffer",
    "codeDescription": "Shows how to fetch a binary file as an ArrayBuffer using d3.buffer(). This is useful when you need direct access to binary data for manipulation or when working with typed arrays.",
    "codeLanguage": "javascript",
    "codeTokens": 58,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-fetch.md#2025-04-11_snippet_3",
    "pageTitle": "D3-Fetch Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const buffer = await d3.buffer(\"example.db\");"
      }
    ],
    "relevance": 0.79
  },
  {
    "codeTitle": "Setting the Exponent for a Power Scale in D3.js",
    "codeDescription": "Creates a power scale and sets its exponent to 2, establishing a quadratic relationship between domain and range values. The exponent determines how the scale transforms input values.",
    "codeLanguage": "javascript",
    "codeTokens": 69,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/pow.md#2025-04-11_snippet_2",
    "pageTitle": "Power Scales in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scalePow([0, 100], [\"red\", \"blue\"]).exponent(2);"
      }
    ],
    "relevance": 0.79
  },
  {
    "codeTitle": "Enabling Rounding on a Band Scale",
    "codeDescription": "Enables or disables rounding on a band scale, which makes the start and stop of each band integers to avoid antialiasing artifacts.",
    "codeLanguage": "javascript",
    "codeTokens": 66,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/band.md#2025-04-11_snippet_5",
    "pageTitle": "D3.js Band Scale Documentation",
    "codeList": [
      {
        "language": "javascript-vue",
        "code": "const x = d3.scaleBand([\"a\", \"b\", \"c\"], [0, 960]).round({{round}});"
      },
      {
        "language": "javascript-vue",
        "code": "x.round() // {{round}}"
      }
    ],
    "relevance": 0.79
  },
  {
    "codeTitle": "Using schemePuBu array in D3.js",
    "codeDescription": "A discrete sequential multi-hue color scheme array transitioning from Purple to Blue. The parameter k specifies the size of the color array to use, which must be between 3 and 9 inclusive.",
    "codeLanguage": "JavaScript",
    "codeTokens": 60,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale-chromatic/sequential.md#2025-04-11_snippet_17",
    "pageTitle": "D3.js Sequential Color Schemes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.schemePuBu[k]"
      }
    ],
    "relevance": 0.788
  },
  {
    "codeTitle": "Expanding D3 Quadtree Coverage",
    "codeDescription": "Shows how to expand a quadtree's coverage to include specific points, useful for ensuring all data falls within the tree's extent.",
    "codeLanguage": "JavaScript",
    "codeTokens": 60,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-quadtree.md#2025-04-11_snippet_4",
    "pageTitle": "D3 Quadtree Implementation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const tree = d3.quadtree().cover(0, 0).cover(1, 1);"
      }
    ],
    "relevance": 0.788
  },
  {
    "codeTitle": "Using a Threshold Scale in D3.js",
    "codeDescription": "Demonstrates how the threshold scale maps input values to output values. Values below the first threshold map to the first range value, values between thresholds map to the corresponding range value, and values above the highest threshold map to the last range value.",
    "codeLanguage": "javascript",
    "codeTokens": 125,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/threshold.md#2025-04-11_snippet_2",
    "pageTitle": "D3.js Threshold Scale Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleThreshold([0, 1], [\"red\", \"white\", \"green\"]);\ncolor(-1); // \"red\"\ncolor(0); // \"white\"\ncolor(0.5); // \"white\"\ncolor(1); // \"green\"\ncolor(1000); // \"green\""
      }
    ],
    "relevance": 0.788
  },
  {
    "codeTitle": "Setting the Precision for D3.js Link Generator",
    "codeDescription": "Shows how to set the maximum number of digits after the decimal separator for a link generator, affecting the precision of the generated SVG path data.",
    "codeLanguage": "javascript",
    "codeTokens": 51,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/link.md#2025-04-11_snippet_18",
    "pageTitle": "D3.js Link Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const link = d3.link().digits(3);"
      }
    ],
    "relevance": 0.788
  },
  {
    "codeTitle": "Setting Transition Delay in D3",
    "codeDescription": "Sets the transition delay to 250 milliseconds for all selected elements. The delay can be specified as a constant or a function.",
    "codeLanguage": "javascript",
    "codeTokens": 41,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-transition/timing.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Transition Timing Configuration",
    "codeList": [
      {
        "language": "javascript",
        "code": "transition.delay(250);"
      }
    ],
    "relevance": 0.786
  },
  {
    "codeTitle": "Using interpolateDiscrete for Stepped Value Interpolation in JavaScript",
    "codeDescription": "Shows how to use d3.interpolateDiscrete to create a discrete interpolator that maps specific ranges of t to values in an array. This example demonstrates mapping t=0.5 to the middle value of the array.",
    "codeLanguage": "js",
    "codeTokens": 79,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-interpolate/value.md#2025-04-11_snippet_11",
    "pageTitle": "D3.js Interpolation Functions",
    "codeList": [
      {
        "language": "js",
        "code": "d3.interpolateDiscrete([\"red\", \"blue\", \"green\"])(0.5) // \"blue\""
      }
    ],
    "relevance": 0.786
  },
  {
    "codeTitle": "Using schemePuRd array in D3.js",
    "codeDescription": "A discrete sequential multi-hue color scheme array transitioning from Purple to Red. The parameter k specifies the size of the color array to use, which must be between 3 and 9 inclusive.",
    "codeLanguage": "JavaScript",
    "codeTokens": 61,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale-chromatic/sequential.md#2025-04-11_snippet_18",
    "pageTitle": "D3.js Sequential Color Schemes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.schemePuRd[k]"
      }
    ],
    "relevance": 0.785
  },
  {
    "codeTitle": "Retrieving Value from D3 Adder in JavaScript",
    "codeDescription": "Returns the IEEE 754 double-precision representation of the adder's current value.",
    "codeLanguage": "javascript",
    "codeTokens": 37,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/add.md#2025-04-11_snippet_2",
    "pageTitle": "D3.js Precision Number Addition Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "adder.valueOf() // 42"
      }
    ],
    "relevance": 0.785
  },
  {
    "codeTitle": "Setting Arc Pad Angle in D3.js",
    "codeDescription": "Demonstrates how to set the pad angle for a D3 arc generator. The pad angle creates spacing between adjacent arcs in the visualization.",
    "codeLanguage": "javascript",
    "codeTokens": 50,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/arc.md#2025-04-11_snippet_11",
    "pageTitle": "D3 Arc Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const arc = d3.arc().padAngle(0);"
      }
    ],
    "relevance": 0.785
  },
  {
    "codeTitle": "Generating Arc Path with D3 Arc Generator",
    "codeDescription": "Shows how to generate an arc path using a D3 arc generator with specified parameters.",
    "codeLanguage": "javascript",
    "codeTokens": 95,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/arc.md#2025-04-11_snippet_4",
    "pageTitle": "D3 Arc Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const arc = d3.arc();\n\narc({\n  innerRadius: 0,\n  outerRadius: 100,\n  startAngle: 0,\n  endAngle: Math.PI / 2\n}); // \"M0,-100A100,100,0,0,1,100,0L0,0Z\""
      }
    ],
    "relevance": 0.785
  },
  {
    "codeTitle": "Setting a Sequential Scale's Range with Array in JavaScript",
    "codeDescription": "Sets the range of a sequential scale using a two-element array. The array is converted to an interpolator function using d3.interpolate.",
    "codeLanguage": "javascript",
    "codeTokens": 55,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/sequential.md#2025-04-11_snippet_7",
    "pageTitle": "D3.js Sequential Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleSequential().range([\"red\", \"blue\"]);"
      }
    ],
    "relevance": 0.785
  },
  {
    "codeTitle": "Setting Radius Accessor for Pack Layout in D3",
    "codeDescription": "Sets or gets the radius accessor function for the pack layout. When null (default), radius is derived from node.value. When specified, the function directly determines the radius of each leaf node.",
    "codeLanguage": "javascript",
    "codeTokens": 57,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/pack.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Circle Pack Layout Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "*pack*.radius(*radius*)"
      }
    ],
    "relevance": 0.785
  },
  {
    "codeTitle": "Configuring easeBackOut with different overshoot values in D3.js",
    "codeDescription": "Example showing how to use easeBackOut with various overshoot parameters. Creates an array of easing functions for visualization purposes.",
    "codeLanguage": "javascript",
    "codeTokens": 73,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-ease.md#2025-04-11_snippet_5",
    "pageTitle": "D3 Easing Functions Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.ticks(0.5, 3, 6).map((a) => ({y: d3.easeBackOut.overshoot(a), stroke: a}))"
      }
    ],
    "relevance": 0.785
  },
  {
    "codeTitle": "Creating a Color Object from a Name in D3.js",
    "codeDescription": "Demonstrates how to create a color object from a named color using d3.color(), returning an RGB representation with the component values and opacity.",
    "codeLanguage": "javascript",
    "codeTokens": 71,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-color.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Color Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "let c = d3.color(\"steelblue\"); // {r: 70, g: 130, b: 180, opacity: 1}"
      }
    ],
    "relevance": 0.785
  },
  {
    "codeTitle": "Configuring Stack Order with stackOrderNone in D3.js",
    "codeDescription": "Sets the stack order using d3.stackOrderNone, which preserves the original series order [0, 1, ..., n-1] as defined by the key accessor.",
    "codeLanguage": "javascript",
    "codeTokens": 60,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/stack.md#2025-04-11_snippet_13",
    "pageTitle": "D3 Stacks Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const stack = d3.stack().order(d3.stackOrderNone);"
      }
    ],
    "relevance": 0.785
  },
  {
    "codeTitle": "FormatSpecifier Object Example in D3.js",
    "codeDescription": "Example of a FormatSpecifier object created with the constructor, showing default and specified properties.",
    "codeLanguage": "javascript",
    "codeTokens": 94,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-format.md#2025-04-11_snippet_12",
    "pageTitle": "d3-format: Number Formatting Library",
    "codeList": [
      {
        "language": "javascript",
        "code": "FormatSpecifier {\n  \"fill\": \" \",\n  \"align\": \">\",\n  \"sign\": \"-\",\n  \"symbol\": \"\",\n  \"zero\": false,\n  \"width\": undefined,\n  \"comma\": false,\n  \"precision\": undefined,\n  \"trim\": false,\n  \"type\": \"s\"\n}"
      }
    ],
    "relevance": 0.784
  },
  {
    "codeTitle": "Retrieving Arc Context in D3.js",
    "codeDescription": "Shows how to get the current context from a D3 arc generator.",
    "codeLanguage": "javascript",
    "codeTokens": 30,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/arc.md#2025-04-11_snippet_15",
    "pageTitle": "D3 Arc Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "arc.context() // context"
      }
    ],
    "relevance": 0.783
  },
  {
    "codeTitle": "Using schemeRdPu array in D3.js",
    "codeDescription": "A discrete sequential multi-hue color scheme array transitioning from Red to Purple. The parameter k specifies the size of the color array to use, which must be between 3 and 9 inclusive.",
    "codeLanguage": "JavaScript",
    "codeTokens": 61,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale-chromatic/sequential.md#2025-04-11_snippet_19",
    "pageTitle": "D3.js Sequential Color Schemes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.schemeRdPu[k]"
      }
    ],
    "relevance": 0.782
  },
  {
    "codeTitle": "Implicit Domain Construction",
    "codeDescription": "Demonstrates how domains can be implicitly constructed through usage when no domain is specified.",
    "codeLanguage": "javascript",
    "codeTokens": 84,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/ordinal.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js Ordinal Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleOrdinal([\"red\", \"green\", \"blue\"]);\ncolor(\"b\"); // \"red\"\ncolor(\"a\"); // \"green\"\ncolor(\"c\"); // \"blue\"\ncolor.domain(); // inferred [\"b\", \"a\", \"c\"]"
      }
    ],
    "relevance": 0.782
  },
  {
    "codeTitle": "Measuring Length of a Geographic Feature in D3",
    "codeDescription": "Illustrates the use of path.measure() to calculate the projected planar length of a GeoJSON object.",
    "codeLanguage": "javascript",
    "codeTokens": 46,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/path.md#2025-04-11_snippet_9",
    "pageTitle": "D3 Geographic Path Generation",
    "codeList": [
      {
        "language": "javascript",
        "code": "path.measure(california) // 825.7124297512761"
      }
    ],
    "relevance": 0.782
  },
  {
    "codeTitle": "Using bisectCenter() Function to Find Closest Date in JavaScript",
    "codeDescription": "Uses the bisectCenter function to find the index of the closest date to a given value. This example finds the index of the date closest to December 31, 2013 in an array of dates from the aapl dataset.",
    "codeLanguage": "javascript",
    "codeTokens": 89,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/bisect.md#2025-04-11_snippet_8",
    "pageTitle": "D3.js Bisector Functions Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.bisectCenter(aapl.map((d) => d.Date), new Date(\"2013-12-31\")) // 161"
      }
    ],
    "relevance": 0.78
  },
  {
    "codeTitle": "Vue Setup Hook for Hero Text Manipulation",
    "codeDescription": "Vue onMounted hook that manipulates the hero text DOM elements after the component mounts, replacing default text with custom content.",
    "codeLanguage": "javascript",
    "codeTokens": 101,
    "codeId": "https://github.com/d3/d3/blob/main/docs/index.md#2025-04-11_snippet_11",
    "pageTitle": "D3.js Continuous Scale Classes",
    "codeList": [
      {
        "language": "javascript",
        "code": "import {onMounted} from \"vue\";\n\nonMounted(() => {\n  const p = document.querySelector(\".VPHero .text\");\n  const s = document.querySelector(\"#hero-text\");\n  if (!p || !s) return;\n  while (p.lastChild) p.lastChild.remove();\n  p.append(s);\n});"
      }
    ],
    "relevance": 0.78
  },
  {
    "codeTitle": "Using D3 utcFormat Method",
    "codeDescription": "Demonstrates the basic usage of d3.utcFormat method to create a UTC date formatter with a specific format specifier.",
    "codeLanguage": "javascript",
    "codeTokens": 44,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-time-format.md#2025-04-11_snippet_5",
    "pageTitle": "D3 Time Format Library Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.utcFormat(\"%b %d\")"
      }
    ],
    "relevance": 0.78
  },
  {
    "codeTitle": "Creating a Sequential Scale with Domain and Interpolator in JavaScript",
    "codeDescription": "Creates a new sequential scale with a specified domain and interpolator function. This scale maps values from the domain [0, 100] to colors in the Blues color scheme.",
    "codeLanguage": "javascript",
    "codeTokens": 67,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/sequential.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Sequential Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleSequential([0, 100], d3.interpolateBlues);"
      }
    ],
    "relevance": 0.78
  },
  {
    "codeTitle": "Using Bisector's right() Method to Find Insertion Index in JavaScript",
    "codeDescription": "Uses a bisector's right method to find the index where a new date should be inserted after existing equivalent dates. This example finds the index immediately following January 2, 2014 in the aapl dataset.",
    "codeLanguage": "javascript",
    "codeTokens": 85,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/bisect.md#2025-04-11_snippet_2",
    "pageTitle": "D3.js Bisector Functions Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.bisector((d) => d.Date).right(aapl, new Date(\"2014-01-02\")) // 163"
      }
    ],
    "relevance": 0.78
  },
  {
    "codeTitle": "Copying and Modifying a Color in D3.js",
    "codeDescription": "Shows how to create a copy of a color with modified properties using the copy() method.",
    "codeLanguage": "javascript",
    "codeTokens": 69,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-color.md#2025-04-11_snippet_7",
    "pageTitle": "D3 Color Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.color(\"steelblue\").copy({opacity: 0.5}) // {r: 70, g: 130, b: 180, opacity: 0.5}"
      }
    ],
    "relevance": 0.78
  },
  {
    "codeTitle": "Creating a Hierarchical Data Structure in JavaScript",
    "codeDescription": "Demonstrates how to structure hierarchical data as a JavaScript object with nested children.",
    "codeLanguage": "JavaScript",
    "codeTokens": 113,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/hierarchy.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Hierarchy Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const data = {\n  name: \"Eve\",\n  children: [\n    {name: \"Cain\"},\n    {name: \"Seth\", children: [{name: \"Enos\"}, {name: \"Noam\"}]},\n    {name: \"Abel\"},\n    {name: \"Awan\", children: [{name: \"Enoch\"}]},\n    {name: \"Azura\"}\n  ]\n};"
      }
    ],
    "relevance": 0.78
  },
  {
    "codeTitle": "Rendering Transverse Mercator Projection with D3 and Vue",
    "codeDescription": "This code demonstrates the creation of a Transverse Mercator projection using D3's geoTransverseMercator() function. It sets up the projection with specific rotation, extent, and precision parameters for use in a WorldMap component.",
    "codeLanguage": "vue",
    "codeTokens": 122,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/cylindrical.md#2025-04-11_snippet_3",
    "pageTitle": "D3 Geo Projections Documentation",
    "codeList": [
      {
        "language": "vue",
        "code": "<WorldMap resolution=\"50m\" :height=\"width\" :projection='d3.geoTransverseMercator().rotate([0, 0]).fitExtent([[1, 1], [width - 1, width - 1]], {type: \"Sphere\"}).precision(0.2)' />"
      }
    ],
    "relevance": 0.78
  },
  {
    "codeTitle": "Initializing D3 and Vue Components for Easing Examples",
    "codeDescription": "This code snippet sets up the necessary imports and reactive variables for the easing function examples. It imports D3, Vue's ref, and a custom ExampleEase component.",
    "codeLanguage": "javascript",
    "codeTokens": 114,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-ease.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Easing Functions Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "<script setup>\n\nimport * as d3 from \"d3\";\nimport {ref} from \"vue\";\nimport ExampleEase from \"./components/ExampleEase.vue\";\n\nconst amplitude = ref(1);\nconst exponent = ref(2);\nconst period = ref(0.3);\nconst overshoot = ref(1.7);\n\n</script>"
      }
    ],
    "relevance": 0.78
  },
  {
    "codeTitle": "Superset Check in D3.js - JavaScript",
    "codeDescription": "Shows how to check if one iterable is a superset of another, returning true if all values in the second iterable exist in the first.",
    "codeLanguage": "javascript",
    "codeTokens": 67,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/sets.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Set Operations Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.superset([0, 2, 1, 3, 0], [1, 3]) // true"
      }
    ],
    "relevance": 0.779
  },
  {
    "codeTitle": "Using schemeYlOrRd array in D3.js",
    "codeDescription": "A discrete sequential multi-hue color scheme array transitioning from Yellow to Orange to Red. The parameter k specifies the size of the color array to use, which must be between 3 and 9 inclusive.",
    "codeLanguage": "JavaScript",
    "codeTokens": 65,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale-chromatic/sequential.md#2025-04-11_snippet_23",
    "pageTitle": "D3.js Sequential Color Schemes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.schemeYlOrRd[k]"
      }
    ],
    "relevance": 0.778
  },
  {
    "codeTitle": "D3 Hero Text Template with SVG Decoration",
    "codeDescription": "Vue template containing the custom hero text with an SVG decoration element that creates a visual underline effect for the 'bespoke' text element.",
    "codeLanguage": "html",
    "codeTokens": 3729,
    "codeId": "https://github.com/d3/d3/blob/main/docs/index.md#2025-04-11_snippet_12",
    "pageTitle": "D3.js Continuous Scale Classes",
    "codeList": [
      {
        "language": "html",
        "code": "<template>\n  <div id=\"hero-text\">The JavaScript library for\n  <span style=\"display: inline-block; position: relative;\">bespoke<svg style=\"color: var(--vp-c-brand); position: absolute; z-index: -1; top: 1em; left: 0.2em; width: calc(100% - 0.7em); height: auto;\" width=\"240\" height=\"11\" viewBox=\"0 0 240 11\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20.766 10.187c.939-.024.386-.885.552-1.401 1.105-.301.553.626.962 1.061.685-.263 1.171-1.1 1.696-1.085.044.144.15.191.044.378.697-.736 2.21-.134 2.995-1.052a.55.55 0 0 1 .127.215 3.35 3.35 0 0 1-.204-1.204c.42-.034.751-.593.94 0-.255 0-.266.23-.377.416l.426-.273c.448.813-.586.316-.553.927.84-.306 1.802-1.037 2.476-.831.182.803-1.525.339-.608 1.023l-1.033-.268c.85 1.248-.625-.057.171 1.276 1.348.177 1.47-.478 2.818-.3.276-.479-.132-.66.144-1.124 1.857-.885 1.602 1.984 2.94.846.337-.555.42-1.582 1.442-1.08l-.276.889c1.298.038.668-1.348 2.06-.784-.226.368-1.005.344-.8.444.917.689.59-.545 1.27-.569l.16.827c1.371-.181 2.863-.827 4.388-1.037-.072.249-.326.512.044.746 1.912-.478 4.123-.058 6.007.368l.68-.727c.05.015.095.04.132.074a.275.275 0 0 1 .077.118c.014.044.015.091.004.136a.27.27 0 0 1-.07.122c.74.243 0-.445.354-.732.414-.062.552.383.315.603 1.248-.636 3.586-1.401 4.973-.694l-.254.22c1.06.249 1.105-1.477 2.127-.855l-.182.129c2.293.23 4.785-.478 6.564.52.293-1.017 2.272.393 2.365-1.022 1.327.664.967.927 2.813 1.348.492.052.702-.899 1.299-1.061l.044.731.79-.794.47.87.552-.205a.66.66 0 0 1-.332-.2.517.517 0 0 1-.132-.33c.873-.354 2.177.477 2.21.831l2.078-.679c-.039.301-.387.411-.657.607 1.105-.779.226.77 1.232.053-.144-.163.06-.44.077-.588.553.435 1.691.416 2.547.205l-.149.512c1.558.1 3.271-.31 5.018-.335-.636-.224-.514-1.109 0-1.204l.226.774c.32-.478-.552-.282.122-.884.652.076.464.875.094 1.138l.784-.287c.056.23-.127.358-.165.655.309-.478 1.387.75 1.834-.096l.05.23c1.746-.03 2.53-.316 3.95-.383 0-.674.553-.535.984-1.085 1.05.196 2.21.707 3.482.63.878-.343.243-.568.635-.955.077.612 1.332.535.69.985a15.353 15.353 0 0 0 3.83-.68c-.21-.243-.447-.353-.331-.563a.738.738 0 0 1 .275.01c.09.02.173.058.245.11a.58.58 0 0 1 .169.188c.04.072.061.151.062.232l-.088.067c2.127-.956 4.973 1.706 6.669.41l-.099.068 1.763-.684c.817.1-.481.478.127.842 1.9-1.043 3.022.12 4.586-.574 1.243 1.793 4.327-.167 5.979.956l-.1-.42c.426-.421.52.234.835.33-.05-.33-.464-.378-.205-.613 3.598-.545 7.438.598 11.129.956 1.348.11.757-2.203 2.465-1.195l-.481.794c2.719-.956 5.564 0 8.233-.77-.154.182-.16.416-.425.416.552.574 2.083.034 2.094-.435.42.053.1.425.354.665.552.339 1.42-.732 1.718-.158.05.09-.16.186-.265.23.37-.278 1.719.076 1.365-.589 1 .32 1.917-.287 2.713.105.553-.736 1.713.364 1.884-.683-.077 1.08 1.752.875 2.387.377-.215.326.553.345.299.794.718 0 1.381-.206 1.265-.76 1.315 1.305 2.686-1.018 3.415.645a45.888 45.888 0 0 1 6.078-1.17c-.082 1.075-2.138.09-2.066 1.218 1.834-.425 2.906-1.343 4.719-1.066.47.153-.276.478-.437.65 1.835-.43 3.537.148 5.172-.42 0 .1-.182.21-.348.291.321-.033.741.167.713-.325l-.315.13c-.497-.718 1.304-1.468 1.365-1.841-.553 1.396 1.602.377.707 2.137a.73.73 0 0 0 .337-.263.58.58 0 0 0 .1-.383c.315.1.409.297.083.665 1.155-.254.757-.78 1.801-.75 0 .233-.221.324-.337.601.553-.478 1.078-.908 1.951-.697-.056.143.044.33-.216.325 1.509-.048 2.603-1.195 4.249-.722-.513 1.023.553.349.625 1.243l.895-.254-.348-.44c.785.034 1.492-.602 2.155-.296l-.591.354 1.47-.139-.824-.354c.807-.444-.055-1.132.978-.86-.21.086.785.029 1.177.56.398-.278.801-.57 1.376-.335.138.291-.149.984-.055 1.176.398-.736 1.834-.168 2.337-.956-.143.227-.192.49-.138.745l.337-.597c.359.2.409.296.337.669 1.105.134-.309-1.138.967-.626-.105.048-.055.138-.27.23 1.287.277 2.519-.335 3.702 0 .326.903-1.05.195-.669.955 1.724-.129 3.592-.999 5.25-.74l-.31-.106c.277-1.262 1.221.66 2.083.086-.21.086-.298.693-.237.555 1.105.234 2.343-.249 4.083-.603l-.226.32c.657.311 1.763.216 2.481.383.226-.315.641-.253.403-.731 2.166 1.912 4.305-.89 6.228.726-.238 0-.553.268-.387.273l1.702-.244c-.111-.554-.21-.34-.553-.784.124-.163.292-.298.489-.392.198-.094.419-.145.644-.148-.774.34-.028.884.287 1.205-.049-.173.072-.354.05-.526.846 1.008.199-1.11 1.376-.407l-.077.287c.458-.134.889-.478 1.37-.401.177.645-.492.282-.552.803.685 0 1.403-1.162 1.994-.507-.298.167-.718.158-1.016.325.641.77.729.583 1.221.717h-.044l1.138.378-.282-.21c.928-1.635 1.752-.25 2.951-1.3-1.166.994-.21.592-.332 1.309.288.21.724.454.586.65.553-.564.89.478 1.696-.34 0 .235.581.044.431.627.713-.163-.149-.411-.077-.703 1.133-.76 2.514 1.061 4.139.029 1.376-.397 1.658-1.171 2.94-1.515.403.392-.393.836-.393.836.267.161.581.255.906.27a1.97 1.97 0 0 0 .934-.184c-.138.196 0 .373.172.64.519-.038.386-.831 1.05-.477a3.24 3.24 0 0 1-.553.918c.619-.192 1.243-.603 1.884-.79.149.412-.409.603-.646.856.718-.153 1.851-.296 2.105-.927l-.442-.248c.26 0 .105.559-.094.669-.63.478-.862-.258-.884-.478l.459-.134c-.387-1.382-1.818.148-2.719.033l.431-.956-.973.784c-.182-.263-.287-.822.166-.956-.624-.516-.591.33-1.105-.239-.055-.086-.028-.134.033-.172l-.646.273c.132-.201-.072-.703.309-.545-1.105-.617-1.873.674-2.26-.096l.099-.057c-1.596.272-.193.721-1.414 1.534l-.713-1.83-.188.721c-.16-.033-.481-.1-.409-.387-.63.478.089.32-.287.78-.752-.699-2.172.229-2.293-.957-.31.545.729.478-.127.813-.183-1.258-.978.181-1.658-.416.254-.636.917-.273.226-.875-.486 1.076-1.386-.282-2-.096-.066.87-1.332.32-2.354.579.078-.292-1.89-.54-2.818-.885l.033-.148c-.221.87-1.182.674-1.901.832a.906.906 0 0 1 .132-.55c.102-.169.258-.31.449-.406h-.669a.979.979 0 0 1-.34.327 1.167 1.167 0 0 1-.478.151l.194-.65c-.885 0-1.813.712-2.94.244-.083.607.84 1.725-.381 2.103-.034-.335-.056-.899.27-1.028-.105.043-.381.263-.585.12l.502-.545c-.508-.258-.287.478-.701.397 0-.478-.293-.35-.221-.722.11-.038.359.205.525 0a1.931 1.931 0 0 1-.691-.264 1.649 1.649 0 0 1-.503-.487c.028.268-.028.636-.37.684-.89 0-.282-.574-.79-.832-.227.325-.78-.033-.824.674-.259 0-.293-.34-.387-.535-.469.3-2.149.033-1.657.793l.116.053s-.05 0-.078.033c-1.525.66-3.105-.478-4.608-.224V3.34c-.895.244-1.984.106-2.636.593a.711.711 0 0 1-.402-.28.553.553 0 0 1-.084-.442c-.691.158-.774.416-1.746 0 .701-.396-.221-.373.713-.287-.879-.224-1.067-.607-2.039 0 .342-.597-.641-.774-1.067-.602l.608.445c-.436.053-.88.039-1.31-.043l.254-.794c-1.784-1.004-3.315 1.578-4.647-.067-.497.545.973.411.553 1.052-.829-.124-1.658-1.286-1.929-1.29-1.132-.479-1.105 1.137-2.282.812a.818.818 0 0 1 .031.774.938.938 0 0 1-.264.323 1.11 1.11 0 0 1-.397.198c-.829-.124-.994-1.214-.464-1.434.205 0 .299.072.288.168.27-.096.629-.21.303-.526l-.116.282c-.403-.297-1.552-.292-1.271-.75-.635.257-.281.477.183.616-1.061-.435-1.658-.053-2.763-.344.171.162.326.478.155.478-1.608-.378-.724.526-1.824.636-.608-.445.249-1.033-.862-.684-.668-.306-.127-.755.149-.985-1.016.536-1.867-.387-2.442-.478l.553-.22a1.892 1.892 0 0 1-.846.12l.293.573c-.309-.105-.553-.11-.553-.348-.326\" data-visualcompletion=\"css-img\"></path></svg></span> data visualization</div>\n</template>"
      }
    ],
    "relevance": 0.778
  },
  {
    "codeTitle": "Setting Range for a D3.js Quantile Scale",
    "codeDescription": "Shows how to set the range of a quantile scale, in this case using a color scheme array. The number of values in the range determines how many quantiles will be computed.",
    "codeLanguage": "javascript",
    "codeTokens": 70,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/quantile.md#2025-04-11_snippet_5",
    "pageTitle": "D3.js Quantile Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleQuantile();\ncolor.range(d3.schemeBlues[5]);"
      }
    ],
    "relevance": 0.778
  },
  {
    "codeTitle": "Adding Number to D3 Adder in JavaScript",
    "codeDescription": "Adds a specified number to the adder's current value and returns the adder object.",
    "codeLanguage": "javascript",
    "codeTokens": 37,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/add.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Precision Number Addition Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "adder.add(42)"
      }
    ],
    "relevance": 0.778
  },
  {
    "codeTitle": "Accessing Dataset with datum()",
    "codeDescription": "Shows how to expose HTML5 custom data attributes using D3's datum() method.",
    "codeLanguage": "javascript",
    "codeTokens": 41,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/joining.md#2025-04-11_snippet_12",
    "pageTitle": "D3.js Data Joining Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection.datum(function() { return this.dataset; })"
      }
    ],
    "relevance": 0.775
  },
  {
    "codeTitle": "Using d3.greatestIndex with comparators in JavaScript",
    "codeDescription": "Returns the index of the greatest element according to a specified comparator or accessor. Returns -1 if the iterable contains no comparable elements.",
    "codeLanguage": "javascript",
    "codeTokens": 118,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/summarize.md#2025-04-11_snippet_8",
    "pageTitle": "D3.js Data Summarization Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "const array = [{foo: 42}, {foo: 91}];\nd3.greatestIndex(array, (a, b) => a.foo - b.foo); // 1\nd3.greatestIndex(array, (a, b) => b.foo - a.foo); // 0\nd3.greatestIndex(array, (d) => d.foo); // 1"
      }
    ],
    "relevance": 0.775
  },
  {
    "codeTitle": "Creating an Identity Scale in D3.js",
    "codeDescription": "Shows how to create an identity scale in D3.js which is a special case of linear scale where the domain and range are identical.",
    "codeLanguage": "javascript",
    "codeTokens": 69,
    "codeId": "https://github.com/d3/d3/blob/main/docs/index.md#2025-04-11_snippet_8",
    "pageTitle": "D3.js Continuous Scale Classes",
    "codeList": [
      {
        "language": "javascript",
        "code": "var identity = d3.scaleIdentity().domain([0, 100]);\nidentity(0); // 0\nidentity(100); // 100"
      }
    ],
    "relevance": 0.775
  },
  {
    "codeTitle": "Default Radius Accessor for D3 Collide Force",
    "codeDescription": "This code shows the default radius accessor function used by the collide force when no custom radius is specified.",
    "codeLanguage": "javascript",
    "codeTokens": 42,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-force/collide.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Collide Force Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function radius() {\n  return 1;\n}"
      }
    ],
    "relevance": 0.775
  },
  {
    "codeTitle": "Creating a Diverging Scale with Array-based Range in D3.js",
    "codeDescription": "Creates a diverging scale with an array of colors as the output range, which is automatically converted to an interpolator function.",
    "codeLanguage": "javascript",
    "codeTokens": 58,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/diverging.md#2025-04-11_snippet_3",
    "pageTitle": "Diverging Scales in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleDiverging([\"blue\", \"white\", \"red\"]);"
      }
    ],
    "relevance": 0.775
  },
  {
    "codeTitle": "Configuring a D3.js Line with CurveCatmullRom",
    "codeDescription": "Example of creating a D3.js line generator with x and y accessors, applying a CatmullRom curve with specific alpha parameter for interpolation between points.",
    "codeLanguage": "javascript",
    "codeTokens": 92,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/curve.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Curve Types and Interpolation Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "const line = d3.line()\n    .x((d) => x(d.date))\n    .y((d) => y(d.value))\n    .curve(d3.curveCatmullRom.alpha(0.5));"
      }
    ],
    "relevance": 0.775
  },
  {
    "codeTitle": "Generating Log-Normal Distribution Random Numbers with D3 in JavaScript",
    "codeDescription": "Demonstrates the usage of d3.randomLogNormal() to generate random numbers with a log-normal distribution, with parameters mu=0 and sigma=1.",
    "codeLanguage": "javascript",
    "codeTokens": 53,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-random.md#2025-04-11_snippet_3",
    "pageTitle": "D3 Random Number Generation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.randomLogNormal(0, 1)"
      }
    ],
    "relevance": 0.775
  },
  {
    "codeTitle": "Applying Cubic Easing in D3",
    "codeDescription": "This code demonstrates how to apply cubic easing to a normalized time value using D3's easeCubic function.",
    "codeLanguage": "javascript",
    "codeTokens": 44,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-ease.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Easing Functions Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const te = d3.easeCubic(t);"
      }
    ],
    "relevance": 0.775
  },
  {
    "codeTitle": "Defining Tabular Data for D3.js Stack Layout",
    "codeDescription": "Example of tabular data structure used with d3.stack in D3.js 4.0. The data consists of an array of objects where each object represents a time period with multiple data series (apples, bananas, cherries, dates).",
    "codeLanguage": "javascript",
    "codeTokens": 223,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_57",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "var data = [\n  {month: new Date(2015, 0, 1), apples: 3840, bananas: 1920, cherries: 960, dates: 400},\n  {month: new Date(2015, 1, 1), apples: 1600, bananas: 1440, cherries: 960, dates: 400},\n  {month: new Date(2015, 2, 1), apples:  640, bananas:  960, cherries: 640, dates: 400},\n  {month: new Date(2015, 3, 1), apples:  320, bananas:  480, cherries: 640, dates: 400}\n];"
      }
    ],
    "relevance": 0.775
  },
  {
    "codeTitle": "Configuring VitePress Home Layout and Metadata in YAML",
    "codeDescription": "YAML configuration for the VitePress home page layout including page metadata, canonical URL, SEO descriptions, hero section configuration, and feature list definitions.",
    "codeLanguage": "yaml",
    "codeTokens": 717,
    "codeId": "https://github.com/d3/d3/blob/main/docs/index.md#2025-04-11_snippet_9",
    "pageTitle": "D3.js Continuous Scale Classes",
    "codeList": [
      {
        "language": "yaml",
        "code": "# https://vitepress.dev/reference/default-theme-home-page\nlayout: home\ntitleTemplate: \"The JavaScript library for bespoke data visualization\"\n\nhead:\n  - - link\n    - rel: canonical\n      href: https://d3js.org\n  - - meta\n    - name: title\n      content: D3\n  - - meta\n    - name: description\n      content: The JavaScript library for bespoke data visualization\n\nhero:\n  name: \"D3\"\n  text: \"The JavaScript library for bespoke data visualization\"\n  tagline: Create custom dynamic visualizations with unparalleled flexibility\n  image:\n    src: /logo.svg\n    alt: D3\n  actions:\n    - theme: brand\n      text: Get started\n      link: /getting-started\n    - theme: alt\n      text: What is D3?\n      link: /what-is-d3\n    - theme: alt\n      text: Examples\n      link: https://observablehq.com/@d3/gallery?utm_source=d3js-org&utm_medium=hero&utm_campaign=try-observable\n      rel: external\n\nfeatures:\n  - title: Selections and transitions\n    details: Create, update, and animate the DOM based on data without the overhead of a virtual DOM.\n    link: /d3-selection\n  - title: Scales and axes\n    details: Encode abstract data into visual values such as position, size, and color. Explain position encodings with axes.\n    link: /d3-scale\n  - title: Shapes\n    details: Render arcs, areas, curves, lines, links, pies, stacks, symbols… and any geometric primitive you might need to visualize data.\n    link: /d3-shape\n  - title: Interactions\n    details: Facilitate exploration with reusable interactive behaviors, including panning, zooming, brushing, and dragging.\n    link: /d3-brush\n  - title: Layouts\n    details: Treemaps, trees, force-directed graphs, Voronoi, contours, chords, circle-packing… a library of layout algorithms at the ready.\n    link: /d3-hierarchy\n  - title: Geographic maps\n    details: More spherical projections than you can shake a stick at, with arbitrary aspects, adaptive sampling, and flexible clipping.\n    link: /d3-geo\n  - title: … and much more!\n    details: CSV parsing, localized date parsing and formatting, color spaces, calendar math, statistics, and can I stop listing features now?\n    link: /d3-array\n  - title: Powering Observable Plot\n    details: The D3 team also builds Observable Plot, a high-level API for quick charts built on top of D3.\n    link: https://observablehq.com/plot?utm_source=d3js-org&utm_medium=features&utm_campaign=try-observable\n    linkText: Try Observable Plot\n    rel: external\n  - title: Built by Observable\n    details: D3 is developed by Observable, the platform for collaborative data analysis.\n    link: https://observablehq.com?utm_source=d3js-org&utm_medium=features&utm_campaign=try-observable\n    linkText: Visit Observable\n    rel: external"
      }
    ],
    "relevance": 0.773
  },
  {
    "codeTitle": "Setting HTML Content with D3 Selection",
    "codeDescription": "Sets the inner HTML of all selected elements to include formatted text with an italic element. The html method allows inserting HTML content directly, replacing any existing child elements.",
    "codeLanguage": "javascript",
    "codeTokens": 57,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/modifying.md#2025-04-11_snippet_14",
    "pageTitle": "D3 Selection Element Modification Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection.html(\"Hello, <i>world</i>!\")"
      }
    ],
    "relevance": 0.772
  },
  {
    "codeTitle": "Conditionally Adding CSS Classes with D3 Selection",
    "codeDescription": "Uses a function to conditionally add the \"foo\" class to elements. The function returns a random boolean value, demonstrating how to dynamically apply classes based on data or other conditions.",
    "codeLanguage": "javascript",
    "codeTokens": 65,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/modifying.md#2025-04-11_snippet_6",
    "pageTitle": "D3 Selection Element Modification Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection.classed(\"foo\", () => Math.random() > 0.5)"
      }
    ],
    "relevance": 0.772
  },
  {
    "codeTitle": "Using Multiple Event Listeners in D3.js v4.0",
    "codeDescription": "Example of using the updated selection.on() method to add multiple event listeners simultaneously using whitespace-separated typenames.",
    "codeLanguage": "javascript",
    "codeTokens": 52,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_53",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection.on(\"mousedown touchstart\", function() {\n  console.log(d3.event.type);\n});"
      }
    ],
    "relevance": 0.772
  },
  {
    "codeTitle": "Initializing InternSet with Date values in D3",
    "codeDescription": "Creates a new InternSet containing Date objects. This allows checking for membership of date values by their temporal value rather than by object reference identity.",
    "codeLanguage": "js",
    "codeTokens": 89,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/intern.md#2025-04-11_snippet_2",
    "pageTitle": "D3 InternMap and InternSet for Value Interning",
    "codeList": [
      {
        "language": "js",
        "code": "const dates = new d3.InternSet([\n  new Date(\"2021-01-01\"),\n  new Date(\"2022-01-01\"),\n  new Date(\"2023-01-01\")\n]);"
      }
    ],
    "relevance": 0.77
  },
  {
    "codeTitle": "Setting left padding for a D3 treemap layout",
    "codeDescription": "Sets the left padding to the specified number or function, or returns the current left padding function if no argument is provided. Left padding separates a node's left edge from its children.",
    "codeLanguage": "JavaScript",
    "codeTokens": 57,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/treemap.md#2025-04-11_snippet_11",
    "pageTitle": "D3 Treemap Layout Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "*treemap*.paddingLeft(*padding*)"
      }
    ],
    "relevance": 0.77
  },
  {
    "codeTitle": "Configuring Stack Offset with stackOffsetSilhouette in D3.js",
    "codeDescription": "Sets the stack offset using d3.stackOffsetSilhouette, which shifts the baseline down so the center of the streamgraph is always at zero. Creates symmetrical visualizations around a center line.",
    "codeLanguage": "javascript",
    "codeTokens": 65,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/stack.md#2025-04-11_snippet_18",
    "pageTitle": "D3 Stacks Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const stack = d3.stack().offset(d3.stackOffsetSilhouette);"
      }
    ],
    "relevance": 0.77
  },
  {
    "codeTitle": "Interpolating between colors in HSL color space using d3.interpolateHsl",
    "codeDescription": "Returns an HSL color space interpolator between two colors. Uses the shortest path between hues. The colors are converted to HSL using d3.hsl. Returns an RGB string.",
    "codeLanguage": "javascript",
    "codeTokens": 61,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-interpolate/color.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Color Interpolation Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.interpolateHsl(\"purple\", \"orange\")"
      }
    ],
    "relevance": 0.77
  },
  {
    "codeTitle": "Getting Multiple Pointer Coordinates in D3.js",
    "codeDescription": "Retrieves an array of coordinate pairs for all pointers in a multi-touch event relative to a target element. Useful for multi-touch interactions.",
    "codeLanguage": "javascript",
    "codeTokens": 47,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/events.md#2025-04-11_snippet_3",
    "pageTitle": "Handling Events in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "const points = d3.pointers(event);"
      }
    ],
    "relevance": 0.77
  },
  {
    "codeTitle": "Implementing rescaleY for Transforming Scale Domains in D3",
    "codeDescription": "This function returns a copy of a continuous scale with a transformed domain. It works by applying inverse y-transform on the scale's range and then computing the corresponding domain using the inverse scale. The original scale is not modified.",
    "codeLanguage": "javascript",
    "codeTokens": 97,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-zoom.md#2025-04-11_snippet_19",
    "pageTitle": "D3 Zoom Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function rescaleY(y) {\n  var range = y.range().map(transform.invertY, transform),\n      domain = range.map(y.invert, y);\n  return y.copy().domain(domain);\n}"
      }
    ],
    "relevance": 0.77
  },
  {
    "codeTitle": "Creating a UTC Time Scale in D3.js",
    "codeDescription": "Example of creating a UTC time scale that operates in Coordinated Universal Time rather than local time. This scale behaves more predictably across different time zones.",
    "codeLanguage": "javascript",
    "codeTokens": 157,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/time.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Time Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const x = d3.scaleUtc([new Date(\"2000-01-01\"), new Date(\"2000-01-02\")], [0, 960]);\nx(new Date(\"2000-01-01T05:00Z\")); // 200\nx(new Date(\"2000-01-01T16:00Z\")); // 640\nx.invert(200); // 2000-01-01T05:00Z\nx.invert(640); // 2000-01-01T16:00Z"
      }
    ],
    "relevance": 0.77
  },
  {
    "codeTitle": "Creating Categorical Color Scale with D3.js Accent Scheme",
    "codeDescription": "This snippet demonstrates how to create a categorical color scale using the Accent color scheme in D3.js. It uses the d3.scaleOrdinal function with d3.schemeAccent as the color range.",
    "codeLanguage": "javascript",
    "codeTokens": 64,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale-chromatic/categorical.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Categorical Color Schemes",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleOrdinal(d3.schemeAccent);"
      }
    ],
    "relevance": 0.77
  },
  {
    "codeTitle": "D3 Descendant Selection Examples",
    "codeDescription": "Examples of selecting descendant elements using select() and selectAll() methods on existing selections.",
    "codeLanguage": "javascript",
    "codeTokens": 54,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/selecting.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js DOM Element Selection Guide",
    "codeList": [
      {
        "language": "javascript",
        "code": "const b = d3.selectAll(\"p\").select(\"b\"); // the first <b> in every <p>"
      },
      {
        "language": "javascript",
        "code": "const previous = d3.selectAll(\"p\").select(function() {\n  return this.previousElementSibling;\n});"
      },
      {
        "language": "javascript",
        "code": "const b = d3.selectAll(\"p\").selectAll(\"b\"); // every <b> in every <p>"
      },
      {
        "language": "javascript",
        "code": "const sibling = d3.selectAll(\"p\").selectAll(function() {\n  return [\n    this.previousElementSibling,\n    this.nextElementSibling\n  ];\n});"
      }
    ],
    "relevance": 0.768
  },
  {
    "codeTitle": "Enabling rounding in a D3 treemap layout",
    "codeDescription": "Enables or disables rounding of rectangle coordinates according to the given boolean value, or returns the current rounding state if no argument is provided.",
    "codeLanguage": "JavaScript",
    "codeTokens": 46,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/treemap.md#2025-04-11_snippet_4",
    "pageTitle": "D3 Treemap Layout Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "*treemap*.round(*round*)"
      }
    ],
    "relevance": 0.768
  },
  {
    "codeTitle": "Handling Unknown Values in Ordinal Scales with Implicit Extension",
    "codeDescription": "Example demonstrating the default behavior of ordinal scales with unknown values, where the domain is implicitly extended to include the new value.",
    "codeLanguage": "javascript",
    "codeTokens": 96,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_43",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "var x = d3.scaleOrdinal()\n    .domain([0, 1])\n    .range([\"red\", \"green\", \"blue\"]);\n\nx.domain(); // [0, 1]\nx(2); // \"blue\"\nx.domain(); // [0, 1, 2]"
      }
    ],
    "relevance": 0.768
  },
  {
    "codeTitle": "Parsing CSV Row by Row with Conversion Function",
    "codeDescription": "Uses d3.csvParseRows with a row conversion function to transform each row during parsing. This approach is useful when the CSV doesn't have a header row.",
    "codeLanguage": "js",
    "codeTokens": 127,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-dsv.md#2025-04-11_snippet_11",
    "pageTitle": "d3-dsv: Parsing and Formatting Delimiter-Separated Values",
    "codeList": [
      {
        "language": "js",
        "code": "const data = d3.csvParseRows(string, (d, i) => {\n  return {\n    year: new Date(+d[0], 0, 1), // convert first column to Date\n    make: d[1],\n    model: d[2],\n    length: +d[3] // convert fourth column to number\n  };\n});"
      }
    ],
    "relevance": 0.765
  },
  {
    "codeTitle": "D3 Child Selection",
    "codeDescription": "Example of selecting child elements using the selectChild() method.",
    "codeLanguage": "javascript",
    "codeTokens": 48,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/selecting.md#2025-04-11_snippet_5",
    "pageTitle": "D3.js DOM Element Selection Guide",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.selectAll(\"p\").selectChild(\"b\") // the first <b> child of every <p>"
      }
    ],
    "relevance": 0.765
  },
  {
    "codeTitle": "Using easeBackIn with configurable overshoot in D3.js",
    "codeDescription": "Example of using the easeBackIn function with different overshoot values. The code creates an array of easing functions with different overshoot parameters for visualization.",
    "codeLanguage": "javascript",
    "codeTokens": 79,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-ease.md#2025-04-11_snippet_4",
    "pageTitle": "D3 Easing Functions Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.ticks(0.5, 3, 6).map((a) => ({y: d3.easeBackIn.overshoot(a), stroke: a}))"
      }
    ],
    "relevance": 0.765
  },
  {
    "codeTitle": "Setting right padding for a D3 treemap layout",
    "codeDescription": "Sets the right padding to the specified number or function, or returns the current right padding function if no argument is provided. Right padding separates a node's right edge from its children.",
    "codeLanguage": "JavaScript",
    "codeTokens": 57,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/treemap.md#2025-04-11_snippet_9",
    "pageTitle": "D3 Treemap Layout Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "*treemap*.paddingRight(*padding*)"
      }
    ],
    "relevance": 0.765
  },
  {
    "codeTitle": "Using Appearance-Based Stack Order in D3",
    "codeDescription": "Shows how to use the stackOrderAppearance ordering function to arrange stack layers so that the earliest appearing series (by maximum value) is placed at the bottom of the stack.",
    "codeLanguage": "javascript",
    "codeTokens": 59,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/stack.md#2025-04-11_snippet_9",
    "pageTitle": "D3 Stacks Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const stack = d3.stack().order(d3.stackOrderAppearance);"
      }
    ],
    "relevance": 0.765
  },
  {
    "codeTitle": "Getting HTML Content with D3 Selection",
    "codeDescription": "Retrieves the inner HTML from the first non-null element in the selection. This returns the HTML content as a string including all tags and formatting of child elements.",
    "codeLanguage": "javascript",
    "codeTokens": 58,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-selection/modifying.md#2025-04-11_snippet_15",
    "pageTitle": "D3 Selection Element Modification Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "selection.html() // \"Hello, <i>world</i>!\""
      }
    ],
    "relevance": 0.765
  },
  {
    "codeTitle": "Setting Stack Offset in D3",
    "codeDescription": "Demonstrates how to configure the offset for a D3 stack generator. The offset determines the baseline position for each layer, enabling different types of stacked visualizations like normalized stacks or streamgraphs.",
    "codeLanguage": "javascript",
    "codeTokens": 63,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/stack.md#2025-04-11_snippet_8",
    "pageTitle": "D3 Stacks Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const stack = d3.stack().offset(d3.stackOffsetExpand);"
      }
    ],
    "relevance": 0.765
  },
  {
    "codeTitle": "Retrieving Transition Delay in D3",
    "codeDescription": "Returns the current delay value for the first non-null element in the transition. Useful when the transition contains only one element.",
    "codeLanguage": "javascript",
    "codeTokens": 41,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-transition/timing.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Transition Timing Configuration",
    "codeList": [
      {
        "language": "javascript",
        "code": "transition.delay() // 250"
      }
    ],
    "relevance": 0.765
  },
  {
    "codeTitle": "Setting explicit threshold values for a bin generator in D3",
    "codeDescription": "Sets specific threshold values [0.25, 0.5, 0.75] for a bin generator, creating 4 bins with boundaries at these values.",
    "codeLanguage": "javascript",
    "codeTokens": 69,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/bin.md#2025-04-11_snippet_9",
    "pageTitle": "D3 Binning Data",
    "codeList": [
      {
        "language": "javascript",
        "code": "const bin = d3.bin().thresholds([0.25, 0.5, 0.75]);"
      }
    ],
    "relevance": 0.765
  },
  {
    "codeTitle": "Formatting Data as TSV with d3.tsvFormat",
    "codeDescription": "Converts an array of objects into a TSV (tab-separated values) string with a header row containing object property names and data rows containing corresponding values.",
    "codeLanguage": "js",
    "codeTokens": 76,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-dsv.md#2025-04-11_snippet_3",
    "pageTitle": "d3-dsv: Parsing and Formatting Delimiter-Separated Values",
    "codeList": [
      {
        "language": "js",
        "code": "d3.tsvFormat([{foo: \"1\", bar: \"2\"}]) // \"foo\\tbar\\n1\\t2\""
      }
    ],
    "relevance": 0.765
  },
  {
    "codeTitle": "Contour Plot Component Definition",
    "codeDescription": "Defines a contour plot visualization using Observable Plot with specific configurations for rendering topographical data of Maungawhau.",
    "codeLanguage": "vue",
    "codeTokens": 114,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-contour.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Contour Visualization Example",
    "codeList": [
      {
        "language": "vue",
        "code": "<PlotRender :options='{\n    axis: null,\n    aspectRatio: 1,\n    style: \"margin: 0;\",\n    marks: [\n      Plot.contour(volcano.values, {\n        width: volcano.width,\n        height: volcano.height,\n        fill: Plot.identity,\n        stroke: \"black\",\n        interval: 5\n      })\n    ]\n  }' />"
      }
    ],
    "relevance": 0.763
  },
  {
    "codeTitle": "Creating SVG Path with D3 Arc Generator",
    "codeDescription": "Demonstrates how to use D3's arc generator to create an SVG path for a circular sector.",
    "codeLanguage": "javascript",
    "codeTokens": 98,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/arc.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Arc Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "svg.append(\"path\")\n    .attr(\"transform\", \"translate(100,100)\")\n    .attr(\"d\", d3.arc()({\n      innerRadius: 100,\n      outerRadius: 200,\n      startAngle: -Math.PI / 2,\n      endAngle: Math.PI / 2\n    }));"
      }
    ],
    "relevance": 0.762
  },
  {
    "codeTitle": "Retrieving Current Tick Size in D3.js",
    "codeDescription": "Demonstrates how to get the current tick size value from a D3.js axis object. This method returns the inner tick size when called without arguments.",
    "codeLanguage": "javascript",
    "codeTokens": 53,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-axis.md#2025-04-11_snippet_8",
    "pageTitle": "D3.js Axis Component Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "axis.tickSize() // 0, as specified above"
      }
    ],
    "relevance": 0.762
  },
  {
    "codeTitle": "Configuring easeBack overshoot parameter in D3.js",
    "codeDescription": "Example showing how to create a new back easing function with a custom overshoot parameter. This creates a single easing function based on the user's input value.",
    "codeLanguage": "javascript",
    "codeTokens": 58,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-ease.md#2025-04-11_snippet_7",
    "pageTitle": "D3 Easing Functions Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "[{y: d3.easeBack.overshoot(overshoot)}]"
      }
    ],
    "relevance": 0.76
  },
  {
    "codeTitle": "Generating Grid Values for Goldstein-Price Function",
    "codeDescription": "Creates a 256x256 grid of values for the Goldstein-Price function, used as input for contour generation.",
    "codeLanguage": "javascript",
    "codeTokens": 132,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-contour/contour.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Contour Polygons Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "var n = 256, m = 256, values = new Array(n * m);\nfor (var j = 0.5, k = 0; j < m; ++j) {\n  for (var i = 0.5; i < n; ++i, ++k) {\n    values[k] = goldsteinPrice(i / n * 4 - 2, 1 - j / m * 3);\n  }\n}"
      }
    ],
    "relevance": 0.76
  },
  {
    "codeTitle": "Formatting Data as CSV with d3.csvFormat",
    "codeDescription": "Converts an array of objects into a CSV string with a header row containing object property names and data rows containing corresponding values.",
    "codeLanguage": "js",
    "codeTokens": 70,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-dsv.md#2025-04-11_snippet_2",
    "pageTitle": "d3-dsv: Parsing and Formatting Delimiter-Separated Values",
    "codeList": [
      {
        "language": "js",
        "code": "d3.csvFormat([{foo: \"1\", bar: \"2\"}]) // \"foo,bar\\n1,2\""
      }
    ],
    "relevance": 0.76
  },
  {
    "codeTitle": "Using d3.now() to get current time in JavaScript",
    "codeDescription": "Demonstrates how to retrieve the current time using d3.now(), which returns the current time as defined by performance.now if available, or Date.now if not.",
    "codeLanguage": "javascript",
    "codeTokens": 58,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-timer.md#2025-04-11_snippet_0",
    "pageTitle": "D3-Timer Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.now() // 1236.3000000715256"
      }
    ],
    "relevance": 0.76
  },
  {
    "codeTitle": "Using interval.count to calculate week of year in JavaScript",
    "codeDescription": "Calculates the current zero-based week-of-year number for Sunday-based weeks by counting the number of Sunday boundaries between the start of the year and now.",
    "codeLanguage": "javascript",
    "codeTokens": 56,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-time.md#2025-04-11_snippet_11",
    "pageTitle": "D3 Time Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.timeSunday.count(d3.timeYear(now), now) // 25"
      }
    ],
    "relevance": 0.76
  },
  {
    "codeTitle": "Interpolating Fill Style from Current Color to Blue in D3.js",
    "codeDescription": "Example demonstrating how to use styleTween to interpolate from the current fill style to blue. This accesses the current style value through this.style.fill before creating the interpolator.",
    "codeLanguage": "javascript",
    "codeTokens": 70,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-transition/modifying.md#2025-04-11_snippet_4",
    "pageTitle": "D3.js Element Modification with Transitions",
    "codeList": [
      {
        "language": "javascript",
        "code": "transition.styleTween(\"fill\", function() {\n  return d3.interpolateRgb(this.style.fill, \"blue\");\n});"
      }
    ],
    "relevance": 0.76
  },
  {
    "codeTitle": "D3 Stream Method Calls Example for a Polygon",
    "codeDescription": "Demonstrates the sequence of stream method calls that would be triggered when processing a GeoJSON Polygon. Shows how D3 handles the polygon's geometry through the stream interface.",
    "codeLanguage": "javascript",
    "codeTokens": 93,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/stream.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Streams Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "stream.polygonStart();\nstream.lineStart();\nstream.point(0, 0);\nstream.point(0, 1);\nstream.point(1, 1);\nstream.point(1, 0);\nstream.lineEnd();\nstream.polygonEnd();"
      }
    ],
    "relevance": 0.76
  },
  {
    "codeTitle": "Adjusting Zoom Interpolator Curvature in JavaScript using D3",
    "codeDescription": "Shows how to create a zoom interpolator with a custom curvature using d3.interpolateZoom.rho. The curvature affects the path of the zoom transition, with values close to 0 resulting in more linear interpolation.",
    "codeLanguage": "JavaScript",
    "codeTokens": 103,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-interpolate/zoom.md#2025-04-11_snippet_1",
    "pageTitle": "D3 Zoom Interpolation Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.interpolateZoom.rho(0.5)([30, 30, 40], [135, 85, 60])(0.5) // [72, 52, 51.09549882328188]"
      }
    ],
    "relevance": 0.758
  },
  {
    "codeTitle": "Configuring D3 Arc Generator with Constant Values",
    "codeDescription": "Demonstrates how to configure a D3 arc generator with constant values for radii and angles.",
    "codeLanguage": "javascript",
    "codeTokens": 68,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/arc.md#2025-04-11_snippet_3",
    "pageTitle": "D3 Arc Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const arc = d3.arc()\n    .innerRadius(0)\n    .outerRadius(100)\n    .startAngle(0)\n    .endAngle(Math.PI / 2);"
      }
    ],
    "relevance": 0.758
  },
  {
    "codeTitle": "Creating FormatSpecifier Instances with Constructor in D3.js",
    "codeDescription": "Using the FormatSpecifier constructor to create a format specification from an object with format properties.",
    "codeLanguage": "javascript",
    "codeTokens": 46,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-format.md#2025-04-11_snippet_11",
    "pageTitle": "d3-format: Number Formatting Library",
    "codeList": [
      {
        "language": "javascript",
        "code": "new d3.FormatSpecifier({type: \"f\", precision: 1})"
      }
    ],
    "relevance": 0.758
  },
  {
    "codeTitle": "Creating a Quantize Scale with Default Domain in D3.js",
    "codeDescription": "Creates a quantize scale with only the range specified. When domain is not provided, it defaults to [0, 1].",
    "codeLanguage": "javascript",
    "codeTokens": 56,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/quantize.md#2025-04-11_snippet_1",
    "pageTitle": "Quantize Scales in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleQuantize(d3.schemeBlues[9]);"
      }
    ],
    "relevance": 0.758
  },
  {
    "codeTitle": "Creating a D3 Area Generator with Explicit Parameters in JavaScript",
    "codeDescription": "Initializes a D3 area generator with specific x, y0, and y1 accessors. This creates an area generator that maps Date values to x-coordinates and Close values to y1 coordinates, with y0 set to the y-scale's zero value.",
    "codeLanguage": "javascript",
    "codeTokens": 89,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/area.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Area Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const area = d3.area((d) => x(d.Date), y(0), (d) => y(d.Close));"
      }
    ],
    "relevance": 0.755
  },
  {
    "codeTitle": "Default Arrow Head Radius",
    "codeDescription": "Default function for accessing arrow head radius in ribbon generator.",
    "codeLanguage": "javascript",
    "codeTokens": 33,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-chord/ribbon.md#2025-04-11_snippet_9",
    "pageTitle": "D3 Ribbon Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function headRadius() {\n  return 10;\n}"
      }
    ],
    "relevance": 0.755
  },
  {
    "codeTitle": "Formatting with SI Prefixes using precisionPrefix in D3.js",
    "codeDescription": "Example showing how to format numbers with SI prefixes (like M for million) using precisionPrefix to calculate appropriate precision.",
    "codeLanguage": "javascript",
    "codeTokens": 118,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-format.md#2025-04-11_snippet_18",
    "pageTitle": "d3-format: Number Formatting Library",
    "codeList": [
      {
        "language": "javascript",
        "code": "const p = d3.precisionPrefix(1e5, 1.3e6);\nconst f = d3.formatPrefix(\".\" + p, 1.3e6);\nf(1.1e6); // \"1.1M\"\nf(1.2e6); // \"1.2M\"\nf(1.3e6); // \"1.3M\""
      }
    ],
    "relevance": 0.755
  },
  {
    "codeTitle": "Using interpolateBasisClosed for Uniform B-spline Interpolation in JavaScript",
    "codeDescription": "Demonstrates the usage of d3.interpolateBasisClosed to create a uniform nonrational B-spline interpolator through an array of numeric values. The function returns a value at position 0.5 along the interpolation path.",
    "codeLanguage": "js",
    "codeTokens": 89,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-interpolate/value.md#2025-04-11_snippet_10",
    "pageTitle": "D3.js Interpolation Functions",
    "codeList": [
      {
        "language": "js",
        "code": "d3.interpolateBasisClosed([0, 0.1, 0.4, 1])(0.5) // 0.45"
      }
    ],
    "relevance": 0.755
  },
  {
    "codeTitle": "Using quadraticCurveTo Method with D3 Path Object",
    "codeDescription": "Demonstrates drawing a quadratic Bézier curve with the quadraticCurveTo method. This requires a control point and an end point.",
    "codeLanguage": "javascript",
    "codeTokens": 55,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-path.md#2025-04-11_snippet_5",
    "pageTitle": "D3-Path Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "path.quadraticCurveTo(200, 0, 200, 200);"
      }
    ],
    "relevance": 0.755
  },
  {
    "codeTitle": "Retrieving Tick Padding in D3.js",
    "codeDescription": "Demonstrates how to get the current tick padding value from a D3.js axis object. The default tick padding is 3 pixels if not explicitly set.",
    "codeLanguage": "javascript",
    "codeTokens": 54,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-axis.md#2025-04-11_snippet_14",
    "pageTitle": "D3.js Axis Component Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "axis.tickPadding() // 0, as specified above"
      }
    ],
    "relevance": 0.755
  },
  {
    "codeTitle": "Creating Root Element Transition in D3.js",
    "codeDescription": "Shows how to create a transition on the document root element using d3.selection() and transition(name). This is equivalent to using d3.transition() directly.",
    "codeLanguage": "javascript",
    "codeTokens": 53,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-transition/selecting.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Transition Selection Methods Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.selection()\n  .transition(name)"
      }
    ],
    "relevance": 0.755
  },
  {
    "codeTitle": "Initializing D3 Adder in JavaScript",
    "codeDescription": "Creates a new adder with an initial value of 0 using the D3.js Adder class.",
    "codeLanguage": "javascript",
    "codeTokens": 44,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/add.md#2025-04-11_snippet_0",
    "pageTitle": "D3.js Precision Number Addition Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "const adder = new d3.Adder();"
      }
    ],
    "relevance": 0.755
  },
  {
    "codeTitle": "Creating a Quantize Scale with Domain and Range in D3.js",
    "codeDescription": "Constructs a new quantize scale with a specified domain and range. This example creates a scale that maps values from 0-100 to a color scheme with 9 different blues.",
    "codeLanguage": "javascript",
    "codeTokens": 72,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/quantize.md#2025-04-11_snippet_0",
    "pageTitle": "Quantize Scales in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleQuantize([0, 100], d3.schemeBlues[9]);"
      }
    ],
    "relevance": 0.755
  },
  {
    "codeTitle": "Defining a Custom Locale for Number Formatting",
    "codeDescription": "This snippet shows how to create a custom locale object with specific formatting rules for thousands separators, grouping, and currency symbols.",
    "codeLanguage": "javascript",
    "codeTokens": 65,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-format.md#2025-04-11_snippet_5",
    "pageTitle": "d3-format: Number Formatting Library",
    "codeList": [
      {
        "language": "javascript",
        "code": "const enUs = d3.formatLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});"
      }
    ],
    "relevance": 0.753
  },
  {
    "codeTitle": "Retrieving Current X1 Accessor from D3 Area Generator in JavaScript",
    "codeDescription": "Shows how to get the current x1 accessor from an area generator. This returns a function that was previously set with the x1() method.",
    "codeLanguage": "javascript",
    "codeTokens": 53,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/area.md#2025-04-11_snippet_9",
    "pageTitle": "D3 Area Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "area.x1() // (d) => x(d.Close)"
      }
    ],
    "relevance": 0.752
  },
  {
    "codeTitle": "Parsing Colors with d3.color in D3.js",
    "codeDescription": "Demonstrates using the new d3.color method to parse a CSS color specifier and return a d3.color instance in the appropriate color space.",
    "codeLanguage": "JavaScript",
    "codeTokens": 85,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_12",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "var red = d3.color(\"hsl(0, 80%, 50%)\"); // {h: 0, l: 0.5, s: 0.8, opacity: 1}"
      }
    ],
    "relevance": 0.752
  },
  {
    "codeTitle": "Equivalent Filter Transition Method in D3.js",
    "codeDescription": "Demonstrates the equivalent method for transition.filter() using selection and transition chaining.",
    "codeLanguage": "javascript",
    "codeTokens": 45,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-transition/selecting.md#2025-04-11_snippet_6",
    "pageTitle": "D3.js Transition Selection Methods Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "transition\n  .selection()\n  .filter(filter)\n  .transition(transition)"
      }
    ],
    "relevance": 0.751
  },
  {
    "codeTitle": "Generating Normal Distribution Random Numbers with D3 in JavaScript",
    "codeDescription": "Illustrates how to use d3.randomNormal() to generate random numbers with a normal (Gaussian) distribution, with a mean of 0 and standard deviation of 1.",
    "codeLanguage": "javascript",
    "codeTokens": 69,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-random.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Random Number Generation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.randomNormal(0, 1) // mean of 0, and standard deviation of 1"
      }
    ],
    "relevance": 0.75
  },
  {
    "codeTitle": "Using formatSpecifier to Parse Format Strings in D3.js",
    "codeDescription": "The formatSpecifier function parses a format specification string and returns an object with properties that correspond to the format specification mini-language.",
    "codeLanguage": "javascript",
    "codeTokens": 45,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-format.md#2025-04-11_snippet_8",
    "pageTitle": "d3-format: Number Formatting Library",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.formatSpecifier(\".1f\")"
      }
    ],
    "relevance": 0.75
  },
  {
    "codeTitle": "Interpolating dates in D3.js",
    "codeDescription": "Demonstrates the use of d3.interpolateDate to interpolate between two Date objects. The interpolator returns a new Date object representing the interpolated time.",
    "codeLanguage": "javascript",
    "codeTokens": 78,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-interpolate/value.md#2025-04-11_snippet_5",
    "pageTitle": "D3.js Interpolation Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.interpolateDate(new Date(\"2014-01-01\"), new Date(\"2024-01-01\"))(0.5) // 2019-01-01"
      }
    ],
    "relevance": 0.75
  },
  {
    "codeTitle": "Using interpolateYlOrRd function in D3.js",
    "codeDescription": "A function that returns colors from the 'YlOrRd' (Yellow-Orange-Red) sequential color scheme. It accepts a value t between 0 and 1 and returns an RGB string representing the corresponding color.",
    "codeLanguage": "JavaScript",
    "codeTokens": 70,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale-chromatic/sequential.md#2025-04-11_snippet_5",
    "pageTitle": "D3.js Sequential Color Schemes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.interpolateYlOrRd(t)"
      }
    ],
    "relevance": 0.75
  },
  {
    "codeTitle": "Using schemeOranges array in D3.js",
    "codeDescription": "A discrete sequential color scheme array with Orange hues. The parameter k specifies the size of the color array to use, which must be between 3 and 9 inclusive.",
    "codeLanguage": "JavaScript",
    "codeTokens": 55,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale-chromatic/sequential.md#2025-04-11_snippet_9",
    "pageTitle": "D3.js Sequential Color Schemes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.schemeOranges[k]"
      }
    ],
    "relevance": 0.75
  },
  {
    "codeTitle": "Setting X and Y Accessors for D3 Quadtree",
    "codeDescription": "Shows how to set custom x and y accessors for a quadtree, which are used to derive coordinates when adding, removing, or finding data in the tree.",
    "codeLanguage": "JavaScript",
    "codeTokens": 61,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-quadtree.md#2025-04-11_snippet_2",
    "pageTitle": "D3 Quadtree Implementation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const tree = d3.quadtree().x((d) => d.x);"
      },
      {
        "language": "javascript",
        "code": "tree.x() // (d) => d.x"
      },
      {
        "language": "javascript",
        "code": "function x(d) {\n  return d[0];\n}"
      },
      {
        "language": "javascript",
        "code": "const tree = d3.quadtree().y((d) => d.y);"
      },
      {
        "language": "javascript",
        "code": "tree.y() // (d) => d.y"
      },
      {
        "language": "javascript",
        "code": "function y(d) {\n  return d[1];\n}"
      }
    ],
    "relevance": 0.75
  },
  {
    "codeTitle": "Setting Transition Easing Function in D3",
    "codeDescription": "Specifies the easing function for all selected elements in the transition. The easing function controls the rate of change over time.",
    "codeLanguage": "javascript",
    "codeTokens": 42,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-transition/timing.md#2025-04-11_snippet_5",
    "pageTitle": "D3 Transition Timing Configuration",
    "codeList": [
      {
        "language": "javascript",
        "code": "transition.ease(d3.easeCubic);"
      }
    ],
    "relevance": 0.75
  },
  {
    "codeTitle": "Setting X Accessor for D3 Area Generator in JavaScript",
    "codeDescription": "Demonstrates setting the x accessor for a D3 area generator, which internally sets x0 to the specified accessor and x1 to null. This is used for horizontally-oriented areas where time flows from left to right.",
    "codeLanguage": "javascript",
    "codeTokens": 70,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/area.md#2025-04-11_snippet_3",
    "pageTitle": "D3 Area Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const area = d3.area().x((d) => x(d.Date));"
      }
    ],
    "relevance": 0.75
  },
  {
    "codeTitle": "Default Defined Accessor Implementation in D3 Area Generator",
    "codeDescription": "Shows the default implementation of the defined accessor in D3's area generator. By default, it always returns true, meaning all data points are included in the area.",
    "codeLanguage": "javascript",
    "codeTokens": 53,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/area.md#2025-04-11_snippet_20",
    "pageTitle": "D3 Area Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function defined() {\n  return true;\n}"
      }
    ],
    "relevance": 0.748
  },
  {
    "codeTitle": "Default Container Accessor for D3 Drag Behavior",
    "codeDescription": "The default container accessor for a drag gesture, which returns the parent node of the dragged element. This determines the coordinate system for drag events.",
    "codeLanguage": "javascript",
    "codeTokens": 49,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-drag.md#2025-04-11_snippet_3",
    "pageTitle": "D3 Drag Behavior Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function container() {\n  return this.parentNode;\n}"
      }
    ],
    "relevance": 0.748
  },
  {
    "codeTitle": "Default Link Distance Accessor in D3.js",
    "codeDescription": "The default distance accessor function used by the link force, which returns a constant value of 30 for all links.",
    "codeLanguage": "javascript",
    "codeTokens": 45,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-force/link.md#2025-04-11_snippet_5",
    "pageTitle": "D3.js Link Force Implementation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function distance() {\n  return 30;\n}"
      }
    ],
    "relevance": 0.748
  },
  {
    "codeTitle": "Setting Canvas Context for D3 Area Generator in JavaScript",
    "codeDescription": "Sets the rendering context for an area generator to a Canvas 2D context. When a context is set, the area generator renders directly to the canvas using path methods rather than returning a path data string.",
    "codeLanguage": "javascript",
    "codeTokens": 71,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/area.md#2025-04-11_snippet_23",
    "pageTitle": "D3 Area Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const context = canvas.getContext(\"2d\");\nconst area = d3.area().context(context);"
      }
    ],
    "relevance": 0.745
  },
  {
    "codeTitle": "Generating Pareto Distribution Random Numbers with D3 in JavaScript",
    "codeDescription": "Shows the usage of d3.randomPareto() to generate random numbers with a Pareto distribution, with a shape parameter of 6.",
    "codeLanguage": "javascript",
    "codeTokens": 49,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-random.md#2025-04-11_snippet_7",
    "pageTitle": "D3 Random Number Generation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.randomPareto(6)"
      }
    ],
    "relevance": 0.745
  },
  {
    "codeTitle": "Vue Component Setup Script",
    "codeDescription": "Imports required Vue components ColorSpan and ExampleChord for the chord diagram visualization.",
    "codeLanguage": "vue",
    "codeTokens": 59,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-chord.md#2025-04-11_snippet_0",
    "pageTitle": "D3 Chord Diagram Documentation",
    "codeList": [
      {
        "language": "vue",
        "code": "<script setup>\n\nimport ColorSpan from \"./components/ColorSpan.vue\";\nimport ExampleChord from \"./components/ExampleChord.vue\";\n\n</script>"
      }
    ],
    "relevance": 0.745
  },
  {
    "codeTitle": "Applying Zoom Transform to SVG Elements Using toString",
    "codeDescription": "A simplified approach to apply a D3 zoom transform to SVG elements by leveraging the transform's toString method for direct attribute assignment.",
    "codeLanguage": "javascript",
    "codeTokens": 43,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-zoom.md#2025-04-11_snippet_17",
    "pageTitle": "D3 Zoom Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "g.attr(\"transform\", transform);"
      }
    ],
    "relevance": 0.745
  },
  {
    "codeTitle": "Using interpolateYlGn function in D3.js",
    "codeDescription": "A function that returns colors from the 'YlGn' (Yellow-Green) sequential color scheme. It accepts a value t between 0 and 1 and returns an RGB string representing the corresponding color.",
    "codeLanguage": "JavaScript",
    "codeTokens": 66,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale-chromatic/sequential.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Sequential Color Schemes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "d3.interpolateYlGn(t)"
      }
    ],
    "relevance": 0.745
  },
  {
    "codeTitle": "Setting a Sequential Scale's Interpolator in JavaScript",
    "codeDescription": "Sets the interpolator function for an existing sequential scale. This example changes the interpolator to the Blues color scheme.",
    "codeLanguage": "javascript",
    "codeTokens": 52,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/sequential.md#2025-04-11_snippet_5",
    "pageTitle": "D3.js Sequential Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleSequential().interpolator(d3.interpolateBlues);"
      }
    ],
    "relevance": 0.745
  },
  {
    "codeTitle": "Formatting a Color as HSL in D3.js",
    "codeDescription": "Shows how to format a color as an HSL string using the formatHsl() method.",
    "codeLanguage": "javascript",
    "codeTokens": 54,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-color.md#2025-04-11_snippet_13",
    "pageTitle": "D3 Color Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.color(\"yellow\").formatHsl() // \"hsl(60, 100%, 50%)\""
      }
    ],
    "relevance": 0.745
  },
  {
    "codeTitle": "Creating a D3.js Line with Bundle Curve",
    "codeDescription": "Example of configuring a D3.js line generator with a bundle curve and specific beta value that controls the bundle strength between points.",
    "codeLanguage": "javascript",
    "codeTokens": 58,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/curve.md#2025-04-11_snippet_2",
    "pageTitle": "D3.js Curve Types and Interpolation Methods",
    "codeList": [
      {
        "language": "javascript",
        "code": "const line = d3.line().curve(d3.curveBundle.beta(0.5));"
      }
    ],
    "relevance": 0.745
  },
  {
    "codeTitle": "Implementing Default Radius Accessor for D3 Geo Circle",
    "codeDescription": "The default accessor function for a circle's radius in the geoCircle generator, returning 90 degrees (quarter of the globe).",
    "codeLanguage": "javascript",
    "codeTokens": 48,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-geo/shape.md#2025-04-11_snippet_3",
    "pageTitle": "D3 Geo Spherical Shapes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "function radius() {\n  return 90;\n}"
      }
    ],
    "relevance": 0.745
  },
  {
    "codeTitle": "Formatting a Single Value for CSV with d3.csvFormatValue",
    "codeDescription": "Demonstrates how to format a single value for inclusion in a CSV file. The function properly escapes the value if it contains special characters that would interfere with CSV parsing.",
    "codeLanguage": "javascript",
    "codeTokens": 65,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-dsv.md#2025-04-11_snippet_17",
    "pageTitle": "d3-dsv: Parsing and Formatting Delimiter-Separated Values",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.csvFormatValue(\"foo\") // \"foo\""
      }
    ],
    "relevance": 0.744
  },
  {
    "codeTitle": "Accessing Rolled-up Data in JavaScript",
    "codeDescription": "Shows how to retrieve reduced values from data grouped with d3.rollup(). This example retrieves the count of Adelie penguins.",
    "codeLanguage": "javascript",
    "codeTokens": 52,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/group.md#2025-04-11_snippet_6",
    "pageTitle": "D3.js Data Grouping Methods Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "speciesCount.get(\"Adelie\") // 152"
      }
    ],
    "relevance": 0.743
  },
  {
    "codeTitle": "Setting Decimal Digits for D3 Area Generator in JavaScript",
    "codeDescription": "Sets the maximum number of digits after the decimal separator for the area generator. The default value is 3 digits. This setting only applies when the associated context is null.",
    "codeLanguage": "javascript",
    "codeTokens": 56,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/area.md#2025-04-11_snippet_25",
    "pageTitle": "D3 Area Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const area = d3.area().digits(3);"
      }
    ],
    "relevance": 0.742
  },
  {
    "codeTitle": "Setting Linear Scale Interpolator in D3.js",
    "codeDescription": "Demonstrates how to customize a linear scale's interpolator to use a different color space (HCL) for color transitions between points in the range.",
    "codeLanguage": "javascript",
    "codeTokens": 64,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/linear.md#2025-04-11_snippet_17",
    "pageTitle": "D3.js Linear Scales Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleLinear([\"red\", \"blue\"]).interpolate(d3.interpolateHcl);"
      }
    ],
    "relevance": 0.742
  },
  {
    "codeTitle": "Creating a Set from Array with Value Accessor in D3",
    "codeDescription": "Example of using d3.set constructor with a value accessor function to extract unique site values from a dataset of crop yields. The accessor function takes the standard arguments (element, index, array) and returns the site property for each data point.",
    "codeLanguage": "javascript",
    "codeTokens": 316,
    "codeId": "https://github.com/d3/d3/blob/main/CHANGES.md#2025-04-11_snippet_11",
    "pageTitle": "D3.js Version Changes Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "var yields = [\n  {yield: 22.13333, variety: \"Manchuria\",        year: 1932, site: \"Grand Rapids\"},\n  {yield: 26.76667, variety: \"Peatland\",         year: 1932, site: \"Grand Rapids\"},\n  {yield: 28.10000, variety: \"No. 462\",          year: 1931, site: \"Duluth\"},\n  {yield: 38.50000, variety: \"Svansota\",         year: 1932, site: \"Waseca\"},\n  {yield: 40.46667, variety: \"Svansota\",         year: 1931, site: \"Crookston\"},\n  {yield: 36.03333, variety: \"Peatland\",         year: 1932, site: \"Waseca\"},\n  {yield: 34.46667, variety: \"Wisconsin No. 38\", year: 1931, site: \"Grand Rapids\"}\n];\n\nvar sites = d3.set(yields, function(d) { return d.site; }); // Grand Rapids, Duluth, Waseca, Crookston"
      }
    ],
    "relevance": 0.74
  },
  {
    "codeTitle": "Generating Bernoulli Distribution Random Numbers with D3 in JavaScript",
    "codeDescription": "Illustrates how to use d3.randomBernoulli() to generate random 0 or 1 values with a Bernoulli distribution, with a success probability of 0.5.",
    "codeLanguage": "javascript",
    "codeTokens": 60,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-random.md#2025-04-11_snippet_8",
    "pageTitle": "D3 Random Number Generation",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.randomBernoulli(0.5)"
      }
    ],
    "relevance": 0.74
  },
  {
    "codeTitle": "Applying Zoom Transform to SVG Elements with Explicit Values",
    "codeDescription": "Demonstrates how to apply a D3 zoom transform to SVG elements by setting the transform attribute with explicit translation and scale values.",
    "codeLanguage": "javascript",
    "codeTokens": 62,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-zoom.md#2025-04-11_snippet_16",
    "pageTitle": "D3 Zoom Module Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "g.attr(\"transform\", \"translate(\" + transform.x + \",\" + transform.y + \") scale(\" + transform.k + \")\");"
      }
    ],
    "relevance": 0.74
  },
  {
    "codeTitle": "Creating Symlog Scale with Default Domain",
    "codeDescription": "Shows how to create a symlog scale with only the range specified, using the default domain of [0, 1]. This example creates a color scale between red and blue.",
    "codeLanguage": "javascript",
    "codeTokens": 73,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/symlog.md#2025-04-11_snippet_1",
    "pageTitle": "D3.js Symlog Scale Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const color = d3.scaleSymlog([\"red\", \"blue\"]) // default domain of [0, 1]"
      }
    ],
    "relevance": 0.74
  },
  {
    "codeTitle": "Using d3.greatest with comparators in JavaScript",
    "codeDescription": "Returns the greatest element of an iterable according to a specified comparator or accessor function. Similar to max, but allows the use of a comparator rather than just an accessor.",
    "codeLanguage": "javascript",
    "codeTokens": 132,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/summarize.md#2025-04-11_snippet_7",
    "pageTitle": "D3.js Data Summarization Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "const array = [{foo: 42}, {foo: 91}];\nd3.greatest(array, (a, b) => a.foo - b.foo); // {foo: 91}\nd3.greatest(array, (a, b) => b.foo - a.foo); // {foo: 42}\nd3.greatest(array, (d) => d.foo); // {foo: 91}"
      }
    ],
    "relevance": 0.74
  },
  {
    "codeTitle": "D3 Axis HTML Structure",
    "codeDescription": "Example of the HTML structure generated by D3's axis component, showing tick marks and labels.",
    "codeLanguage": "html",
    "codeTokens": 466,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-axis.md#2025-04-11_snippet_3",
    "pageTitle": "D3.js Axis Component Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<g fill=\"none\" font-size=\"10\" font-family=\"sans-serif\" text-anchor=\"middle\">\n  <path class=\"domain\" stroke=\"currentColor\" d=\"M0.5,6V0.5H880.5V6\"></path>\n  <g class=\"tick\" opacity=\"1\" transform=\"translate(0.5,0)\">\n    <line stroke=\"currentColor\" y2=\"6\"></line>\n    <text fill=\"currentColor\" y=\"9\" dy=\"0.71em\">0.0</text>\n  </g>\n  <g class=\"tick\" opacity=\"1\" transform=\"translate(176.5,0)\">\n    <line stroke=\"currentColor\" y2=\"6\"></line>\n    <text fill=\"currentColor\" y=\"9\" dy=\"0.71em\">0.2</text>\n  </g>\n  <g class=\"tick\" opacity=\"1\" transform=\"translate(352.5,0)\">\n    <line stroke=\"currentColor\" y2=\"6\"></line>\n    <text fill=\"currentColor\" y=\"9\" dy=\"0.71em\">0.4</text>\n  </g>\n  <g class=\"tick\" opacity=\"1\" transform=\"translate(528.5,0)\">\n    <line stroke=\"currentColor\" y2=\"6\"></line>\n    <text fill=\"currentColor\" y=\"9\" dy=\"0.71em\">0.6</text>\n  </g>\n  <g class=\"tick\" opacity=\"1\" transform=\"translate(704.5,0)\">\n    <line stroke=\"currentColor\" y2=\"6\"></line>\n    <text fill=\"currentColor\" y=\"9\" dy=\"0.71em\">0.8</text>\n  </g>\n  <g class=\"tick\" opacity=\"1\" transform=\"translate(880.5,0)\">\n    <line stroke=\"currentColor\" y2=\"6\"></line>\n    <text fill=\"currentColor\" y=\"9\" dy=\"0.71em\">1.0</text>\n  </g>\n</g>"
      }
    ],
    "relevance": 0.74
  },
  {
    "codeTitle": "Example of Structured Data Format for D3 Stratify",
    "codeDescription": "Shows the expected format of tabular data after parsing from CSV. This is the input format that the stratify operator expects, with each object having properties that can be accessed by the id and parentId accessors.",
    "codeLanguage": "json",
    "codeTokens": 197,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-hierarchy/stratify.md#2025-04-11_snippet_7",
    "pageTitle": "D3 Stratify Hierarchical Data Operator",
    "codeList": [
      {
        "language": "json",
        "code": "[\n  {\"name\": \"Eve\",   \"parent\": \"\"},\n  {\"name\": \"Cain\",  \"parent\": \"Eve\"},\n  {\"name\": \"Seth\",  \"parent\": \"Eve\"},\n  {\"name\": \"Enos\",  \"parent\": \"Seth\"},\n  {\"name\": \"Noam\",  \"parent\": \"Seth\"},\n  {\"name\": \"Abel\",  \"parent\": \"Eve\"},\n  {\"name\": \"Awan\",  \"parent\": \"Eve\"},\n  {\"name\": \"Enoch\", \"parent\": \"Awan\"},\n  {\"name\": \"Azura\", \"parent\": \"Eve\"}\n]"
      }
    ],
    "relevance": 0.74
  },
  {
    "codeTitle": "Retrieving the Current Exponent from a Power Scale in D3.js",
    "codeDescription": "Gets the current exponent value from a power scale. This method returns the exponent that determines the transformation applied to input values before mapping to the output range.",
    "codeLanguage": "javascript",
    "codeTokens": 50,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-scale/pow.md#2025-04-11_snippet_3",
    "pageTitle": "Power Scales in D3.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "x.exponent() // 2"
      }
    ],
    "relevance": 0.74
  },
  {
    "codeTitle": "Handling Missing Data with the Defined Method",
    "codeDescription": "Configures a line generator to skip undefined or NaN values by using the defined method, which determines which data points should be included in the line.",
    "codeLanguage": "javascript",
    "codeTokens": 58,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-shape/line.md#2025-04-11_snippet_9",
    "pageTitle": "D3.js Line Generator Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const line = d3.line().defined((d) => !isNaN(d.Close));"
      }
    ],
    "relevance": 0.738
  },
  {
    "codeTitle": "Full-Precision Cumulative Sum with D3 fcumsum in JavaScript",
    "codeDescription": "Calculates the full-precision cumulative sum of an array of numbers using D3's fcumsum function.",
    "codeLanguage": "javascript",
    "codeTokens": 70,
    "codeId": "https://github.com/d3/d3/blob/main/docs/d3-array/add.md#2025-04-11_snippet_5",
    "pageTitle": "D3.js Precision Number Addition Functions",
    "codeList": [
      {
        "language": "javascript",
        "code": "d3.fcumsum([1, 1e-14, -1]) // [1, 1.00000000000001, 1e-14]"
      }
    ],
    "relevance": 0.738
  }
]