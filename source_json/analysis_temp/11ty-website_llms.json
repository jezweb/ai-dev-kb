[
  {
    "codeTitle": "Basic Shortcode Configuration in Eleventy",
    "codeDescription": "Demonstrates how to add basic shortcodes to Eleventy configuration that work across multiple template engines. Includes both synchronous and asynchronous implementation examples.",
    "codeLanguage": "JavaScript",
    "codeTokens": 182,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/shortcodes.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Template Shortcodes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "export default function (eleventyConfig) {\n  // Shortcodes added in this way are available in:\n  // * Markdown\n  // * Liquid\n  // * Nunjucks\n  // * JavaScript\n  // * Handlebars (not async)\n\n  eleventyConfig.addShortcode(\"user\", function(firstName, lastName) { /* … */ });\n\n  // Async-friendly in 2.0.0-canary.24\n  eleventyConfig.addShortcode(\"user\", async function(myName) { /* … */ });\n\n  // Direct async method available\n  eleventyConfig.addAsyncShortcode(\"user\", async function(myName) { /* … */ });\n};"
      }
    ],
    "relevance": 0.995
  },
  {
    "codeTitle": "Running Eleventy in Quiet Mode via Command Line",
    "codeDescription": "Shows how to enable quiet mode in Eleventy using the command line flag. This overrides any configuration file settings and reduces console output during build.",
    "codeLanguage": "bash",
    "codeTokens": 51,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/config.md#2025-04-05_snippet_9",
    "pageTitle": "Configuring Eleventy",
    "codeList": [
      {
        "language": "bash",
        "code": "npx @11ty/eleventy --quiet"
      }
    ],
    "relevance": 0.99
  },
  {
    "codeTitle": "Executing an Eleventy Plugin Immediately",
    "codeDescription": "Demonstrates how to execute a plugin immediately using the immediate option. This is useful when you need a plugin to run during the first stage of configuration instead of the default second stage.",
    "codeLanguage": "javascript",
    "codeTokens": 127,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/create-plugin.md#2025-04-05_snippet_8",
    "pageTitle": "Creating and Using Eleventy Plugins",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig, pluginOptions) {\n\tconsole.log( \"first\" );\n\n\televentyConfig.addPlugin(eleventyConfig => {\n\t\tconsole.log(\"fourth\");\n\t});\n\n\televentyConfig.addPlugin(eleventyConfig => {\n\t\tconsole.log(\"second\");\n\t}, {\n\t\timmediate: true\n\t});\n\n\tconsole.log(\"third\");\n};"
      }
    ],
    "relevance": 0.987
  },
  {
    "codeTitle": "Processing Images with Eleventy Image JavaScript API",
    "codeDescription": "This snippet demonstrates how to use the Eleventy Image JavaScript API to process an image, creating multiple formats and sizes. It also shows how to handle remote images and cache them locally.",
    "codeLanguage": "javascript",
    "codeTokens": 93,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image-js.md#2025-04-05_snippet_0",
    "pageTitle": "JavaScript API for Image Processing in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "Image(\"https://images.unsplash.com/photo-1608178398319-48f814d0750c\", {\n  widths: [300],\n  formats: [\"webp\", \"jpeg\"]\n});"
      }
    ],
    "relevance": 0.987
  },
  {
    "codeTitle": "WebC Layout with CSS and JavaScript Bundle Integration",
    "codeDescription": "Example of a WebC layout file that incorporates bundled CSS and JavaScript assets. This demonstrates both inline bundling and file-based bundling approaches.",
    "codeLanguage": "html",
    "codeTokens": 186,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_43",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"utf-8\" />\n\t\t<title>WebC Example</title>\n\n\t\t<!-- inline bundles -->\n\t\t<style @raw=\"getBundle('css')\" webc:keep></style>\n\t\t<script @raw=\"getBundle('js')\" webc:keep></script>\n\n\t\t<!-- or write your bundle to a file -->\n\t\t<link rel=\"stylesheet\" :href=\"getBundleFileUrl('css')\" webc:keep />\n\t\t<script :src=\"getBundleFileUrl('js')\" webc:keep></script>\n\t</head>\n\t<body @raw=\"content\"></body>\n</html>"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "Validating Boolean Draft Status with Zod in 11ty",
    "codeDescription": "Example shows how to validate that the 'draft' property is either a boolean or undefined in blog templates using Zod schema validation. The code demonstrates setting up a validation schema in a blog.11tydata.js file that throws an error if validation fails.",
    "codeLanguage": "javascript",
    "codeTokens": 149,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-validate.md#2025-04-05_snippet_0",
    "pageTitle": "Data Validation in 11ty using Zod",
    "codeList": [
      {
        "language": "javascript",
        "code": "import { z } from \"zod\";\nimport { fromZodError } from 'zod-validation-error';\n\nexport default {\n\televentyDataSchema: function(data) {\n\t\tlet result = z.object({\n\t\t\tdraft: z.boolean().or(z.undefined()),\n\t\t}).safeParse(data);\n\n\t\tif(result.error) {\n\t\t\tthrow fromZodError(result.error);\n\t\t}\n\t}\n};"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "Running Eleventy Programmatically in Node.js",
    "codeDescription": "This snippet demonstrates how to use Eleventy's API to process input files and write the output to the file system. It includes error handling and logs the result.",
    "codeLanguage": "javascript",
    "codeTokens": 119,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/programmatic.md#2025-04-05_snippet_0",
    "pageTitle": "Programmatic API for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "const Eleventy = require(\"@11ty/eleventy\");\n\nasync function elev() {\n  let elev = new Eleventy();\n\n  try {\n    await elev.write();\n    console.log( \"Wrote site to\", elev.outputDir );\n  } catch (e) {\n    console.log( \"Error building:\", e );\n  }\n}\n\nelev();"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "Creating a Basic Eleventy Plugin",
    "codeDescription": "Shows the basic structure for creating an Eleventy plugin. The plugin exports a function that receives the eleventyConfig object and plugin options passed by the user.",
    "codeLanguage": "javascript",
    "codeTokens": 68,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/create-plugin.md#2025-04-05_snippet_9",
    "pageTitle": "Creating and Using Eleventy Plugins",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig, pluginOptions) {\n\t// Your plugin code goes here\n};"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "JavaScript Template with Markdown Processing (ESM)",
    "codeDescription": "Example of using JavaScript as a preprocessor for Markdown content using templateEngineOverride. This allows writing Markdown content in JavaScript templates.",
    "codeLanguage": "javascript",
    "codeTokens": 94,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/javascript.md#2025-04-05_snippet_13",
    "pageTitle": "JavaScript Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "class Test {\n\tdata() {\n\t\treturn {\n\t\t\tmyName: \"Zach\",\n\t\t\ttemplateEngineOverride: \"11ty.js,md\",\n\t\t};\n\t}\n\n\trender(data) {\n\t\treturn `# This is ${data.myName}`;\n\t}\n}\n\nexport default Test;"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "Creating a Local Plugin for Eleventy",
    "codeDescription": "This code snippet shows how to create a local plugin file for Eleventy. The plugin exports a function that takes the eleventyConfig object as a parameter, allowing you to move configuration code from the main eleventy.config.js file into this plugin.",
    "codeLanguage": "javascript",
    "codeTokens": 107,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/quicktips/local-plugin.md#2025-04-05_snippet_0",
    "pageTitle": "Using Local Plugins in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\t// Move any code from `eleventy.config.js` here.\n\t// Use eleventyConfig as you would in your top-level config file\n}"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "Generating HTML with Eleventy Image JavaScript API",
    "codeDescription": "This snippet demonstrates how to use the Eleventy Image JavaScript API to generate HTML for responsive images. It uses the 'returnType' option to specify HTML output.",
    "codeLanguage": "javascript",
    "codeTokens": 95,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image-js.md#2025-04-05_snippet_2",
    "pageTitle": "JavaScript API for Image Processing in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "Image(\"https://images.unsplash.com/photo-1608178398319-48f814d0750c\", {\n  widths: [300],\n  formats: [\"webp\", \"jpeg\"],\n  returnType: \"html\"\n});"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "Importing and Using a Local Plugin in Eleventy Configuration",
    "codeDescription": "This code snippet demonstrates how to import a local plugin and add it to the Eleventy configuration. The plugin is imported from a local file and then added to the configuration using the addPlugin method.",
    "codeLanguage": "javascript",
    "codeTokens": 83,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/quicktips/local-plugin.md#2025-04-05_snippet_1",
    "pageTitle": "Using Local Plugins in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import localPlugin from \"./config/local-plugin.js\";\n\nexport default function(eleventyConfig) {\n\televentyConfig.addPlugin(localPlugin);\n}"
      }
    ],
    "relevance": 0.982
  },
  {
    "codeTitle": "Configuring the Eleventy Navigation Plugin",
    "codeDescription": "Code to add the Eleventy Navigation plugin to an Eleventy configuration file using ES modules syntax.",
    "codeLanguage": "javascript",
    "codeTokens": 73,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_1",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import eleventyNavigationPlugin from \"@11ty/eleventy-navigation\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addPlugin(eleventyNavigationPlugin);\n};"
      }
    ],
    "relevance": 0.98
  },
  {
    "codeTitle": "Configuring Sharp Image Processor in Eleventy",
    "codeDescription": "This snippet shows how to use the 'transform' callback to access the full Sharp API for advanced image processing in Eleventy.",
    "codeLanguage": "javascript",
    "codeTokens": 60,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image.md#2025-04-05_snippet_8",
    "pageTitle": "Eleventy Image Utility Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "{\n\t// …\n\ttransform: (sharp) => {\n\t\tsharp.keepExif();\n\t}\n}"
      }
    ],
    "relevance": 0.979
  },
  {
    "codeTitle": "Configuring WebC Plugin with Full Options",
    "codeDescription": "Demonstrates all available configuration options for the WebC plugin including component paths, transform settings, and bundle plugin options.",
    "codeLanguage": "javascript",
    "codeTokens": 193,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_1",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import pluginWebc from \"@11ty/eleventy-plugin-webc\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addPlugin(pluginWebc, {\n\t\t// Glob to find no-import global components\n\t\t// (The default changed from `false` in Eleventy WebC v0.7.0)\n\t\tcomponents: \"_components/**/*.webc\",\n\n\t\t// Adds an Eleventy WebC transform to process all HTML output\n\t\tuseTransform: false,\n\n\t\t// Additional global data used in the Eleventy WebC transform\n\t\ttransformData: {},\n\n\t\t// Options passed to @11ty/eleventy-plugin-bundle\n\t\tbundlePluginOptions: {},\n\t});\n};"
      }
    ],
    "relevance": 0.978
  },
  {
    "codeTitle": "Sample Return Object from Eleventy Image JavaScript API",
    "codeDescription": "This snippet shows the structure of the JavaScript object returned by the Eleventy Image API when processing an image. It includes metadata for each generated image format and size.",
    "codeLanguage": "javascript",
    "codeTokens": 272,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image-js.md#2025-04-05_snippet_1",
    "pageTitle": "JavaScript API for Image Processing in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "{\n\twebp: [\n\t\t{\n\t\t\tformat: 'webp',\n\t\t\twidth: 300,\n\t\t\theight: 300,\n\t\t\tfilename: '6dfd7ac6-300.webp',\n\t\t\toutputPath: 'img/6dfd7ac6-300.webp',\n\t\t\turl: '/img/6dfd7ac6-300.webp',\n\t\t\tsourceType: 'image/webp',\n\t\t\tsrcset: '/img/6dfd7ac6-300.webp 300w',\n\t\t\tsize: 10184\n\t\t}\n\t],\n\tjpeg: [\n\t\t{\n\t\t\tformat: 'jpeg',\n\t\t\twidth: 300,\n\t\t\theight: 300,\n\t\t\tfilename: '6dfd7ac6-300.jpeg',\n\t\t\toutputPath: 'img/6dfd7ac6-300.jpeg',\n\t\t\turl: '/img/6dfd7ac6-300.jpeg',\n\t\t\tsourceType: 'image/jpeg',\n\t\t\tsrcset: '/img/6dfd7ac6-300.jpeg 300w',\n\t\t\tsize: 15616\n\t\t}\n\t]\n}"
      }
    ],
    "relevance": 0.976
  },
  {
    "codeTitle": "Configuring Asynchronous Image Shortcode in Eleventy",
    "codeDescription": "Sets up an asynchronous image shortcode that uses @11ty/eleventy-img to generate optimized images with AVIF and JPEG formats. The shortcode accepts parameters for source, alt text, widths, and sizes.",
    "codeLanguage": "javascript",
    "codeTokens": 229,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image-shortcodes.md#2025-04-05_snippet_0",
    "pageTitle": "Image Shortcodes in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import Image from \"@11ty/eleventy-img\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addShortcode(\"image\", async function (src, alt, widths = [300, 600], sizes = \"\") {\n\t\treturn Image(src, {\n\t\t\twidths,\n\t\t\tformats: [\"avif\", \"jpeg\"],\n\t\t\treturnType: \"html\",    // new in v6.0\n\t\t\thtmlOptions: {         // new in v6.0\n\t\t\t\timgAttributes: {\n\t\t\t\t\talt,               // required, though \"\" works fine\n\t\t\t\t\tsizes,             // required with more than one width, optional if single width output\n\t\t\t\t\tloading: \"lazy\",   // optional\n\t\t\t\t\tdecoding: \"async\", // optional\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n};"
      }
    ],
    "relevance": 0.975
  },
  {
    "codeTitle": "Adding Custom .clowd Template Extension in Eleventy",
    "codeDescription": "This snippet demonstrates how to add a custom .clowd template extension to Eleventy. The example replaces occurrences of 'cloud' with 'butt' in the input content.",
    "codeLanguage": "javascript",
    "codeTokens": 130,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/custom.md#2025-04-05_snippet_0",
    "pageTitle": "Custom Template Languages in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\televentyConfig.addTemplateFormats(\"clowd\");\n\n\televentyConfig.addExtension(\"clowd\", {\n\t\tcompile: async (inputContent) => {\n\t\t\tlet output = inputContent.replace(/cloud/gi, \"butt\");\n\n\t\t\treturn async () => {\n\t\t\t\treturn output;\n\t\t\t};\n\t\t},\n\t});\n};"
      }
    ],
    "relevance": 0.975
  },
  {
    "codeTitle": "Creating a WebC Component with CSS and JavaScript",
    "codeDescription": "Example of a WebC component that includes component-specific CSS and JavaScript. These assets will be automatically bundled by Eleventy WebC.",
    "codeLanguage": "html",
    "codeTokens": 95,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_42",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<style>\n\t/* This is component CSS */\n</style>\n<script>\n\t/* This is component JS */\n</script>\n\n<!-- Local file references work too -->\n<link rel=\"stylesheet\" href=\"my-file.css\" />\n<script src=\"my-file.js\"></script>"
      }
    ],
    "relevance": 0.975
  },
  {
    "codeTitle": "Adding TypeScript Type Definitions in Eleventy Config",
    "codeDescription": "Demonstrates how to add TypeScript type definitions to enable IDE autocomplete features for Eleventy configuration.",
    "codeLanguage": "javascript",
    "codeTokens": 66,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/config.md#2025-04-05_snippet_17",
    "pageTitle": "Configuring Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "/** @param {import(\"@11ty/eleventy\").UserConfig} eleventyConfig */\nexport default function (eleventyConfig) {\n\t// …\n};"
      }
    ],
    "relevance": 0.975
  },
  {
    "codeTitle": "Implementing Compile Function in Eleventy Custom Template",
    "codeDescription": "This code snippet shows how to implement a compile function for a custom template language in Eleventy. It demonstrates the basic structure of the compile function and its render function.",
    "codeLanguage": "javascript",
    "codeTokens": 84,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/custom.md#2025-04-05_snippet_7",
    "pageTitle": "Custom Template Languages in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "\t// some configuration truncated …\n\tcompile: async (inputContent, inputPath) => {\n\t\treturn async () => {\n\t\t\treturn inputContent;\n\t\t};\n\t},"
      }
    ],
    "relevance": 0.975
  },
  {
    "codeTitle": "Implementing Inclusive Language Linter in Eleventy",
    "codeDescription": "Demonstrates creating a linter that checks markdown files for potentially non-inclusive language terms and logs warnings to the console.",
    "codeLanguage": "javascript",
    "codeTokens": 219,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/config.md#2025-04-05_snippet_15",
    "pageTitle": "Configuring Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\televentyConfig.addLinter(\n\t\t\"inclusive-language\",\n\t\tfunction (content, inputPath, outputPath) {\n\t\t\tlet words =\n\t\t\t\t\"simply,obviously,basically,of course,clearly,just,everyone knows,however,easy\".split(\n\t\t\t\t\t\",\"\n\t\t\t\t);\n\n\t\t\t// Eleventy 1.0+: use this.inputPath and this.outputPath instead\n\t\t\tif (inputPath.endsWith(\".md\")) {\n\t\t\t\tfor (let word of words) {\n\t\t\t\t\tlet regexp = new RegExp(\"\\\\b(\" + word + \")\\\\b\", \"gi\");\n\t\t\t\t\tif (content.match(regexp)) {\n\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t`Inclusive Language Linter (${inputPath}) Found: ${word}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t);\n};"
      }
    ],
    "relevance": 0.972
  },
  {
    "codeTitle": "Defining Virtual Templates API in Eleventy",
    "codeDescription": "The core API function for adding virtual templates in Eleventy. It accepts a virtual path (relative to input directory), content string, and optional data object that works like front matter.",
    "codeLanguage": "javascript",
    "codeTokens": 65,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/virtual-templates.md#2025-04-05_snippet_0",
    "pageTitle": "Virtual Templates in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "eleventyConfig.addTemplate(virtualPath, content, data = {});"
      }
    ],
    "relevance": 0.972
  },
  {
    "codeTitle": "Installing Eleventy Image npm Package",
    "codeDescription": "Command to install the @11ty/eleventy-img package via npm. This package requires Node 18+ for version 6.0.0 and later.",
    "codeLanguage": "bash",
    "codeTokens": 56,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Image Utility Documentation",
    "codeList": [
      {
        "language": "bash",
        "code": "npm install @11ty/eleventy-img"
      }
    ],
    "relevance": 0.972
  },
  {
    "codeTitle": "Creating Custom Nunjucks Environment in Eleventy",
    "codeDescription": "Advanced usage example showing how to create and use a custom Nunjucks Environment with a FileSystemLoader. This method overrides any configuration set with setNunjucksEnvironmentOptions.",
    "codeLanguage": "javascript",
    "codeTokens": 110,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/nunjucks.md#2025-04-05_snippet_1",
    "pageTitle": "Nunjucks Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import Nunjucks from \"nunjucks\";\n\nexport default function (eleventyConfig) {\n\tlet nunjucksEnvironment = new Nunjucks.Environment(\n\t\tnew Nunjucks.FileSystemLoader(\"_includes\")\n\t);\n\n\televentyConfig.setLibrary(\"njk\", nunjucksEnvironment);\n};"
      }
    ],
    "relevance": 0.97
  },
  {
    "codeTitle": "Declaring WebC Components in Front Matter",
    "codeDescription": "Example of declaring specific WebC components in a template's front matter using the webc.components property with a glob pattern to include component files.",
    "codeLanguage": "html",
    "codeTokens": 84,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_41",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "---\nlayout: \"my-layout.webc\"\nwebc:\n  components: \"./webc/*.webc\"\n---\n\n<my-webc-component>WebC *is* HTML.</my-webc-component>"
      }
    ],
    "relevance": 0.97
  },
  {
    "codeTitle": "Eleventy Image Path Configuration Example",
    "codeDescription": "Example showing how to override default URL path and output directory settings in the WebC component.",
    "codeLanguage": "html",
    "codeTokens": 72,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image-webc.md#2025-04-05_snippet_4",
    "pageTitle": "Eleventy Image WebC Component Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<img webc:is=\"eleventy-image\" url-path=\"/some-dir/\" output-dir=\"_site/some-dir/\" src=\"cat.jpg\" alt=\"photo of my tabby cat\">"
      }
    ],
    "relevance": 0.97
  },
  {
    "codeTitle": "Storing Custom Data in 11ty Fetch Cache",
    "codeDescription": "Demonstrates how to manually store custom data in the 11ty fetch cache using a function source. Uses async functionality to execute expensive operations and cache the results with a unique requestId.",
    "codeLanguage": "javascript",
    "codeTokens": 141,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/fetch.md#2025-04-05_snippet_9",
    "pageTitle": "Eleventy Fetch Plugin Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "import Fetch from \"@11ty/eleventy-fetch\";\n\nexport default function() {\n\treturn Fetch(async function() {\n\t\t// do some expensive operation here, this is simplified for brevity\n\t\tlet fakeTwitterApiContents = { followerCount: 1000 };\n\n\t\treturn fakeTwitterApiContents;\n\t}, {\n\t\t// must supply a unique id for the callback\n\t\trequestId: \"zachleat_twitter_followers\"\n\t});\n}"
      }
    ],
    "relevance": 0.968
  },
  {
    "codeTitle": "HTML Minification Transform",
    "codeDescription": "Implements an HTML minification transform using html-minifier-terser. This transform processes HTML files to reduce their size by removing comments, collapsing whitespace, and using short doctype.",
    "codeLanguage": "javascript",
    "codeTokens": 165,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/transforms.md#2025-04-05_snippet_3",
    "pageTitle": "Eleventy Transforms Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "import htmlmin from \"html-minifier-terser\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addTransform(\"htmlmin\", function (content) {\n\t\tif ((this.page.outputPath || \"\").endsWith(\".html\")) {\n\t\t\tlet minified = htmlmin.minify(content, {\n\t\t\t\tuseShortDoctype: true,\n\t\t\t\tremoveComments: true,\n\t\t\t\tcollapseWhitespace: true,\n\t\t\t});\n\n\t\t\treturn minified;\n\t\t}\n\n\t\t// If not an HTML output, return content as-is\n\t\treturn content;\n\t});\n};"
      }
    ],
    "relevance": 0.968
  },
  {
    "codeTitle": "Basic WebC Page Example",
    "codeDescription": "A simple example of a .webc file that demonstrates the HTML-like syntax of WebC. WebC files are processed by Eleventy to generate HTML output.",
    "codeLanguage": "html",
    "codeTokens": 103,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_2",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"utf-8\" />\n\t\t<title>WebC Example</title>\n\t</head>\n\t<body>\n\t\tWebC *is* HTML.\n\t</body>\n</html>"
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "GitHub Actions Workflow for Deploying Eleventy to GitHub Pages",
    "codeDescription": "YAML configuration file for GitHub Actions that sets up automated deployment to GitHub Pages with cache persistence for npm and Eleventy's .cache folder to improve build times.",
    "codeLanguage": "yaml",
    "codeTokens": 310,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/deployment.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Deployment & Hosting Guide",
    "codeList": [
      {
        "language": "yaml",
        "code": "name: Deploy to GitHub Pages\n\non:\n  push:\n    branches:\n      - main\n  pull_request:\n\njobs:\n  deploy:\n    runs-on: ubuntu-22.04\n    permissions:\n      contents: write\n    concurrency:\n      group: ${{ github.workflow }}-${{ github.ref }}\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Setup Node\n        uses: actions/setup-node@v3\n        with:\n          node-version: \"18\"\n\n      - name: Persist npm cache\n        uses: actions/cache@v3\n        with:\n          path: ~/.npm\n          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}\n\n      - name: Persist Eleventy .cache\n        uses: actions/cache@v3\n        with:\n          path: ./.cache\n          key: ${{ runner.os }}-eleventy-fetch-cache\n\n      - run: npm install\n      - run: npm run build-ghpages\n\n      - name: Deploy\n        uses: peaceiris/actions-gh-pages@v3\n        if: github.ref == 'refs/heads/main'\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          publish_dir: ./_site"
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Creating an Eleventy Plugin with Custom Arguments",
    "codeDescription": "Shows how to create an advanced plugin that exports an object with initArguments and configFunction properties. This approach allows for more complex plugin initialization.",
    "codeLanguage": "javascript",
    "codeTokens": 74,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/create-plugin.md#2025-04-05_snippet_10",
    "pageTitle": "Creating and Using Eleventy Plugins",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default {\n\tinitArguments: {},\n\tconfigFunction: function (eleventyConfig, pluginOptions) {\n\t\t// Your plugin code goes here\n\t},\n};"
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Configuring Eleventy Image Transform Plugin",
    "codeDescription": "Basic configuration to add the Eleventy Image Transform plugin to an Eleventy project. This enables automatic transformation of all <img> and <picture> tags in HTML files.",
    "codeLanguage": "javascript",
    "codeTokens": 92,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Image Utility Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "import { eleventyImageTransformPlugin } from \"@11ty/eleventy-img\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addPlugin(eleventyImageTransformPlugin);\n};"
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Adding Sass Support to Eleventy",
    "codeDescription": "This example shows how to add Sass support to Eleventy by processing .scss files and outputting .css files. It uses the sass npm package to compile Sass to CSS.",
    "codeLanguage": "javascript",
    "codeTokens": 138,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/custom.md#2025-04-05_snippet_1",
    "pageTitle": "Custom Template Languages in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import sass from \"sass\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addTemplateFormats(\"scss\");\n\n\televentyConfig.addExtension(\"scss\", {\n\t\toutputFileExtension: \"css\",\n\n\t\tcompile: async function (inputContent) {\n\t\t\tlet result = sass.compileString(inputContent);\n\n\t\t\treturn async (data) => {\n\t\t\t\treturn result.css;\n\t\t\t};\n\t\t},\n\t});\n};"
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Creating Custom Image Markup from Metadata",
    "codeDescription": "Implements a custom image shortcode that generates optimized images and manually crafts the HTML markup with proper attribute escaping using the entities package.",
    "codeLanguage": "javascript",
    "codeTokens": 213,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image-shortcodes.md#2025-04-05_snippet_4",
    "pageTitle": "Image Shortcodes in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import { escapeAttribute } from \"entities\";\nimport Image from \"@11ty/eleventy-img\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addShortcode(\"image\", async function (src, alt) {\n\t\tif (alt === undefined) {\n\t\t\t// You bet we throw an error on missing alt (alt=\"\" works okay)\n\t\t\tthrow new Error(`Missing \\`alt\\` on myImage from: ${src}`);\n\t\t}\n\n\t\tlet metadata = await Image(src, {\n\t\t\twidths: [600],\n\t\t\tformats: [\"jpeg\"],\n\t\t});\n\n\t\tlet data = metadata.jpeg[metadata.jpeg.length - 1];\n\t\treturn `<img src=\"${data.url}\" width=\"${data.width}\" height=\"${data.height}\" alt=\"${escapeAttribute(alt)}\" loading=\"lazy\" decoding=\"async\">`;\n\t});\n};"
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Creating WebC Template with Front Matter in Eleventy",
    "codeDescription": "Example of a basic WebC template with YAML front matter that sets a layout. Front matter in Eleventy WebC works with standard Eleventy conventions but is optional.",
    "codeLanguage": "yaml",
    "codeTokens": 67,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_38",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\nlayout: \"my-layout.webc\"\n---\nWebC *is* HTML."
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Setting Output Directory in Eleventy Configuration",
    "codeDescription": "Demonstrates how to specify the output directory for Eleventy's processed files using the setOutputDirectory method. This determines where the final built files will be written.",
    "codeLanguage": "javascript",
    "codeTokens": 79,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/config.md#2025-04-05_snippet_5",
    "pageTitle": "Configuring Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\t// Order matters, put this at the top of your configuration file.\n  eleventyConfig.setOutputDirectory(\"dist\");\n};"
      }
    ],
    "relevance": 0.962
  },
  {
    "codeTitle": "Creating Basic Collection with addCollection in Eleventy",
    "codeDescription": "Example of creating a custom collection using the addCollection method in Eleventy configuration. This demonstrates how to retrieve all items from the collections API asynchronously.",
    "codeLanguage": "javascript",
    "codeTokens": 93,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/collections-api.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Collections API Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\t// async-friendly\n\televentyConfig.addCollection(\"myCollectionName\", async (collectionsApi) => {\n\t\t// get unsorted items\n\t\treturn collectionsApi.getAll();\n\t});\n};"
      }
    ],
    "relevance": 0.962
  },
  {
    "codeTitle": "Advanced i18n Plugin Configuration Options",
    "codeDescription": "Demonstrates the complete set of configuration options available for the i18n plugin including error handling mode, path settings, and language labels.",
    "codeLanguage": "js",
    "codeTokens": 247,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/i18n.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Internationalization Plugin (i18n) Guide",
    "codeList": [
      {
        "language": "js",
        "code": "module.exports = function(eleventyConfig) {\n  eleventyConfig.addPlugin(eleventyConfig.i18n, {\n    // Required, this is the language when there is no language in the URL\n    defaultLanguage: \"en\", \n\n    // Optional, defaults to `[\"en\"]`\n    supportedLanguages: [\"en\", \"es\"], \n\n    // Optional, defaults to \"strict\" (throws an error when linking to content that doesn't exist in a locale).\n    // \"strict-ignore\" will log a warning and then act like \"ignore\"\n    // \"warn\" will log a warning\n    // \"ignore\" will silently ignore\n    errorMode: \"strict\",\n\n    // Optional, if you want to change the default labels\n    labels: {\n      // Optional, a map of language codes to label text\n      // Used by the `locale_links` paired shortcode\n      en: \"English\",\n      es: \"Español\",\n    },\n  });\n};"
      }
    ],
    "relevance": 0.962
  },
  {
    "codeTitle": "Using Props in WebC Components - Page Declaration",
    "codeDescription": "Shows how to declare a prop on a component using the @ prefix. Props are server-only attributes that don't appear in the final HTML output.",
    "codeLanguage": "html",
    "codeTokens": 55,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_15",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<my-component @prop=\"Hello\"></my-component>"
      }
    ],
    "relevance": 0.962
  },
  {
    "codeTitle": "Configuring JavaScript Import in Eleventy Custom Template",
    "codeDescription": "This snippet shows how to configure a custom template language to use JavaScript import instead of reading from the file system. It includes setting up getInstanceFromInputPath and compile functions.",
    "codeLanguage": "javascript",
    "codeTokens": 93,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/custom.md#2025-04-05_snippet_11",
    "pageTitle": "Custom Template Languages in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "\tuseJavaScriptImport: true,\n\tgetInstanceFromInputPath: async function(inputPath) {\n\t\tlet mod = await import(inputPath);\n\t\treturn mod.default;\n\t},\n\tcompile: (compileFn) => compileFn,"
      }
    ],
    "relevance": 0.96
  },
  {
    "codeTitle": "Configuring Bundle Plugin in Eleventy",
    "codeDescription": "Basic configuration to add a CSS bundle to Eleventy using the addBundle method.",
    "codeLanguage": "javascript",
    "codeTokens": 49,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/bundle.md#2025-04-05_snippet_0",
    "pageTitle": "Bundle Plugin for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\televentyConfig.addBundle(\"css\");\n};"
      }
    ],
    "relevance": 0.96
  },
  {
    "codeTitle": "Implementing Draft Mode Preprocessor in Eleventy",
    "codeDescription": "Shows how to implement a drafts workflow using the Preprocessor API. This preprocessor excludes draft content during production builds while allowing draft content to be visible during development (--serve or --watch modes).",
    "codeLanguage": "javascript",
    "codeTokens": 109,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/config-preprocessors.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Preprocessors Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n  eleventyConfig.addPreprocessor(\"drafts\", \"*\", (data, content) => {\n\t\tif(data.draft && process.env.ELEVENTY_RUN_MODE === \"build\") {\n\t\t\treturn false;\n\t\t}\n\t});\n};"
      }
    ],
    "relevance": 0.959
  },
  {
    "codeTitle": "Using Async Callback Functions for Eleventy Configuration (ESM)",
    "codeDescription": "Demonstrates the preferred method for Eleventy configuration using an async callback function in ESM format. This approach provides access to Eleventy's full Configuration API.",
    "codeLanguage": "javascript",
    "codeTokens": 78,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/config-shapes.md#2025-04-05_snippet_0",
    "pageTitle": "Configuration Shapes in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default async function(eleventyConfig) {\n\treturn {\n    dir: {\n      input: \"views\",\n      output: \"dist\"\n    }\n  };\n};"
      }
    ],
    "relevance": 0.958
  },
  {
    "codeTitle": "Configuring Asynchronous Shortcodes in Eleventy",
    "codeDescription": "This snippet shows how to configure asynchronous shortcodes in Eleventy for Nunjucks. It demonstrates both regular and paired asynchronous shortcodes that use async/await syntax.",
    "codeLanguage": "javascript",
    "codeTokens": 145,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/nunjucks.md#2025-04-05_snippet_11",
    "pageTitle": "Nunjucks Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\televentyConfig.addNunjucksAsyncShortcode(\n\t\t\"user\",\n\t\tasync function (name, twitterUsername) {\n\t\t\treturn await fetchAThing();\n\t\t}\n\t);\n\n\televentyConfig.addPairedNunjucksAsyncShortcode(\n\t\t\"user2\",\n\t\tasync function (content, name, twitterUsername) {\n\t\t\treturn await fetchAThing();\n\t\t}\n\t);\n};"
      }
    ],
    "relevance": 0.958
  },
  {
    "codeTitle": "Removing URL Query Params from Cache Identifier",
    "codeDescription": "Example of using the removeUrlQueryParams option to exclude query parameters from the cache identifier in Eleventy Fetch.",
    "codeLanguage": "javascript",
    "codeTokens": 88,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/fetch.md#2025-04-05_snippet_7",
    "pageTitle": "Eleventy Fetch Plugin Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "import Fetch from \"@11ty/eleventy-fetch\";\n\nawait Fetch(\n\t\"https://www.zachleat.com/img/avatar-2017-big.png?Get=rid&of=these\",\n\t{\n\t\tremoveUrlQueryParams: true,\n\t}\n);"
      }
    ],
    "relevance": 0.958
  },
  {
    "codeTitle": "Implementing WebC Component with Asset Buckets",
    "codeDescription": "Demonstrates how to use webc:bucket to organize CSS and JavaScript assets into different buckets within a WebC component.",
    "codeLanguage": "html",
    "codeTokens": 120,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_44",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<style>\n\t/* This CSS is put into the default bucket */\n</style>\n<script>\n\t/* This JS is put into the default bucket */\n</script>\n<style webc:bucket=\"defer\">\n\t/* This CSS is put into the `defer` bucket */\n</style>\n<script webc:bucket=\"defer\">\n\t/* This JS is put into the `defer` bucket */\n</script>"
      }
    ],
    "relevance": 0.957
  },
  {
    "codeTitle": "Adding Async Promise-Based Global Data in Eleventy Configuration",
    "codeDescription": "Demonstrates how to add global data using promises and async functions in Eleventy's configuration, including a delayed resolution and an immediately resolved promise.",
    "codeLanguage": "javascript",
    "codeTokens": 131,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-global-custom.md#2025-04-05_snippet_5",
    "pageTitle": "Global Data Configuration in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "module.exports = function (eleventyConfig) {\n\t// or a promise:\n\televentyConfig.addGlobalData(\"myFunctionPromise\", () => {\n\t\treturn new Promise((resolve) => {\n\t\t\tsetTimeout(resolve, 100, \"foo\");\n\t\t});\n\t});\n\n\t// or async:\n\televentyConfig.addGlobalData(\"myAsyncFunction\", async () => {\n\t\treturn Promise.resolve(\"hi\");\n\t});\n};"
      }
    ],
    "relevance": 0.956
  },
  {
    "codeTitle": "Registering Universal Filters and Shortcodes",
    "codeDescription": "Example of registering universal filters and shortcodes in the Eleventy configuration file that are usable across multiple template engines including JavaScript.",
    "codeLanguage": "javascript",
    "codeTokens": 173,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/javascript.md#2025-04-05_snippet_19",
    "pageTitle": "JavaScript Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n  // Universal filters (Adds to Liquid, Nunjucks, 11ty.js)\n  eleventyConfig.addFilter(\"myFilter\", function(myVariable) { /* … */ });\n\n  // Universal Shortcodes (Adds to Liquid, Nunjucks, 11ty.js)\n  eleventyConfig.addShortcode(\"user\", function(firstName, lastName) { /* … */ });\n\n  // Universal Paired Shortcodes (Adds to Liquid, Nunjucks, 11ty.js)\n  eleventyConfig.addPairedShortcode(\"pairedUser\", function(content, firstName, lastName) { /* … */ });\n};"
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Using eleventy.before Event in Eleventy Configuration",
    "codeDescription": "Demonstrates how to set up an event handler for the eleventy.before event which runs before each Eleventy build. The handler receives directories, runMode, and outputMode arguments providing context about the build.",
    "codeLanguage": "javascript",
    "codeTokens": 121,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/events.md#2025-04-05_snippet_0",
    "pageTitle": "Configuration Events in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\t// Async-friendly in 1.0+\n\t// Arguments added in 2.0+\n\televentyConfig.on(\"eleventy.before\", async ({ directories, runMode, outputMode }) => {\n\t\t// Run me before the build starts\n\t});\n}"
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Creating a JSON Data File in Eleventy",
    "codeDescription": "Example of a simple JSON data file located at '_data/userList.json' that contains an array of users. This data will be available to all templates under the 'userList' key.",
    "codeLanguage": "javascript",
    "codeTokens": 60,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-global.md#2025-04-05_snippet_0",
    "pageTitle": "Using Global Data Files in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "[\"user1\", \"user2\"];"
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Adding Custom Filters in Eleventy Configuration",
    "codeDescription": "Shows how to add custom synchronous and asynchronous filters using the Eleventy Configuration API.",
    "codeLanguage": "js",
    "codeTokens": 86,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/filters.md#2025-04-05_snippet_4",
    "pageTitle": "Eleventy Template Filters Documentation",
    "codeList": [
      {
        "language": "js",
        "code": "export default function (eleventyConfig) {\n\televentyConfig.addFilter(\"makeUppercase\", function(value) { /* … */ });\n\n  eleventyConfig.addAsyncFilter(\"makeUppercase\", async function(value) { /* … */ });\n};"
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Using Asynchronous Plugins in Eleventy",
    "codeDescription": "Shows how to use asynchronous plugins in Eleventy v3.0.0-alpha.1 and newer. When using async plugins, you must await the addPlugin method.",
    "codeLanguage": "javascript",
    "codeTokens": 86,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/create-plugin.md#2025-04-05_snippet_4",
    "pageTitle": "Creating and Using Eleventy Plugins",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default async function (eleventyConfig) {\n\tawait eleventyConfig.addPlugin(async function(eleventyConfig) {\n\t\t// I am an asynchronous plugin!\n\t});\n};"
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Implementing Custom Liquid Tag in Eleventy",
    "codeDescription": "Shows how to create a custom 'uppercase' tag in Liquid templating engine. The tag accepts either a variable or string literal and converts it to uppercase. Implementation uses LiquidJS's tag API with parse and render methods.",
    "codeLanguage": "javascript",
    "codeTokens": 206,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/custom-tags.md#2025-04-05_snippet_0",
    "pageTitle": "Custom Tags Configuration in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n  // Usage: {% uppercase myVar %} where myVar has a value of \"alice\"\n  // Usage: {% uppercase \"alice\" %}\n  eleventyConfig.addLiquidTag(\"uppercase\", function (liquidEngine) {\n    return {\n      parse: function (tagToken, remainingTokens) {\n        this.str = tagToken.args; // myVar or \"alice\"\n      },\n      render: async function (scope, hash) {\n        // Resolve variables\n        var str = await this.liquid.evalValue(this.str, scope); // \"alice\"\n\n        // Do the uppercasing\n        return str.toUpperCase(); // \"ALICE\"\n      },\n    };\n  });\n};"
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Customizing Cache Filename in Eleventy Fetch",
    "codeDescription": "Example of using a custom function to format the cache filename in Eleventy Fetch.",
    "codeLanguage": "javascript",
    "codeTokens": 83,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/fetch.md#2025-04-05_snippet_8",
    "pageTitle": "Eleventy Fetch Plugin Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "import Fetch from \"@11ty/eleventy-fetch\";\n\nawait Fetch(\"https://…\", {\n\tfilenameFormat: function(cacheKey, hash) {\n\t\t// do not include the file extension\n\t\treturn `custom-name-${cacheKey}-${hash}`\n\t}\n});"
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Configuring Cache Key Generation in Eleventy Custom Template",
    "codeDescription": "Illustrates how to configure the cache key generation for Eleventy's custom template compilation. This allows for fine-grained control over caching behavior.",
    "codeLanguage": "javascript",
    "codeTokens": 188,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/custom.md#2025-04-05_snippet_16",
    "pageTitle": "Custom Template Languages in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "\t// some configuration truncated …\n  read: false,\n  compileOptions: {\n    cache: true,\n    getCacheKey: function(contents, inputPath) {\n      // return contents; // this is the default in 1.0\n\n      // return inputPath + contents; // this is the new default in {{ \"2.0.0-canary.16\" | coerceVersion }}\n\n      return inputPath; // override to cache by inputPath (this means the compile function will not get called when the file contents change)\n\n      // Conditionally opt-out of cache with `return false`\n      // if(someArbitraryCondition) {\n      //   return false;\n      // }\n    }\n  },"
      }
    ],
    "relevance": 0.953
  },
  {
    "codeTitle": "Adding Multiple Custom Data Formats with Priority in Eleventy",
    "codeDescription": "Demonstrates how to add support for multiple custom data formats (TOML and YAML) with different priorities in Eleventy's configuration.",
    "codeLanguage": "javascript",
    "codeTokens": 120,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-custom.md#2025-04-05_snippet_6",
    "pageTitle": "Custom Data File Formats in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import toml from \"@iarna/toml\";\nimport yaml from \"js-yaml\";\n\nexport default function (eleventyConfig) {\n\t// Lower priority\n\televentyConfig.addDataExtension(\"toml\", (contents) => toml.parse(contents));\n\n\t// Higher priority\n\televentyConfig.addDataExtension(\"yaml\", (contents) => yaml.load(contents));\n};"
      }
    ],
    "relevance": 0.953
  },
  {
    "codeTitle": "Adding Nunjucks and Universal Filters in Eleventy",
    "codeDescription": "Demonstrates how to add Nunjucks-specific filters, asynchronous Nunjucks filters, and universal filters that work across multiple template languages in Eleventy.",
    "codeLanguage": "javascript",
    "codeTokens": 166,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/nunjucks.md#2025-04-05_snippet_2",
    "pageTitle": "Nunjucks Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n  // Nunjucks Filter\n  eleventyConfig.addNunjucksFilter(\"myNjkFilter\", function(value) { /* … */ });\n\n  // Nunjucks Asynchronous Filter (read on below)\n  eleventyConfig.addNunjucksAsyncFilter(\"myAsyncNjkFilter\", function(value, callback) { /* … */ });\n\n  // Universal filters (Adds to Liquid, Nunjucks, and 11ty.js)\n  eleventyConfig.addFilter(\"myFilter\", function(value) { /* … */ });\n};"
      }
    ],
    "relevance": 0.952
  },
  {
    "codeTitle": "Nesting WebC Components with webc:root",
    "codeDescription": "Demonstrates how to nest the webc:root attribute inside other elements in a component definition, allowing for deeper component structure hierarchy.",
    "codeLanguage": "html",
    "codeTokens": 81,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_14",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<div>\n\t<div>\n\t\t<template webc:root=\"override\" class=\"another-class\">\n\t\t\tSome component content\n\t\t</template>\n\t</div>\n</div>"
      }
    ],
    "relevance": 0.952
  },
  {
    "codeTitle": "Using @attributes with Dynamic Object in WebC",
    "codeDescription": "Demonstrates how to use @attributes to render an arbitrary JavaScript object as HTML attributes on an element.",
    "codeLanguage": "html",
    "codeTokens": 50,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_20",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<img @attributes=\"({ myattribute: 'myValue'})\" />"
      }
    ],
    "relevance": 0.952
  },
  {
    "codeTitle": "Custom Date Parsing with IANA Time Zone Codes in Eleventy",
    "codeDescription": "Illustrates how to implement custom date parsing in Eleventy's configuration to handle dates with IANA time zone codes. This example uses Luxon for parsing dates with specific formats.",
    "codeLanguage": "javascript",
    "codeTokens": 99,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/dates.md#2025-04-05_snippet_1",
    "pageTitle": "Content Dates in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import { DateTime } from \"luxon\";\n\nexport default function(eleventyConfig) {\n\televentyConfig.addDateParsing(function(dateValue) {\n\t\treturn DateTime.fromFormat(dateValue, \"yyyy-MM-dd hh:mm:ss z\");\n\t});\n};"
      }
    ],
    "relevance": 0.95
  },
  {
    "codeTitle": "Registering Dependencies for Custom Template Compilation in Eleventy",
    "codeDescription": "This example shows how to register dependencies for a Sass template to improve performance with Eleventy's compilation cache and incremental builds.",
    "codeLanguage": "javascript",
    "codeTokens": 86,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/custom.md#2025-04-05_snippet_3",
    "pageTitle": "Custom Template Languages in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "compile: function (inputContent, inputPath) {\n  let result = sass.compileString(inputContent);\n\n  this.addDependencies(inputPath, result.loadedUrls);\n\n  return async (data) => {\n    return result.css;\n  };\n}"
      }
    ],
    "relevance": 0.95
  },
  {
    "codeTitle": "Class-Based JavaScript Template with Render Method (ESM)",
    "codeDescription": "Example of a class-based JavaScript template with a render method. Eleventy uses the render method to generate the template output from data.",
    "codeLanguage": "javascript",
    "codeTokens": 75,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/javascript.md#2025-04-05_snippet_8",
    "pageTitle": "JavaScript Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "class Test {\n\t// or `async render({name}) {`\n\trender({ name }) {\n\t\treturn `<p>${name}</p>`;\n\t}\n}\n\nexport default Test;"
      }
    ],
    "relevance": 0.95
  },
  {
    "codeTitle": "Setting Path Prefix for GitHub Pages Deployment in Eleventy",
    "codeDescription": "Demonstrates how to deploy an Eleventy site to a subdirectory using the pathPrefix option via command line. This is particularly useful for GitHub Pages where the site may be in a project subdirectory.",
    "codeLanguage": "bash",
    "codeTokens": 70,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/config.md#2025-04-05_snippet_10",
    "pageTitle": "Configuring Eleventy",
    "codeList": [
      {
        "language": "bash",
        "code": "npx @11ty/eleventy --pathprefix=eleventy-base-blog"
      }
    ],
    "relevance": 0.95
  },
  {
    "codeTitle": "Configuring Eleventy Image and WebC Plugins",
    "codeDescription": "Configuration setup for integrating the Eleventy Image WebC component, including plugin initialization and global default options for image processing.",
    "codeLanguage": "javascript",
    "codeTokens": 236,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image-webc.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Image WebC Component Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "import eleventyWebcPlugin from \"@11ty/eleventy-plugin-webc\";\nimport { eleventyImagePlugin } from \"@11ty/eleventy-img\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addPlugin(eleventyWebcPlugin, {\n\t\tcomponents: [\n\t\t\t// …\n\t\t\t// Add as a global WebC component\n\t\t\t\"npm:@11ty/eleventy-img/*.webc\",\n\t\t],\n\t});\n\n\t// Image plugin\n\televentyConfig.addPlugin(eleventyImagePlugin, {\n\t\t// Set global default options\n\t\tformats: [\"webp\", \"jpeg\"],\n\t\turlPath: \"/img/\",\n\n\t\t// Notably `outputDir` is resolved automatically\n\t\t// to the project output directory\n\n\t\tdefaultAttributes: {\n\t\t\tloading: \"lazy\",\n\t\t\tdecoding: \"async\",\n\t\t},\n\t});\n};"
      }
    ],
    "relevance": 0.948
  },
  {
    "codeTitle": "Using webc:is Attribute for Component Remapping",
    "codeDescription": "Demonstrates how to use webc:is to remap a standard HTML element to a custom component, allowing for more semantic markup.",
    "codeLanguage": "html",
    "codeTokens": 65,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_26",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<div webc:is=\"my-component\"></div>\n\n<!-- equivalent to -->\n<my-component></my-component>"
      }
    ],
    "relevance": 0.948
  },
  {
    "codeTitle": "Using Named Argument Syntax in Nunjucks Shortcodes",
    "codeDescription": "This snippet demonstrates how to use the 'user' shortcode with named argument syntax in Nunjucks. It shows that the order of arguments doesn't matter and that arguments can be optional.",
    "codeLanguage": "nunjucks",
    "codeTokens": 87,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/nunjucks.md#2025-04-05_snippet_10",
    "pageTitle": "Nunjucks Template Language in Eleventy",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{% user name=\"Zach Leatherman\", twitter=\"zachleat\" %}\n{% user twitter=\"zachleat\", name=\"Zach Leatherman\" %}"
      },
      {
        "language": "nunjucks",
        "code": "{% user name=\"Zach Leatherman\" %}"
      }
    ],
    "relevance": 0.948
  },
  {
    "codeTitle": "Configuring GetData in Eleventy Custom Template",
    "codeDescription": "These snippets demonstrate different ways to configure the getData option for a custom template language in Eleventy, including disabling additional data, implementing a custom getData function, and using getInstanceFromInputPath.",
    "codeLanguage": "javascript",
    "codeTokens": 79,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/custom.md#2025-04-05_snippet_12",
    "pageTitle": "Custom Template Languages in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "\t// some configuration truncated …\n\t// `false` is the default\n\tgetData: false, // no additional data is used"
      },
      {
        "language": "javascript",
        "code": "\t// some configuration truncated …\n  getData: async function(inputPath) {\n    // DIY, this object will be merged into data cascade\n    return {};\n  },"
      },
      {
        "language": "javascript",
        "code": "\t// some configuration truncated …\n  // get the `data` property from the instance.\n  getData: [\"data\"],\n  // * `getData: true` is aliased to [\"data\"]\n  // * You can use more than one property name! [\"data\", \"otherPropName\"]\n\n  getInstanceFromInputPath: function(inputPath) {\n    // Return the JavaScript object from which the `data` property will be retrieved.\n    let instance = doSomethingMyselfToFetchAJavaScriptObject(inputPath);\n    return instance;\n  }"
      }
    ],
    "relevance": 0.947
  },
  {
    "codeTitle": "Using a Plugin with Custom Initialization Arguments",
    "codeDescription": "Demonstrates how to use a plugin that accepts custom initialization arguments. This example shows how to pass an init function to the plugin.",
    "codeLanguage": "javascript",
    "codeTokens": 110,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/create-plugin.md#2025-04-05_snippet_11",
    "pageTitle": "Creating and Using Eleventy Plugins",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\televentyConfig.addPlugin(require(\"./fancy-plugin.js\"), {\n\t\tinit: function (initArguments) {\n\t\t\t// `this` is the eleventyConfig object\n\t\t\t// initArguments will be the `myInitArguments` object from above\n\t\t},\n\t});\n};"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Using renderTransforms Universal Filter in 11ty",
    "codeDescription": "The renderTransforms filter allows manual application of project transforms to arbitrary content blocks. This is primarily useful for non-HTML contexts like RSS/XML or JSON feeds where transforms limited to HTML files wouldn't normally be applied.",
    "codeLanguage": "markdown",
    "codeTokens": 60,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/filters/render-transforms.md#2025-04-05_snippet_0",
    "pageTitle": "renderTransforms Universal Filter Documentation",
    "codeList": [
      {
        "language": "markdown",
        "code": "`renderTransforms`"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Advanced Configuration for Eleventy Image Transform Plugin",
    "codeDescription": "Extended configuration example showing how to customize the Eleventy Image Transform plugin with options for formats, widths, and HTML attributes.",
    "codeLanguage": "javascript",
    "codeTokens": 175,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image.md#2025-04-05_snippet_2",
    "pageTitle": "Eleventy Image Utility Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "import { eleventyImageTransformPlugin } from \"@11ty/eleventy-img\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addPlugin(eleventyImageTransformPlugin, {\n\t\t// output image formats\n\t\tformats: [\"avif\", \"webp\", \"jpeg\"],\n\n\t\t// output image widths\n\t\twidths: [\"auto\"],\n\n\t\t// optional, attributes assigned on <img> nodes override these values\n\t\thtmlOptions: {\n\t\t\timgAttributes: {\n\t\t\t\tloading: \"lazy\",\n\t\t\t\tdecoding: \"async\",\n\t\t\t},\n\t\t\tpictureAttributes: {}\n\t\t},\n\t});\n};"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Creating Asynchronous Nunjucks Filters in Eleventy",
    "codeDescription": "Demonstrates how to create asynchronous Nunjucks filters that use callbacks to return results after an asynchronous operation completes.",
    "codeLanguage": "javascript",
    "codeTokens": 99,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/nunjucks.md#2025-04-05_snippet_4",
    "pageTitle": "Nunjucks Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\televentyConfig.addNunjucksAsyncFilter(\n\t\t\"myAsyncFilter\",\n\t\tfunction (value, callback) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tcallback(null, \"My Result\");\n\t\t\t}, 100);\n\t\t}\n\t);\n};"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Configuring Global WebC Components in Eleventy",
    "codeDescription": "JavaScript configuration code for adding the WebC plugin to Eleventy and setting up global components. This allows components to be used across the site without explicit imports.",
    "codeLanguage": "javascript",
    "codeTokens": 198,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_40",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import pluginWebc from \"@11ty/eleventy-plugin-webc\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addPlugin(pluginWebc, {\n\t\t// Glob to find no-import global components\n\t\t// This path is relative to the project-root!\n\t\t// The default value is shown:\n\t\tcomponents: \"_components/**/*.webc\",\n\n\t\t// or an Array (Eleventy WebC v0.9.2+)\n\t\tcomponents: [\n\t\t\t\"_components/**/*.webc\",\n\t\t\t\"npm:@11ty/is-land/*.webc\",\n\t\t\t\"npm:@11ty/eleventy-plugin-syntaxhighlight/*.webc\",\n\t\t],\n\t});\n};"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Conditional Rendering with webc:if",
    "codeDescription": "Shows how to use webc:if for conditional rendering of elements, including async-friendly conditions.",
    "codeLanguage": "html",
    "codeTokens": 92,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_9",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<div webc:if=\"true\">This will render</div>\n<div webc:if=\"false\">This will not render</div>\n<div webc:if=\"myAsyncHelper()\">\n\tIf the helper promise resolves to a truthy value, this will render\n</div>"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Implementing Critical CSS with Bundles",
    "codeDescription": "Example of implementing Critical CSS using asset bucketing and bundle rendering.",
    "codeLanguage": "html",
    "codeTokens": 164,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/bundle.md#2025-04-05_snippet_6",
    "pageTitle": "Bundle Plugin for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<!-- … -->\n<head>\n\t<!-- Inlined critical styles -->\n\t<style>{% getBundle \"css\" %}</style>\n\n\t<!-- Non-critical styles -->\n\t<link rel=\"stylesheet\" href=\"{% getBundleFileUrl 'css', 'defer' %}\" fetchpriority=\"low\">\n</head>\n<body>\n\t<!-- This goes into a `default` bucket -->\n\t{% css %}/* Inline in the head, great with @font-face! */{% endcss %}\n\t<!-- This goes into a `defer` bucket (the bucket can be any string value) -->\n\t{% css \"defer\" %}/* Load me later */{% endcss %}\n</body>\n<!-- … -->"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Using Universal Filters and Shortcodes in JavaScript Templates (ESM)",
    "codeDescription": "Example showing how to use universal filters and shortcodes within a JavaScript template. These are accessible via the 'this' context in regular functions.",
    "codeLanguage": "javascript",
    "codeTokens": 105,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/javascript.md#2025-04-05_snippet_20",
    "pageTitle": "JavaScript Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (data) {\n\treturn `\n<h1>${this.myFilter(data.myVar)}</h1>\n<p>${this.user(data.firstName, data.lastName)}</p>\n<p>${this.pairedUser(\n\t\t`Here is some more content`,\n\t\tdata.firstName,\n\t\tdata.lastName\n\t)}</p>\n`;\n};"
      }
    ],
    "relevance": 0.944
  },
  {
    "codeTitle": "Using TOML for Front Matter in Eleventy",
    "codeDescription": "Example of how to use TOML for front matter parsing in Eleventy. This snippet demonstrates the configuration needed to enable TOML support.",
    "codeLanguage": "markdown",
    "codeTokens": 64,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-frontmatter-customize.md#2025-04-05_snippet_0",
    "pageTitle": "Custom Front Matter Options in Eleventy",
    "codeList": [
      {
        "language": "markdown",
        "code": "---toml\ntitle = \"My page title using TOML\"\n---\n\n<!doctype html>\n<html>\n…"
      }
    ],
    "relevance": 0.943
  },
  {
    "codeTitle": "Installing HTML Base Plugin in Eleventy Config",
    "codeDescription": "Basic installation code for the HTML Base plugin in the Eleventy configuration file.",
    "codeLanguage": "javascript",
    "codeTokens": 69,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/html-base.md#2025-04-05_snippet_0",
    "pageTitle": "HTML Base Plugin Documentation for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "const htmlBasePlugin = require(\"@11ty/eleventy-plugin-html-base\");\n\nmodule.exports = function(eleventyConfig) {\n  eleventyConfig.addPlugin(htmlBasePlugin);\n};"
      }
    ],
    "relevance": 0.942
  },
  {
    "codeTitle": "Importing WebC Components",
    "codeDescription": "Demonstrates how to use webc:import to inline import a component definition or import from an npm package.",
    "codeLanguage": "html",
    "codeTokens": 56,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_8",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<any-tag-name webc:import=\"./components/my-component.webc\"></any-tag-name>"
      },
      {
        "language": "html",
        "code": "<syntax-highlight\n\tlanguage=\"js\"\n\twebc:import=\"npm:@11ty/eleventy-plugin-syntaxhighlight\"\n>\n\tfunction myFunction() { return true; }\n</syntax-highlight>"
      }
    ],
    "relevance": 0.942
  },
  {
    "codeTitle": "Configuring Nunjucks Global Functions in Eleventy",
    "codeDescription": "This snippet shows how to add global functions or variables to Nunjucks templates in Eleventy. It demonstrates adding both a simple value and a function as globals.",
    "codeLanguage": "javascript",
    "codeTokens": 77,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/nunjucks.md#2025-04-05_snippet_13",
    "pageTitle": "Nunjucks Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\televentyConfig.addNunjucksGlobal(\"fortythree\", 43);\n};"
      },
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\televentyConfig.addNunjucksGlobal(\"fortytwo\", function () {\n\t\treturn 42;\n\t});\n};"
      }
    ],
    "relevance": 0.941
  },
  {
    "codeTitle": "Custom Output Directory Configuration in Eleventy",
    "codeDescription": "Shows how to customize output directories when copying files, including copying to subfolders and handling different source locations.",
    "codeLanguage": "javascript",
    "codeTokens": 165,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/copy.md#2025-04-05_snippet_3",
    "pageTitle": "Passthrough File Copy in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\t// Input directory: src\n\t// Output directory: _site\n\n\t// Copy `img/` to `_site/subfolder/img`\n\televentyConfig.addPassthroughCopy({ img: \"subfolder/img\" });\n\n\t// Copy `src/img/` to `_site/subfolder/img`\n\televentyConfig.addPassthroughCopy({ \"src/img\": \"subfolder/img\" });\n\n\t// Copy `random-folder/img/` to `_site/subfolder/img`\n\televentyConfig.addPassthroughCopy({ \"random-folder/img\": \"subfolder/img\" });\n};"
      }
    ],
    "relevance": 0.941
  },
  {
    "codeTitle": "Adding Eleventy's Scoped Data to Custom Compile Function",
    "codeDescription": "This advanced snippet demonstrates how to add Eleventy's scoped data (page and eleventy objects) to a custom compile function using the augmentFunctionContext method.",
    "codeLanguage": "javascript",
    "codeTokens": 175,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/custom.md#2025-04-05_snippet_8",
    "pageTitle": "Custom Template Languages in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "\tcompile: function(compileFn) {\n\t\treturn function(data) {\n\t\t\t// Binds this.page and this.eleventy to your render context (and any future additions added later)\n\t\t\tlet renderFn = eleventyConfig.augmentFunctionContext(compileFn, {\n\t\t\t\tsource: data,\n\n\t\t\t\t// Overwrite existing values?\n\t\t\t\t// overwrite: true,\n\n\t\t\t\t// Lazily fetch the key using `getter`\n\t\t\t\t// lazy: false,\n\t\t\t\t// getter: (key, context) => context?.[key];\n\t\t\t});\n\n\t\t\treturn renderFn(data);\n\t\t};\n\t}"
      }
    ],
    "relevance": 0.94
  },
  {
    "codeTitle": "Adding YAML Front Matter to Markdown in Eleventy",
    "codeDescription": "Demonstrates how to add YAML front matter to a Markdown file in Eleventy, setting a page title.",
    "codeLanguage": "markdown",
    "codeTokens": 51,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-frontmatter.md#2025-04-05_snippet_0",
    "pageTitle": "Front Matter Data Configuration in Eleventy",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\ntitle: My page title\n---\n\n<!doctype html>\n<html>\n…"
      }
    ],
    "relevance": 0.94
  },
  {
    "codeTitle": "Using renderTemplate Paired Shortcode in Nunjucks",
    "codeDescription": "This example demonstrates how to use the renderTemplate paired shortcode to render a Markdown template string within a Nunjucks template.",
    "codeLanguage": "nunjucks",
    "codeTokens": 62,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/render.md#2025-04-05_snippet_1",
    "pageTitle": "Render Plugin Documentation for Eleventy",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{% renderTemplate \"md\" %}\n# Markdown Header\n\nThis is a **bold** paragraph.\n{% endrenderTemplate %}"
      }
    ],
    "relevance": 0.94
  },
  {
    "codeTitle": "Overriding Markdown Template Language in Eleventy",
    "codeDescription": "This snippet demonstrates how to override the default markdown processor in Eleventy from markdown-it to marked. It includes a conditional rendering based on data properties and access to the default renderer.",
    "codeLanguage": "javascript",
    "codeTokens": 176,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/custom.md#2025-04-05_snippet_6",
    "pageTitle": "Custom Template Languages in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import { marked } from \"marked\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addExtension(\"md\", {\n\t\tcompile: function (inputContent, inputPath) {\n\t\t\tlet html = marked.parse(inputContent);\n\n\t\t\treturn function (data) {\n\t\t\t\t// Example: use `marked` only if useMarked is set in the Data Cascade\n\t\t\t\tif (data.useMarked) {\n\t\t\t\t\treturn html;\n\t\t\t\t}\n\n\t\t\t\t// You can also access the default `markdown-it` renderer here:\n\t\t\t\treturn this.defaultRenderer(data);\n\t\t\t};\n\t\t},\n\t});\n};"
      }
    ],
    "relevance": 0.938
  },
  {
    "codeTitle": "In-Memory Cache Example with Identical Requests",
    "codeDescription": "Example demonstrating how the in-memory cache works when making identical image processing requests, returning the same promise for improved performance.",
    "codeLanguage": "javascript",
    "codeTokens": 88,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image.md#2025-04-05_snippet_3",
    "pageTitle": "Eleventy Image Utility Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "import Image from \"@11ty/eleventy-img\";\n\nlet stats1 = Image(\"./test/bio-2017.jpg\");\nlet stats2 = Image(\"./test/bio-2017.jpg\");\n\nconsole.assert(stats1 === stats2, \"The same promise\");"
      }
    ],
    "relevance": 0.938
  },
  {
    "codeTitle": "Full Options Configuration for Eleventy API",
    "codeDescription": "This snippet demonstrates how to pass a full options object to the Eleventy constructor when using the programmatic API. It includes various configuration options such as input, output, formats, and more.",
    "codeLanguage": "javascript",
    "codeTokens": 360,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/programmatic.md#2025-04-05_snippet_4",
    "pageTitle": "Programmatic API for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "const Eleventy = require(\"@11ty/eleventy\");\n\nasync function elev() {\n  let elev = new Eleventy(\".\", \"_site\", {\n    // --input=\".\"\n    dir: {\n      // --input=\".\"\n      input: \".\",\n      // --output=\"_site\"\n      output: \"_site\",\n      // --includes=\"_includes\"\n      includes: \"_includes\",\n      // --layouts=\"_layouts\"\n      layouts: \"_layouts\",\n      // --data=\"_data\"\n      data: \"_data\"\n    },\n    // --config=\".eleventy.js\"\n    configPath: \".eleventy.js\",\n    // --formats=md,html,njk\n    templateFormats: [\"md\", \"html\", \"njk\"],\n    // --extensionMap=html:md,11ty.js:11ty.cjs\n    extensionMap: [\n      {\n        key: \"html\",\n        extension: \"md\"\n      },\n      {\n        key: \"11ty.js\",\n        extension: \"11ty.cjs\"\n      }\n    ],\n    // --serve\n    serve: false,\n    // --watch\n    watch: false,\n    // --quiet\n    quietMode: false,\n    // --pathprefix=\"/\"\n    pathPrefix: \"/\",\n    // --incremental\n    incremental: false,\n    // --ignore=\"README.md\"\n    ignores: [\"README.md\"],\n    // --dryrun\n    dryRun: false\n  });\n\n  await elev.write();\n}\n\nelev();"
      }
    ],
    "relevance": 0.938
  },
  {
    "codeTitle": "Configuring Default Layout for Posts in Eleventy",
    "codeDescription": "JSON configuration file that sets a default Nunjucks layout template for all posts in the posts directory. This is applied to all templates inside posts/* to maintain consistent layout across multiple post files.",
    "codeLanguage": "json",
    "codeTokens": 64,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-template-dir.md#2025-04-05_snippet_0",
    "pageTitle": "Template and Directory Data Configuration in Eleventy",
    "codeList": [
      {
        "language": "json",
        "code": "{ \"layout\": \"layouts/post.njk\" }"
      }
    ],
    "relevance": 0.938
  },
  {
    "codeTitle": "Class-Based Template with Data Method (ESM)",
    "codeDescription": "Example of a class-based template with both data and render methods. The data method serves as front matter for the template and takes precedence in the data cascade.",
    "codeLanguage": "javascript",
    "codeTokens": 130,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/javascript.md#2025-04-05_snippet_9",
    "pageTitle": "JavaScript Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "class Test {\n\t// or `async data() {`\n\t// or `get data() {`\n\tdata() {\n\t\treturn {\n\t\t\tname: \"Ted\",\n\t\t\tlayout: \"teds-rad-layout\",\n\t\t\t// … other front matter keys\n\t\t};\n\t}\n\n\trender({ name }) {\n\t\t// will always be \"Ted\"\n\t\treturn `<p>${name}</p>`;\n\t}\n}\n\nexport default Test;"
      }
    ],
    "relevance": 0.936
  },
  {
    "codeTitle": "Basic Handlebars Plugin Configuration in Eleventy",
    "codeDescription": "Basic ESM configuration to add the Handlebars plugin to an Eleventy project, enabling .hbs template processing.",
    "codeLanguage": "javascript",
    "codeTokens": 76,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/handlebars.md#2025-04-05_snippet_1",
    "pageTitle": "Handlebars Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import handlebarsPlugin from \"@11ty/eleventy-plugin-handlebars\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addPlugin(handlebarsPlugin);\n}"
      }
    ],
    "relevance": 0.935
  },
  {
    "codeTitle": "Configuring Template Formats in Eleventy via Configuration API",
    "codeDescription": "Shows how to configure which template formats Eleventy should process using the configuration API. Demonstrates both resetting formats with setTemplateFormats and adding additional formats with addTemplateFormats.",
    "codeLanguage": "javascript",
    "codeTokens": 145,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/config.md#2025-04-05_snippet_7",
    "pageTitle": "Configuring Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\t// Reset to this value\n\televentyConfig.setTemplateFormats(\"html,liquid,njk\");\n\n\t// Additive to existing\n\televentyConfig.addTemplateFormats(\"pug,haml\");\n\n\t// Or:\n\t// eleventyConfig.setTemplateFormats([ \"html\", \"liquid\", \"njk\" ]);\n\t// eleventyConfig.addTemplateFormats([ \"pug\", \"haml\" ]);\n};"
      }
    ],
    "relevance": 0.935
  },
  {
    "codeTitle": "Configuring Nunjucks Environment Options in Eleventy",
    "codeDescription": "Shows how to configure Nunjucks environment options using the Eleventy Configuration API. This example demonstrates setting throwOnUndefined to true and autoescape to false (with a warning not to use this setting).",
    "codeLanguage": "javascript",
    "codeTokens": 102,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/nunjucks.md#2025-04-05_snippet_0",
    "pageTitle": "Nunjucks Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\televentyConfig.setNunjucksEnvironmentOptions({\n\t\tthrowOnUndefined: true,\n\t\tautoescape: false, // warning: don't do this!\n\t});\n};"
      }
    ],
    "relevance": 0.935
  },
  {
    "codeTitle": "Configuring Animated Image Output in Eleventy",
    "codeDescription": "This snippet demonstrates how to configure Eleventy Image to process and output animated GIF or WebP images using the 'sharpOptions' parameter.",
    "codeLanguage": "javascript",
    "codeTokens": 89,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image.md#2025-04-05_snippet_5",
    "pageTitle": "Eleventy Image Utility Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "import Image from \"@11ty/eleventy-img\";\n\nawait Image(\"./test/bio-2017.jpg\", {\n\tformats: [\"webp\", \"gif\"],\n\n\tsharpOptions: {\n\t\tanimated: true,\n\t},\n});"
      }
    ],
    "relevance": 0.935
  },
  {
    "codeTitle": "Adding Markdown-it Plugins to Eleventy",
    "codeDescription": "Shows how to add and configure markdown-it plugins in Eleventy using the amendLibrary method.",
    "codeLanguage": "javascript",
    "codeTokens": 79,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/markdown.md#2025-04-05_snippet_2",
    "pageTitle": "Using Markdown with Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "const markdownItEmoji = require(\"markdown-it-emoji\");\n\nmodule.exports = function (eleventyConfig) {\n\televentyConfig.amendLibrary(\"md\", (mdLib) => mdLib.use(markdownItEmoji));\n};"
      }
    ],
    "relevance": 0.935
  },
  {
    "codeTitle": "Adding Computed Global Data in Eleventy Configuration",
    "codeDescription": "Shows how to use the addGlobalData method with Eleventy's Computed Data feature to return a dynamic string value.",
    "codeLanguage": "javascript",
    "codeTokens": 97,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-global-custom.md#2025-04-05_snippet_4",
    "pageTitle": "Global Data Configuration in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "module.exports = function (eleventyConfig) {\n\televentyConfig.addGlobalData(\"eleventyComputed.myString\", () => {\n\t\treturn (data) => \"This is a string!\";\n\t});\n\n\t// myString's value will be \"This is a string!\"\n};"
      }
    ],
    "relevance": 0.934
  },
  {
    "codeTitle": "Installing Pug Plugin for Eleventy",
    "codeDescription": "Command to install the Pug template plugin package for Eleventy v3+",
    "codeLanguage": "sh",
    "codeTokens": 43,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/pug.md#2025-04-05_snippet_0",
    "pageTitle": "Pug Template Integration Guide for Eleventy",
    "codeList": [
      {
        "language": "sh",
        "code": "npm install @11ty/eleventy-plugin-pug"
      }
    ],
    "relevance": 0.932
  },
  {
    "codeTitle": "Implementing Async Shortcodes in Eleventy",
    "codeDescription": "Shows how to implement asynchronous shortcodes using async/await syntax. Both regular and paired shortcode examples are provided.",
    "codeLanguage": "javascript",
    "codeTokens": 124,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/liquid.md#2025-04-05_snippet_9",
    "pageTitle": "Liquid Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\televentyConfig.addLiquidShortcode(\n\t\t\"user\",\n\t\tasync function (name, twitterUsername) {\n\t\t\treturn await fetchAThing();\n\t\t}\n\t);\n\n\televentyConfig.addPairedShortcode(\n\t\t\"user2\",\n\t\tasync function (content, name, twitterUsername) {\n\t\t\treturn await fetchAThing();\n\t\t}\n\t);\n};"
      }
    ],
    "relevance": 0.932
  },
  {
    "codeTitle": "Advanced Vite plugin configuration for Eleventy",
    "codeDescription": "Detailed configuration of the Vite plugin for Eleventy, including custom options for temporary folder, server options, and Vite-specific settings.",
    "codeLanguage": "javascript",
    "codeTokens": 267,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/server-vite.md#2025-04-05_snippet_2",
    "pageTitle": "Integrating Vite with Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import EleventyVitePlugin from \"@11ty/eleventy-plugin-vite\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addPlugin(EleventyVitePlugin, {\n    tempFolderName: \".11ty-vite\", // Default name of the temp folder\n\n    // Options passed to the Eleventy Dev Server\n    // e.g. domdiff, enabled, etc.\n\n    // Added in Vite plugin v2.0.0\n    serverOptions: {},\n\n    // Defaults are shown:\n    viteOptions: {\n      clearScreen: false,\n      appType: \"mpa\", // New in v2.0.0\n\n      server: {\n        mode: \"development\",\n        middlewareMode: true,\n      },\n\n      build: {\n        mode: \"production\",\n      },\n\n      // New in v2.0.0\n      resolve: {\n        alias: {\n          // Allow references to `node_modules` folder directly\n          \"/node_modules\": path.resolve(\".\", \"node_modules\"),\n        },\n      },\n    },\n  });\n};"
      }
    ],
    "relevance": 0.932
  },
  {
    "codeTitle": "Basic HTML Heading Transformation Example",
    "codeDescription": "Shows how a basic HTML heading is transformed by the Id Attribute plugin to include an automatically generated id attribute.",
    "codeLanguage": "html",
    "codeTokens": 46,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/id-attribute.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Id Attribute Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<h1>Welcome to Eleventy</h1>"
      },
      {
        "language": "html",
        "code": "<h1 id=\"welcome-to-eleventy\">Welcome to Eleventy</h1>"
      }
    ],
    "relevance": 0.932
  },
  {
    "codeTitle": "Adding Function-Based Global Data in Eleventy Configuration",
    "codeDescription": "Illustrates how to add global data using a function that returns a Date object in Eleventy's configuration.",
    "codeLanguage": "javascript",
    "codeTokens": 76,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-global-custom.md#2025-04-05_snippet_2",
    "pageTitle": "Global Data Configuration in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "module.exports = function (eleventyConfig) {\n\televentyConfig.addGlobalData(\"myDate\", () => new Date());\n\n\t// myDate's value will be a Date instance\n};"
      }
    ],
    "relevance": 0.93
  },
  {
    "codeTitle": "Advanced Configuration for Eleventy Syntax Highlighting Plugin",
    "codeDescription": "Advanced configuration options for the syntax highlighting plugin, including custom line separators, template formats, Prism customization, HTML attributes, and error handling.",
    "codeLanguage": "javascript",
    "codeTokens": 300,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/syntaxhighlight.md#2025-04-05_snippet_2",
    "pageTitle": "Eleventy Syntax Highlighting Plugin Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "import syntaxHighlight from \"@11ty/eleventy-plugin-syntaxhighlight\";\n\nexport default function(eleventyConfig) {\n  eleventyConfig.addPlugin(syntaxHighlight, {\n\n    // Line separator for line breaks\n    lineSeparator: \"\\n\",\n\n    // Change which Eleventy template formats use syntax highlighters\n    templateFormats: [\"*\"], // default\n\n    // Use only a subset of template types (11ty.js added in v4.0.0)\n    // templateFormats: [\"liquid\", \"njk\", \"md\", \"11ty.js\"],\n\n    // init callback lets you customize Prism\n    init: function({ Prism }) {\n      Prism.languages.myCustomLanguage = { /* … */ };\n    },\n\n    // Added in 3.1.1, add HTML attributes to the <pre> or <code> tags\n    preAttributes: {\n      tabindex: 0,\n\n      // Added in 4.1.0 you can use callback functions too\n      \"data-language\": function({ language, content, options }) {\n        return language;\n      }\n    },\n    codeAttributes: {},\n\n    // Added in 5.0.0, throw errors on invalid language names\n    errorOnInvalidLanguage: false,\n  });\n};"
      }
    ],
    "relevance": 0.93
  },
  {
    "codeTitle": "Custom Sorting Collections in Eleventy",
    "codeDescription": "Shows how to create custom-sorted collections using Array.sort(). This example includes different sorting approaches: by date (ascending/descending) and by file path (ascending/descending).",
    "codeLanguage": "javascript",
    "codeTokens": 177,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/collections-api.md#2025-04-05_snippet_3",
    "pageTitle": "Eleventy Collections API Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\t// Sort with `Array.sort`\n\televentyConfig.addCollection(\"myCustomSort\", function (collectionsApi) {\n\t\treturn collectionsApi.getAll().sort(function (a, b) {\n\t\t\t//return a.date - b.date; // sort by date - ascending\n\t\t\treturn b.date - a.date; // sort by date - descending\n\t\t\t//return a.inputPath.localeCompare(b.inputPath); // sort by path - ascending\n\t\t\t//return b.inputPath.localeCompare(a.inputPath); // sort by path - descending\n\t\t});\n\t});\n};"
      }
    ],
    "relevance": 0.93
  },
  {
    "codeTitle": "Low-Level Cache Access in 11ty Fetch",
    "codeDescription": "Shows how to directly interact with the AssetCache API for lower-level cache control. Implements cache validation, retrieval, and storage with custom expiration periods.",
    "codeLanguage": "javascript",
    "codeTokens": 192,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/fetch.md#2025-04-05_snippet_10",
    "pageTitle": "Eleventy Fetch Plugin Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "import { AssetCache } from \"@11ty/eleventy-fetch\";\n\nexport default async function () {\n\t// Pass in your unique custom cache key\n\t// (normally this would be tied to your API URL)\n\tlet asset = new AssetCache(\"zachleat_twitter_followers\");\n\n\t// check if the cache is fresh within the last day\n\tif (asset.isCacheValid(\"1d\")) {\n\t\t// return cached data.\n\t\treturn asset.getCachedValue(); // a promise\n\t}\n\n\t// do some expensive operation here, this is simplified for brevity\n\tlet fakeTwitterApiContents = { followerCount: 1000 };\n\n\tawait asset.save(fakeTwitterApiContents, \"json\");\n\n\treturn fakeTwitterApiContents;\n};"
      }
    ],
    "relevance": 0.929
  },
  {
    "codeTitle": "Configuring Eleventy Navigation for Edge Plugin Documentation",
    "codeDescription": "This YAML front matter configures the navigation properties for the Edge plugin documentation page in Eleventy. It sets the navigation key, parent, excerpt, and other display options.",
    "codeLanguage": "yaml",
    "codeTokens": 111,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/edge.md#2025-04-05_snippet_0",
    "pageTitle": "Edge Plugin Documentation for Eleventy",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\neleventyNavigation:\n  key: Edge\n  parent: Retired Plugins\n  excerpt: A plugin to run Eleventy in an Edge Function to add dynamic content to your Eleventy sites.\n# communityLinksKey: edge\noverrideCommunityLinks: true\nexcludeFromSidebar: true\n---"
      }
    ],
    "relevance": 0.928
  },
  {
    "codeTitle": "Adding EXIF Image Data Support in Eleventy Configuration",
    "codeDescription": "Shows how to add support for reading EXIF data from image files using the exifr package in Eleventy's configuration.",
    "codeLanguage": "javascript",
    "codeTokens": 137,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-custom.md#2025-04-05_snippet_5",
    "pageTitle": "Custom Data File Formats in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import exifr from \"exifr\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addDataExtension(\"png,jpeg\", {\n\t\tparser: async (file) => {\n\t\t\tlet exif = await exifr.parse(file);\n\n\t\t\treturn {\n\t\t\t\texif,\n\t\t\t};\n\t\t},\n\n\t\t// Using `read: false` changes the parser argument to\n\t\t// a file path instead of file contents.\n\t\tread: false,\n\t});\n};"
      }
    ],
    "relevance": 0.928
  },
  {
    "codeTitle": "Installing the i18n Plugin in Eleventy Configuration",
    "codeDescription": "Shows how to add the built-in Internationalization plugin to an Eleventy project's configuration file with basic options.",
    "codeLanguage": "js",
    "codeTokens": 93,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/i18n.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Internationalization Plugin (i18n) Guide",
    "codeList": [
      {
        "language": "js",
        "code": "module.exports = function(eleventyConfig) {\n  eleventyConfig.addPlugin(eleventyConfig.i18n, {\n    defaultLanguage: \"en\", // Required, this is the language when there is no language in the URL\n  });\n};"
      }
    ],
    "relevance": 0.928
  },
  {
    "codeTitle": "Creating Complete Pagination Navigation in JavaScript for 11ty",
    "codeDescription": "A JavaScript template module for 11ty that implements full pagination navigation. It renders HTML with first, previous, page numbers, next, and last links, while handling conditional states.",
    "codeLanguage": "javascript",
    "codeTokens": 330,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/pagination/nav.md#2025-04-05_snippet_14",
    "pageTitle": "Creating Pagination Navigation in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "module.exports = function({ pagination, page }) {\n\treturn `<nav aria-labelledby=\"my-pagination\">\n\t<h2 id=\"my-pagination\">This is my Pagination</h2>\n\t<ol>\n\t\t<li>${pagination.href.first ? `<a href=\"${pagination.href.first}\">` : \"\"}First${pagination.href.first ? `</a>` : \"\"}</li>\n\t\t<li>${pagination.href.previous ? `<a href=\"${pagination.href.previous}\">` : \"\"}Previous${pagination.href.previous ? `</a>` : \"\"}</li>\n\n${pagination.pages.map((pageEntry, index) => {\n\t\t\tlet pageNumber = index + 1;\n\t\t\tlet currentHiddenAttribute = \"\";\n\t\t\tif(page.url === pagination.hrefs[index]) {\n\t\t\t\tcurrentHiddenAttribute = ` aria-current=\"page\"`;\n\t\t\t}\n\t\t\treturn `\t\t<li><a href=\"${pagination.hrefs[index]}\"${currentHiddenAttribute}>Page ${pageNumber}</a></li>`;\n\t\t}).join(\"\\n\")}\n\n\t\t<li>${pagination.href.next ? `<a href=\"${pagination.href.next}\">` : \"\"}Next${pagination.href.next ? `</a>` : \"\"}</li>\n\t\t<li>${pagination.href.last ? `<a href=\"${pagination.href.last}\">` : \"\"}Last${pagination.href.last ? `</a>` : \"\"}</li>\n\t</ol>\n</nav>`;\n};"
      }
    ],
    "relevance": 0.926
  },
  {
    "codeTitle": "Querying Generator Image API for JSON Response",
    "codeDescription": "This snippet shows the URL format for querying the Generator Image API to retrieve JSON data about the site generator used for a specific website. The URL parameter must be URI encoded.",
    "codeLanguage": "plaintext",
    "codeTokens": 57,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/services/generator.md#2025-04-05_snippet_1",
    "pageTitle": "Generator Image API Documentation",
    "codeList": [
      {
        "language": "plaintext",
        "code": "https://v1.generator.11ty.dev/json/:url/"
      }
    ],
    "relevance": 0.926
  },
  {
    "codeTitle": "Advanced Configuration of RSS Plugin with PostHTML Options",
    "codeDescription": "This snippet demonstrates how to configure the RSS plugin with advanced PostHTML rendering options, specifically setting the closingSingleTag option.",
    "codeLanguage": "javascript",
    "codeTokens": 111,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/rss.md#2025-04-05_snippet_2",
    "pageTitle": "Configuring RSS Plugin for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import pluginRss from \"@11ty/eleventy-plugin-rss\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addPlugin(pluginRss, {\n\t\tposthtmlRenderOptions: {\n\t\t\tclosingSingleTag: \"default\", // opt-out of <img/>-style XHTML single tags\n\t\t},\n\t});\n};"
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "Changing Default Time Zone for Eleventy Project",
    "codeDescription": "Demonstrates how to change the default time zone for an entire Eleventy project using custom date parsing. This example handles both Date objects and ISO strings, setting them to a specified time zone.",
    "codeLanguage": "javascript",
    "codeTokens": 243,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/dates.md#2025-04-05_snippet_2",
    "pageTitle": "Content Dates in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import { DateTime } from \"luxon\";\n\n// See https://moment.github.io/luxon/#/zones?id=specifying-a-zone\nconst TIME_ZONE = \"America/Chicago\";\n\nexport default function(eleventyConfig) {\n\televentyConfig.addDateParsing(function(dateValue) {\n\t\tlet localDate;\n\t\tif(dateValue instanceof Date) { // and YAML\n\t\t\tlocalDate = DateTime.fromJSDate(dateValue, { zone: \"utc\" }).setZone(TIME_ZONE, { keepLocalTime: true });\n\t\t} else if(typeof dateValue === \"string\") {\n\t\t\tlocalDate = DateTime.fromISO(dateValue, { zone: TIME_ZONE });\n\t\t}\n\t\tif (localDate?.isValid === false) {\n\t\t\tthrow new Error(`Invalid \\`date\\` value (${dateValue}) is invalid for ${this.page.inputPath}: ${localDate.invalidReason}`);\n\t\t}\n\t\treturn localDate;\n\t});\n};\n"
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "Configuring Data Deep Merge in Eleventy",
    "codeDescription": "Configuration code showing how to enable or disable deep data merging in Eleventy. Defaults to true in version 1.0 but can be opted out, while requiring explicit opt-in for version 0.x.",
    "codeLanguage": "javascript",
    "codeTokens": 114,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-deep-merge.md#2025-04-05_snippet_0",
    "pageTitle": "Data Deep Merge Configuration in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\t// defaults to true in 1.0, use false to opt-out\n\televentyConfig.setDataDeepMerge(false);\n\n\t// requires opt-in for 0.x\n\televentyConfig.setDataDeepMerge(true);\n};"
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "WebC Integration with is-land Component",
    "codeDescription": "Shows how to use WebC with is-land component for conditional asset loading and component hydration.",
    "codeLanguage": "html",
    "codeTokens": 169,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_48",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<is-land on:visible webc:import=\"npm:@11ty/is-land\">\n\t<template data-island>\n\t\t<!-- CSS -->\n\t\t<style webc:keep>\n\t\t\t/* This CSS applies on:visible */\n\t\t</style>\n\t\t<link rel=\"stylesheet\" href=\"arbitrary.css\" webc:keep />\n\n\t\t<!-- JS -->\n\t\t<script type=\"module\" webc:keep>\n\t\t\tconsole.log(\"This JavaScript runs on:visible\");\n\t\t</script>\n\t\t<script type=\"module\" src=\"arbitrary.js\" webc:keep></script>\n\t</template>\n</is-land>"
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "Configuring JavaScript Minification Filter in 11ty",
    "codeDescription": "Sets up a custom filter in 11ty configuration that uses Terser to minify JavaScript code. Includes error handling for graceful fallback if minification fails.",
    "codeLanguage": "javascript",
    "codeTokens": 144,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/quicktips/inline-js.md#2025-04-05_snippet_0",
    "pageTitle": "Inline JavaScript Minification with 11ty",
    "codeList": [
      {
        "language": "javascript",
        "code": "import { minify } from \"terser\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addFilter(\"jsmin\", async function (code, callback) {\n\t\ttry {\n\t\t\tconst minified = await minify(code);\n\t\t\tcallback(null, minified.code);\n\t\t} catch (err) {\n\t\t\tconsole.error(\"Terser error: \", err);\n\t\t\t// Fail gracefully.\n\t\t\tcallback(null, code);\n\t\t}\n\t});\n};"
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "Rendering HTML Navigation with Advanced Options in Nunjucks",
    "codeDescription": "This snippet demonstrates how to use the eleventyNavigationToHtml filter with advanced options in Nunjucks syntax. It shows customization of HTML elements, classes, and active page highlighting.",
    "codeLanguage": "jinja2",
    "codeTokens": 289,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_36",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "jinja2",
        "code": "---js\n{\n  navigationOptions: {\n    listElement: \"ul\",            // Change the top level tag\n    listItemElement: \"li\",        // Change the item tag\n\n    listClass: \"\",                // Add a class to the top level\n    listItemClass: \"\",            // Add a class to every item\n    listItemHasChildrenClass: \"\", // Add a class if the item has children\n    activeListItemClass: \"\",      // Add a class to the current page's item\n\n    anchorClass: \"\",              // Add a class to the anchor\n    activeAnchorClass: \"\",        // Add a class to the current page's anchor\n\n    // If matched, `activeListItemClass` and `activeAnchorClass` will be added\n    activeKey: \"\",\n    // It's likely you want to pass in `eleventyNavigation.key` here, e.g.:\n    // activeKey: eleventyNavigation.key\n\n    // Show excerpts (if they exist in data, read more above)\n    showExcerpt: false\n  }\n}\n---\n{{ collections.all | eleventyNavigation | eleventyNavigationToHtml(navigationOptions) | safe }}"
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "Petite Vue Integration with <is-land>",
    "codeDescription": "Example of using Petite Vue with <is-land>, demonstrating how to configure it with the autoinit and import attributes.",
    "codeLanguage": "html",
    "codeTokens": 122,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/is-land.md#2025-04-05_snippet_9",
    "pageTitle": "Using <is-land> for Islands Architecture in 11ty",
    "codeList": [
      {
        "language": "html",
        "code": "<is-land\n\ton:visible\n\tautoinit=\"petite-vue\"\n\timport=\"https://unpkg.com/petite-vue@0.4.1/dist/petite-vue.es.js\"\n\tv-scope=\"{ name: 'post-JS' }\"\n>\n\tHello from <span v-html=\"name\">pre-JS</span>\n</is-land>"
      }
    ],
    "relevance": 0.924
  },
  {
    "codeTitle": "Recursive Rendering of Multi-level Navigation in Nunjucks",
    "codeDescription": "This advanced snippet shows how to use a Nunjucks macro to recursively render a multi-level navigation menu. It allows for unlimited child levels and provides full control over the HTML structure.",
    "codeLanguage": "html",
    "codeTokens": 187,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_39",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "{% set navPages = collections.all | eleventyNavigation %}\n{% macro renderNavListItem(entry) -%}\n<li{% if entry.url == page.url %} class=\"my-active-class\"{% endif %}>\n  <a href=\"{{ entry.url }}\">{{ entry.title }}</a>\n{%- if entry.children.length -%}\n  <ul>\n    {%- for child in entry.children %}{{ renderNavListItem(child) }}{% endfor -%}\n  </ul>\n{%- endif -%}\n</li>\n{%- endmacro %}\n\n<ul>\n{%- for entry in navPages %}{{ renderNavListItem(entry) }}{%- endfor -%}\n</ul>"
      }
    ],
    "relevance": 0.923
  },
  {
    "codeTitle": "Using Slots in WebC Components",
    "codeDescription": "Demonstrates the use of slots in WebC components, including default and named slots.",
    "codeLanguage": "html",
    "codeTokens": 51,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_12",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<my-component></my-component>\n<my-component>This is the default slot</my-component>"
      },
      {
        "language": "html",
        "code": "<p><slot>Fallback slot content</slot></p>"
      },
      {
        "language": "html",
        "code": "<my-component>\n\tThis is the default slot.\n\t<strong slot=\"named-slot\">This is a named slot</strong>\n\tThis is also the default slot.\n</my-component>"
      },
      {
        "language": "html",
        "code": "<p><slot name=\"named-slot\"></slot></p>"
      }
    ],
    "relevance": 0.922
  },
  {
    "codeTitle": "Creating Complete Pagination Navigation in CommonJS for 11ty",
    "codeDescription": "A CommonJS template module for 11ty that renders full pagination navigation with first, previous, page numbers, next, and last links. Includes conditional logic for active states and ARIA attributes.",
    "codeLanguage": "javascript",
    "codeTokens": 333,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/pagination/nav.md#2025-04-05_snippet_15",
    "pageTitle": "Creating Pagination Navigation in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "module.exports = function({ pagination, page }) {\n\treturn `<nav aria-labelledby=\"my-pagination\">\n\t<h2 id=\"my-pagination\">This is my Pagination</h2>\n\t<ol>\n\t\t<li>${pagination.href.first ? `<a href=\"${pagination.href.first}\">` : \"\"}First${pagination.href.first ? `</a>` : \"\"}</li>\n\t\t<li>${pagination.href.previous ? `<a href=\"${pagination.href.previous}\">` : \"\"}Previous${pagination.href.previous ? `</a>` : \"\"}</li>\n\n${pagination.pages.map((pageEntry, index) => {\n\t\t\tlet pageNumber = index + 1;\n\t\t\tlet currentHiddenAttribute = \"\";\n\t\t\tif(page.url === pagination.hrefs[index]) {\n\t\t\t\tcurrentHiddenAttribute = ` aria-current=\"page\"`;\n\t\t\t}\n\t\t\treturn `\t\t<li><a href=\"${pagination.hrefs[index]}\"${currentHiddenAttribute}>Page ${pageNumber}</a></li>`;\n\t\t}).join(\"\\n\")}\n\n\t\t<li>${pagination.href.next ? `<a href=\"${pagination.href.next}\">` : \"\"}Next${pagination.href.next ? `</a>` : \"\"}</li>\n\t\t<li>${pagination.href.last ? `<a href=\"${pagination.href.last}\">` : \"\"}Last${pagination.href.last ? `</a>` : \"\"}</li>\n\t</ol>\n</nav>`;\n};"
      }
    ],
    "relevance": 0.922
  },
  {
    "codeTitle": "Using Props in WebC Components - Component Implementation",
    "codeDescription": "Demonstrates how to use props within a component definition, specifically using the @text prop to display the value of another prop.",
    "codeLanguage": "html",
    "codeTokens": 58,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_16",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<p @text=\"prop\"></p>\n<!-- outputs <p>Hello</p> -->"
      }
    ],
    "relevance": 0.922
  },
  {
    "codeTitle": "Registering Asynchronous JavaScript Template Functions",
    "codeDescription": "Example of registering asynchronous JavaScript template functions that can perform async operations before returning a result.",
    "codeLanguage": "javascript",
    "codeTokens": 64,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/javascript.md#2025-04-05_snippet_16",
    "pageTitle": "JavaScript Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n  eleventyConfig.addJavaScriptFunction(\"myAsyncFunction\", async function(a, b) { /* … */ });\n};"
      }
    ],
    "relevance": 0.92
  },
  {
    "codeTitle": "Configuring Eleventy Dev Server for Serve Mode",
    "codeDescription": "Shows how to use the ELEVENTY_RUN_MODE environment variable to change server behavior during --serve mode, intercepting all requests to display a custom message.",
    "codeLanguage": "javascript",
    "codeTokens": 142,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/dev-server.md#2025-04-05_snippet_3",
    "pageTitle": "Configuring Eleventy Dev Server",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\t// Intercept all requests during --serve mode.\n\tif(process.env.ELEVENTY_RUN_MODE === \"serve\") {\n\t\televentyConfig.setServerOptions({\n\t\t\tonRequest: {\n\t\t\t\t\"/*\": function({ url }) {\n\t\t\t\t\t// Don't return any static files, only show a help message\n\t\t\t\t\treturn \"Help I am trapped in the computer.\";\n\t\t\t\t},\n\t\t\t}\n\t\t});\n\t}\n};"
      }
    ],
    "relevance": 0.92
  },
  {
    "codeTitle": "Basic Configuration of RSS Plugin in Eleventy",
    "codeDescription": "This code snippet shows the basic configuration for adding the RSS plugin to an Eleventy project using the addPlugin method in the configuration file.",
    "codeLanguage": "javascript",
    "codeTokens": 80,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/rss.md#2025-04-05_snippet_1",
    "pageTitle": "Configuring RSS Plugin for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import pluginRss from \"@11ty/eleventy-plugin-rss\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addPlugin(pluginRss);\n};"
      }
    ],
    "relevance": 0.92
  },
  {
    "codeTitle": "Installing <is-land> via NPM",
    "codeDescription": "Command to install the @11ty/is-land package through NPM. This is the first step to use the Islands Architecture implementation.",
    "codeLanguage": "bash",
    "codeTokens": 54,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/is-land.md#2025-04-05_snippet_0",
    "pageTitle": "Using <is-land> for Islands Architecture in 11ty",
    "codeList": [
      {
        "language": "bash",
        "code": "npm install @11ty/is-land"
      }
    ],
    "relevance": 0.92
  },
  {
    "codeTitle": "Defining WebC Component with CSS",
    "codeDescription": "Shows how to create a WebC component with CSS, which will include the component tag in the output markup for styling.",
    "codeLanguage": "html",
    "codeTokens": 58,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_5",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<!DOCTYPE html>\n<title>WebC Example</title>\n<my-component></my-component>"
      },
      {
        "language": "html",
        "code": "Components don't need a root element, y'all.\n<style>\n\t/* Hi */\n</style>"
      }
    ],
    "relevance": 0.918
  },
  {
    "codeTitle": "Setting Custom Liquid Library Instance",
    "codeDescription": "Advanced configuration that creates and uses a custom LiquidJS library instance with specific options. This provides complete control over the Liquid template engine's behavior and overrides any options set with setLiquidOptions.",
    "codeLanguage": "javascript",
    "codeTokens": 135,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/liquid.md#2025-04-05_snippet_2",
    "pageTitle": "Liquid Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import { Liquid } from \"liquidjs\";\n\nexport default function (eleventyConfig) {\n\tlet options = {\n\t\textname: \".liquid\",\n\t\tdynamicPartials: false,\n\t\tstrictFilters: false, // renamed from `strict_filters` in Eleventy 1.0\n\t\troot: [\"_includes\"],\n\t};\n\n\televentyConfig.setLibrary(\"liquid\", new Liquid(options));\n};"
      }
    ],
    "relevance": 0.918
  },
  {
    "codeTitle": "Defining a Basic Eleventy Plugin in Configuration",
    "codeDescription": "Shows how to add a simple inline plugin function to an Eleventy configuration file. This demonstrates the basic structure of an Eleventy plugin as a function that receives the eleventyConfig object.",
    "codeLanguage": "javascript",
    "codeTokens": 88,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/create-plugin.md#2025-04-05_snippet_0",
    "pageTitle": "Creating and Using Eleventy Plugins",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\televentyConfig.addPlugin(function(eleventyConfig) {\n\t\t// I am a plugin!\n\t});\n};"
      }
    ],
    "relevance": 0.918
  },
  {
    "codeTitle": "Class Template with String Permalink (ESM)",
    "codeDescription": "Demonstrates using a static string permalink in a class-based JavaScript template. The permalink controls the output file path in the build directory.",
    "codeLanguage": "javascript",
    "codeTokens": 90,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/javascript.md#2025-04-05_snippet_10",
    "pageTitle": "JavaScript Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "class Test {\n\tdata() {\n\t\treturn {\n\t\t\t// Writes to \"/my-permalink/index.html\"\n\t\t\tpermalink: \"/my-permalink/\",\n\t\t};\n\t}\n\n\trender(data) {\n\t\t/* … */\n\t}\n}\n\nexport default Test;"
      }
    ],
    "relevance": 0.917
  },
  {
    "codeTitle": "Class Template with Function Permalink (ESM)",
    "codeDescription": "Shows how to use a function-based permalink in a class template that dynamically generates the output path based on data values.",
    "codeLanguage": "javascript",
    "codeTokens": 103,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/javascript.md#2025-04-05_snippet_11",
    "pageTitle": "JavaScript Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "class Test {\n\tdata() {\n\t\treturn {\n\t\t\tkey: \"hello\",\n\t\t\t// Writes to \"/my-permalink/hello/index.html\"\n\t\t\tpermalink: (data) => `/my-permalink/${data.key}/`,\n\t\t};\n\t}\n\n\trender(data) {\n\t\t/* … */\n\t}\n}\n\nexport default Test;"
      }
    ],
    "relevance": 0.916
  },
  {
    "codeTitle": "Dynamic Attributes and Props in WebC - Page Declaration",
    "codeDescription": "Shows how to use dynamic attributes and properties with the colon (:) prefix, allowing JavaScript evaluation for values instead of static strings.",
    "codeLanguage": "html",
    "codeTokens": 71,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_17",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<avatar-image\n\tsrc=\"my-image.jpeg\"\n\talt=\"Zach is documenting this project\"\n\t:@dynamic-prop=\"'hello'\"\n></avatar-image>"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Using log filter in JavaScript templates",
    "codeDescription": "Shows how to use the log filter in JavaScript templates through the this.log method. Note that in JavaScript templates, you can also use console.log directly.",
    "codeLanguage": "js",
    "codeTokens": 79,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/filters/log.md#2025-04-05_snippet_2",
    "pageTitle": "Log Universal Filter in 11ty",
    "codeList": [
      {
        "language": "js",
        "code": "module.exports = function (data) {\n\t// Caveat: you have access to `console.log` here, so probably use that.\n\treturn this.log(\"My Title\");\n};"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Configuring Basic Transform in Eleventy",
    "codeDescription": "Demonstrates how to add a basic transform function to Eleventy configuration. The transform can be synchronous or asynchronous and has access to page input and output paths.",
    "codeLanguage": "javascript",
    "codeTokens": 106,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/transforms.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Transforms Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\t// Can be sync or async\n\televentyConfig.addTransform(\"transform-name\", async function (content) {\n\t\tconsole.log(this.page.inputPath);\n\t\tconsole.log(this.page.outputPath);\n\n\t\treturn content; // no changes made.\n\t});\n};"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Creating Complete Pagination Navigation in Nunjucks for 11ty",
    "codeDescription": "A Nunjucks template that implements full pagination navigation with first, previous, page numbers, next, and last links. Includes proper ARIA attributes and conditional logic for active states.",
    "codeLanguage": "jinja2",
    "codeTokens": 305,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/pagination/nav.md#2025-04-05_snippet_13",
    "pageTitle": "Creating Pagination Navigation in Eleventy",
    "codeList": [
      {
        "language": "jinja2",
        "code": "<nav aria-labelledby=\"my-pagination\">\n\t<h2 id=\"my-pagination\">This is my Pagination</h2>\n\t<ol>\n\t\t<li>{% if pagination.href.first %}<a href=\"{{ pagination.href.first }}\">{% endif %}First{% if pagination.href.first %}</a>{% endif %}</li>\n\t\t<li>{% if pagination.href.previous %}<a href=\"{{ pagination.href.previous }}\">{% endif %}Previous{% if pagination.href.previous %}</a>{% endif %}</li>\n\n{%- for pageEntry in pagination.pages %}\n\t\t<li><a href=\"{{ pagination.hrefs[ loop.index0 ] }}\"{% if page.url == pagination.hrefs[ loop.index0 ] %} aria-current=\"page\"{% endif %}>Page {{ loop.index }}</a></li>\n{%- endfor %}\n\n\t\t<li>{% if pagination.href.next %}<a href=\"{{ pagination.href.next }}\">{% endif %}Next{% if pagination.href.next %}</a>{% endif %}</li>\n\t\t<li>{% if pagination.href.last %}<a href=\"{{ pagination.href.last }}\">{% endif %}Last{% if pagination.href.last %}</a>{% endif %}</li>\n\t</ol>\n</nav>"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Async Data Fetching in Eleventy",
    "codeDescription": "Shows how to fetch data asynchronously using async functions and promises in Eleventy.",
    "codeLanguage": "javascript",
    "codeTokens": 84,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-js.md#2025-04-05_snippet_2",
    "pageTitle": "JavaScript Data Files in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "async function fetchUserData(username) {\n\t// do some async things\n\treturn username;\n}\n\nexport default async function () {\n\tlet user1 = await fetchUserData(\"user1\");\n\tlet user2 = await fetchUserData(\"user2\");\n\n\treturn [user1, user2];\n};"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Configuring Eleventy with esbuild-register for JSX and TSX Support",
    "codeDescription": "This configuration uses esbuild-register to add support for JSX and TSX files in Eleventy, compatible with CommonJS and Eleventy 2.0. It demonstrates an alternative approach to the ESM-based configuration.",
    "codeLanguage": "javascript",
    "codeTokens": 134,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/jsx.md#2025-04-05_snippet_2",
    "pageTitle": "JSX Template Language Configuration for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "const { register } = require(\"esbuild-register/dist/node\");\n\nregister();\n\nmodule.exports = function(eleventyConfig) {\n\t// We can add support for TypeScript too, at the same time:\n\televentyConfig.addExtension([\"11ty.jsx\", \"11ty.ts\", \"11ty.tsx\"], {\n\t\tkey: \"11ty.js\",\n\t});\n};"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Class Template with Permalink Using Filter (ESM)",
    "codeDescription": "Example of using an Eleventy filter within a permalink function to generate slugified URLs based on content data.",
    "codeLanguage": "javascript",
    "codeTokens": 114,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/javascript.md#2025-04-05_snippet_12",
    "pageTitle": "JavaScript Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "class Test {\n\tdata() {\n\t\treturn {\n\t\t\ttitle: \"This is my blog post title\",\n\t\t\t// Writes to \"/this-is-my-blog-post-title/index.html\"\n\t\t\tpermalink: function (data) {\n\t\t\t\treturn `/${this.slug(data.title)}/`;\n\t\t\t},\n\t\t};\n\t}\n\n\trender(data) {\n\t\t/* … */\n\t}\n}\n\nexport default Test;"
      }
    ],
    "relevance": 0.914
  },
  {
    "codeTitle": "Function-Based Template with Destructuring (ESM)",
    "codeDescription": "Using object destructuring in function parameters to make the JavaScript template code more readable when accessing specific data properties.",
    "codeLanguage": "javascript",
    "codeTokens": 50,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/javascript.md#2025-04-05_snippet_5",
    "pageTitle": "JavaScript Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function ({ name }) {\n\treturn `<p>${name}</p>`;\n};"
      }
    ],
    "relevance": 0.914
  },
  {
    "codeTitle": "Using @html Prop in WebC Components",
    "codeDescription": "Demonstrates how to use the @html prop to override tag content with custom JavaScript, with options for static strings or dynamic properties.",
    "codeLanguage": "html",
    "codeTokens": 62,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_21",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<template @html=\"'Template HTML'\"></template>\n<template @html=\"dataProperty\"></template>"
      }
    ],
    "relevance": 0.912
  },
  {
    "codeTitle": "Adding Per-Engine Filters in Eleventy",
    "codeDescription": "Demonstrates how to add filters specific to individual template engines like Liquid, Nunjucks, and JavaScript in Eleventy configuration.",
    "codeLanguage": "js",
    "codeTokens": 182,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/filters.md#2025-04-05_snippet_8",
    "pageTitle": "Eleventy Template Filters Documentation",
    "codeList": [
      {
        "language": "js",
        "code": "export default function (eleventyConfig) {\n\t// Liquid Filter (async-friendly)\n  eleventyConfig.addLiquidFilter(\"myFilter\", async function(value) { /* … */ });\n\n  // Nunjucks Filter\n  eleventyConfig.addNunjucksFilter(\"myFilter\", function(value) { /* … */ });\n\n  // Nunjucks Async Filter\n  // Read the Nunjucks docs before using this (link below)\n  eleventyConfig.addNunjucksAsyncFilter(\"myFilter\", function() { /* … */ });\n\n  // JavaScript Template Function (async-friendly)\n  eleventyConfig.addJavaScriptFunction(\"myFilter\", async function(value) { /* … */ });\n};"
      }
    ],
    "relevance": 0.912
  },
  {
    "codeTitle": "Using eleventy.beforeWatch Event in Eleventy Configuration",
    "codeDescription": "Demonstrates how to set up an event handler for the eleventy.beforeWatch event which runs before rebuild operations during watch or serve mode, but not during initial or standalone builds.",
    "codeLanguage": "javascript",
    "codeTokens": 124,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/events.md#2025-04-05_snippet_4",
    "pageTitle": "Configuration Events in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\t// Async-friendly\n\televentyConfig.on(\"eleventy.beforeWatch\", async (changedFiles) => {\n\t\t// Run me before --watch or --serve re-runs\n\t\t// changedFiles is an array of files that changed\n\t\t// to trigger the watch/serve build\n\t});\n};"
      }
    ],
    "relevance": 0.912
  },
  {
    "codeTitle": "Returning Buffer Content in JavaScript Templates (ESM)",
    "codeDescription": "Example of returning a Buffer object in a JavaScript template, which can be useful for certain templating libraries that return Buffers like viperHTML.",
    "codeLanguage": "javascript",
    "codeTokens": 53,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/javascript.md#2025-04-05_snippet_2",
    "pageTitle": "JavaScript Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default Buffer.from(\"<p>Zách</p>\");"
      }
    ],
    "relevance": 0.911
  },
  {
    "codeTitle": "Using eleventy.contentMap Event in Eleventy Configuration",
    "codeDescription": "Shows how to implement an event handler for the eleventy.contentMap event which provides mappings between input file paths and output URLs, primarily used for i18n functionality.",
    "codeLanguage": "javascript",
    "codeTokens": 126,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/events.md#2025-04-05_snippet_5",
    "pageTitle": "Configuration Events in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\t// Async-friendly\n\televentyConfig.on(\"eleventy.contentMap\", async ({ inputPathToUrl, urlToInputPath }) => {\n\t\t// inputPathToUrl is an object mapping input file paths to output URLs\n\t\t// urlToInputPath is an object mapping output URLs to input file paths\n\t});\n};"
      }
    ],
    "relevance": 0.91
  },
  {
    "codeTitle": "Scoped CSS in WebC Components - Component Definition",
    "codeDescription": "Demonstrates how to define scoped CSS within a component using webc:scoped and the :host selector for component-specific styling.",
    "codeLanguage": "html",
    "codeTokens": 76,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_28",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<style webc:scoped>\n\t:host {\n\t\tcolor: blue;\n\t}\n\t:host:defined {\n\t\tcolor: rebeccapurple;\n\t}\n</style>"
      }
    ],
    "relevance": 0.91
  },
  {
    "codeTitle": "Implementing Multiple Argument Filters in Eleventy Configuration",
    "codeDescription": "This snippet demonstrates how to add a Liquid filter that accepts multiple arguments in the Eleventy configuration file. It shows the implementation of a filter that concatenates three strings.",
    "codeLanguage": "javascript",
    "codeTokens": 108,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/liquid.md#2025-04-05_snippet_5",
    "pageTitle": "Liquid Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\t// Liquid Filter\n\televentyConfig.addLiquidFilter(\n\t\t\"concatThreeStrings\",\n\t\tfunction (arg1, arg2, arg3) {\n\t\t\treturn arg1 + arg2 + arg3;\n\t\t}\n\t);\n};"
      }
    ],
    "relevance": 0.91
  },
  {
    "codeTitle": "Accessing Existing Filters in Configuration",
    "codeDescription": "Demonstrates how to access and use existing filters within the Eleventy configuration file, specifically in a custom shortcode.",
    "codeLanguage": "js",
    "codeTokens": 92,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/filters.md#2025-04-05_snippet_5",
    "pageTitle": "Eleventy Template Filters Documentation",
    "codeList": [
      {
        "language": "js",
        "code": "export default function (eleventyConfig) {\n\televentyConfig.addShortcode(\"myCustomImage\", function (url, alt) {\n\t\treturn `<img src=\"${eleventyConfig.getFilter(\"url\")(url)}\" alt=\"${alt}\">`;\n\t});\n};"
      }
    ],
    "relevance": 0.908
  },
  {
    "codeTitle": "Returning Promise Content in JavaScript Templates (ESM)",
    "codeDescription": "Example showing how to return a Promise that resolves to a string in a JavaScript template, enabling asynchronous content generation.",
    "codeLanguage": "javascript",
    "codeTokens": 66,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/javascript.md#2025-04-05_snippet_3",
    "pageTitle": "JavaScript Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default new Promise((resolve, reject) => {\n\tsetTimeout(function () {\n\t\tresolve(\"<p>Zach</p>\");\n\t}, 1000);\n});"
      }
    ],
    "relevance": 0.908
  },
  {
    "codeTitle": "CSS Generation with JavaScript Render Function",
    "codeDescription": "Shows how to use a JavaScript render function to generate CSS with a custom license banner.",
    "codeLanguage": "html",
    "codeTokens": 78,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_32",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<template webc:is=\"style\" webc:root=\"override\">\n\t<script webc:type=\"js\">\n\t\t`/* ${license} */`;\n\t</script>\n\t<slot></slot>\n</template>"
      }
    ],
    "relevance": 0.908
  },
  {
    "codeTitle": "HTML Layout with PrismJS Theme Integration",
    "codeDescription": "Example HTML layout showing how to include the PrismJS theme CSS from a CDN to style the syntax highlighting.",
    "codeLanguage": "html",
    "codeTokens": 99,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/syntaxhighlight.md#2025-04-05_snippet_3",
    "pageTitle": "Eleventy Syntax Highlighting Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<html lang=\"en\">\n\t<head>\n\t\t<!-- Some html boilerplate omitted -->\n\t\t<link\n\t\t\thref=\"https://unpkg.com/prismjs@1.20.0/themes/prism-okaidia.css\"\n\t\t\trel=\"stylesheet\"\n\t\t/>\n\t</head>\n</html>"
      }
    ],
    "relevance": 0.908
  },
  {
    "codeTitle": "Filtering Pagination Values in Eleventy",
    "codeDescription": "Shows how to filter specific values from pagination data using the filter property",
    "codeLanguage": "markdown",
    "codeTokens": 77,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/pagination.md#2025-04-05_snippet_4",
    "pageTitle": "Pagination in 11ty Static Site Generator",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\npagination:\n  data: testdata\n  size: 1\n  filter:\n    - item3\ntestdata:\n  item1: itemvalue1\n  item2: itemvalue2\n  item3: itemvalue3\n---"
      }
    ],
    "relevance": 0.906
  },
  {
    "codeTitle": "Rendering Navigation to Markdown in Liquid",
    "codeDescription": "Liquid template code to render the navigation structure as Markdown using the eleventyNavigationToMarkdown filter.",
    "codeLanguage": "liquid",
    "codeTokens": 48,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_12",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "liquid",
        "code": "{{ collections.all | eleventyNavigation | eleventyNavigationToMarkdown }}"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "Environment Variables in Eleventy",
    "codeDescription": "Shows how to expose environment variables to templates using a global data file.",
    "codeLanguage": "javascript",
    "codeTokens": 51,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-js.md#2025-04-05_snippet_5",
    "pageTitle": "JavaScript Data Files in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function () {\n\treturn {\n\t\tenvironment: process.env.MY_ENVIRONMENT || \"development\",\n\t};\n}"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "Configuring TypeScript Support with esbuild-register (CommonJS)",
    "codeDescription": "Alternative configuration using esbuild-register for TypeScript support in CommonJS environment.",
    "codeLanguage": "javascript",
    "codeTokens": 102,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/typescript.md#2025-04-05_snippet_3",
    "pageTitle": "TypeScript Configuration Guide for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "const { register } = require(\"esbuild-register/dist/node\");\n\nregister();\n\nmodule.exports = function(eleventyConfig) {\n\t// We can add support for JSX too, at the same time:\n\televentyConfig.addExtension([\"11ty.jsx\", \"11ty.ts\", \"11ty.tsx\"], {\n\t\tkey: \"11ty.js\",\n\t});\n};"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "Using webc:keep Attribute",
    "codeDescription": "Demonstrates the use of webc:keep attribute to retain the component tag or opt-out of asset bundling for individual elements.",
    "codeLanguage": "html",
    "codeTokens": 54,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_6",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<html-only-component webc:keep></html-only-component>"
      },
      {
        "language": "html",
        "code": "<style webc:keep></style>\n<script webc:keep></script>"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "Generating Atom Feed Template in Eleventy",
    "codeDescription": "This snippet demonstrates how to create an Atom feed template using Eleventy. It includes JSON metadata configuration and the XML structure for the Atom feed. The template iterates through blog posts and generates feed entries.",
    "codeLanguage": "html",
    "codeTokens": 422,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/rss.md#2025-04-05_snippet_4",
    "pageTitle": "Configuring RSS Plugin for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "---json\n{\n  \"permalink\": \"feed.xml\",\n  \"eleventyExcludeFromCollections\": true,\n  \"metadata\": {\n    \"title\": \"My Blog about Boats\",\n    \"description\": \"I am writing about my experiences as a naval navel-gazer.\",\n    \"language\": \"en\",\n    \"base\": \"https://example.com/\",\n    \"author\": {\n      \"name\": \"Boaty McBoatFace\"\n    }\n  }\n}\n---\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<feed xmlns=\"http://www.w3.org/2005/Atom\" xml:lang=\"{{ metadata.language or page.lang }}\">\n  <title>{{ metadata.title }}</title>\n  <subtitle>{{ metadata.description }}</subtitle>\n  <link href=\"{{ permalink | htmlBaseUrl(metadata.base) }}\" rel=\"self\" />\n  <link href=\"{{ metadata.base | addPathPrefixToFullUrl }}\" />\n  <updated>{{ collections.posts | getNewestCollectionItemDate | dateToRfc3339 }}</updated>\n  <id>{{ metadata.base | addPathPrefixToFullUrl }}</id>\n  <author>\n    <name>{{ metadata.author.name }}</name>\n  </author>\n  {%- for post in collections.posts | reverse %}\n  {%- set absolutePostUrl %}{{ post.url | htmlBaseUrl(metadata.base) }}{% endset %}\n  <entry>\n    <title>{{ post.data.title }}</title>\n    <link href=\"{{ absolutePostUrl }}\" />\n    <updated>{{ post.date | dateToRfc3339 }}</updated>\n    <id>{{ absolutePostUrl }}</id>\n    <content type=\"html\">{{ post.content | renderTransforms(post.data.page, metadata.base) }}</content>\n  </entry>\n  {%- endfor %}\n</feed>"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "WebC Layout Template with Asset Bucket Integration",
    "codeDescription": "Layout file showing how to output bundled assets from different buckets in the page structure using getBundle.",
    "codeLanguage": "html",
    "codeTokens": 188,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_45",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"utf-8\" />\n\t\t<title>WebC Example</title>\n\t\t<!-- Default bucket -->\n\t\t<style @raw=\"getBundle('css')\" webc:keep></style>\n\t\t<script @raw=\"getBundle('js')\" webc:keep></script>\n\t</head>\n\t<body>\n\t\t<template @raw=\"content\" webc:nokeep></template>\n\n\t\t<!-- `defer` bucket -->\n\t\t<style @raw=\"getBundle('css', 'defer')\" webc:keep></style>\n\t\t<script @raw=\"getBundle('js', 'defer')\" webc:keep></script>\n\t</body>\n</html>"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "Adding Custom Data Extension in Eleventy Configuration",
    "codeDescription": "Demonstrates how to add support for custom data file formats using the addDataExtension method in Eleventy's configuration file.",
    "codeLanguage": "javascript",
    "codeTokens": 86,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-custom.md#2025-04-05_snippet_0",
    "pageTitle": "Custom Data File Formats in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\t// Receives file contents, return parsed data\n\televentyConfig.addDataExtension(\"yml,yaml\", (contents, filePath) => {\n\t\treturn {};\n\t});\n};"
      }
    ],
    "relevance": 0.904
  },
  {
    "codeTitle": "Rendering Navigation to HTML in Liquid",
    "codeDescription": "Liquid template code to render the navigation structure as HTML using the eleventyNavigationToHtml filter.",
    "codeLanguage": "liquid",
    "codeTokens": 48,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_9",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "liquid",
        "code": "{{ collections.all | eleventyNavigation | eleventyNavigationToHtml }}"
      }
    ],
    "relevance": 0.902
  },
  {
    "codeTitle": "Conditional Image Rendering with JavaScript",
    "codeDescription": "Demonstrates a more complex conditional rendering using webc:type=\"js\" to output either an img tag or a link based on the presence of an alt attribute.",
    "codeLanguage": "html",
    "codeTokens": 110,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_33",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<script webc:type=\"js\">\n\tif (alt) {\n\t\t`<img src=\"${src}\" alt=\"${alt}\">`;\n\t} else {\n\t\t`<a href=\"${src}\">Your image didn't have an alt so you get this link instead.</a>`;\n\t}\n</script>"
      }
    ],
    "relevance": 0.902
  },
  {
    "codeTitle": "Amending the Markdown Library Instance in Eleventy 2.0+",
    "codeDescription": "Demonstrates how to modify the existing Markdown library instance using the amendLibrary method introduced in Eleventy 2.0.",
    "codeLanguage": "javascript",
    "codeTokens": 71,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/markdown.md#2025-04-05_snippet_1",
    "pageTitle": "Using Markdown with Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "module.exports = function (eleventyConfig) {\n\televentyConfig.amendLibrary(\"md\", (mdLib) => mdLib.enable(\"code\"));\n};"
      }
    ],
    "relevance": 0.902
  },
  {
    "codeTitle": "Using Asynchronous JavaScript Template Functions (ESM)",
    "codeDescription": "Shows how to use async JavaScript template functions in templates by using the 'await' keyword with the function call.",
    "codeLanguage": "javascript",
    "codeTokens": 63,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/javascript.md#2025-04-05_snippet_17",
    "pageTitle": "JavaScript Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default async function (data) {\n\treturn `<h1>${await this.myAsyncFunction(data.a, data.b)}</h1>`;\n};"
      }
    ],
    "relevance": 0.902
  },
  {
    "codeTitle": "Configuring On-Request Processing in Eleventy Dev Server",
    "codeDescription": "Demonstrates how to use the onRequest option to set up request-time processing for specific URL patterns in the Eleventy Dev Server.",
    "codeLanguage": "javascript",
    "codeTokens": 204,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/dev-server.md#2025-04-05_snippet_2",
    "pageTitle": "Configuring Eleventy Dev Server",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\televentyConfig.setServerOptions({\n\t\tonRequest: {\n\t\t\t\"/\": function({ url }) {\n\t\t\t\t// will fallback to serve static files if we return any falsy value other than \"\"\n\t\t\t},\n\t\t\t\"/empty\": function({ url }) {\n\t\t\t\t// render an empty page\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\t\"/foo/:name\": function({ url, pattern, patternGroups }) {\n\t\t\t\t// patternGroups will include URLPattern matches e.g. /foo/zach => { name: \"zach\" }\n\t\t\t\treturn {\n\t\t\t\t\tstatus: 200,\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\"Content-Type\": \"text/html\",\n\t\t\t\t\t},\n\t\t\t\t\tbody: \"Hello.\"\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t});\n};"
      }
    ],
    "relevance": 0.9
  },
  {
    "codeTitle": "Using @attributes in WebC Components",
    "codeDescription": "Shows how to use the @attributes directive to render all attributes from the host component to the current node, simplifying attribute passing.",
    "codeLanguage": "html",
    "codeTokens": 68,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_19",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<!-- will render all attributes including `src` and `alt` from the host component -->\n<img @attributes class=\"avatar-image\" />"
      }
    ],
    "relevance": 0.9
  },
  {
    "codeTitle": "Filtering Collections with Array.filter() in Eleventy",
    "codeDescription": "Demonstrates how to use Array.filter() to create custom filtered collections. This example filters content based on the existence of a custom data key in the item's data.",
    "codeLanguage": "javascript",
    "codeTokens": 125,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/collections-api.md#2025-04-05_snippet_2",
    "pageTitle": "Eleventy Collections API Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\t// Filter using `Array.filter`\n\televentyConfig.addCollection(\"keyMustExistInData\", function (collectionsApi) {\n\t\treturn collectionsApi.getAll().filter(function (item) {\n\t\t\t// Side-step tags and do your own filtering\n\t\t\treturn \"myCustomDataKey\" in item.data;\n\t\t});\n\t});\n};"
      }
    ],
    "relevance": 0.9
  },
  {
    "codeTitle": "Using @text Prop in WebC Components",
    "codeDescription": "Shows how to use the @text prop to override tag content with escaped text, ensuring that HTML is displayed as text rather than being rendered.",
    "codeLanguage": "html",
    "codeTokens": 87,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_24",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<p @text=\"dataProperty\"></p>\n\n<!-- When dataProperty contains `<p>This is text</p>`, this renders: -->\n<p>&lt;p&gt;This is text&lt;/p&gt;</p>"
      }
    ],
    "relevance": 0.899
  },
  {
    "codeTitle": "Retrieving Branch Children in Nunjucks for Eleventy Navigation",
    "codeDescription": "Shows how to retrieve the children of a specific navigation key using the eleventyNavigation filter in Nunjucks templates.",
    "codeLanguage": "jinja2",
    "codeTokens": 62,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_19",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "jinja2",
        "code": "{% set navPages = collections.all | eleventyNavigation(\"Mammals\") %}\n{{ navPages | dump | safe }}"
      }
    ],
    "relevance": 0.898
  },
  {
    "codeTitle": "Configuring JavaScript Dependency Watching",
    "codeDescription": "Shows how to disable automatic JavaScript dependency watching for template and data files.",
    "codeLanguage": "javascript",
    "codeTokens": 54,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/watch-serve.md#2025-04-05_snippet_3",
    "pageTitle": "Eleventy Development Server Configuration Guide",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\t// Enabled by default\n\televentyConfig.setWatchJavaScriptDependencies(false);\n};"
      }
    ],
    "relevance": 0.898
  },
  {
    "codeTitle": "Combining Advanced Options for Screenshot Generation",
    "codeDescription": "Illustrates how to combine multiple advanced options when generating screenshots, such as custom wait conditions and timeout settings.",
    "codeLanguage": "plaintext",
    "codeTokens": 46,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/services/screenshots.md#2025-04-05_snippet_4",
    "pageTitle": "Screenshots API Documentation for Eleventy",
    "codeList": [
      {
        "language": "plaintext",
        "code": "/:url/_wait:0_timeout:2/"
      }
    ],
    "relevance": 0.898
  },
  {
    "codeTitle": "Cascading Asset Buckets Example",
    "codeDescription": "Shows how webc:bucket cascades to child components, affecting asset organization throughout the component tree.",
    "codeLanguage": "html",
    "codeTokens": 111,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_46",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<!-- has an implied webc:bucket=\"default\" -->\n<my-component></my-component>\n\n<div webc:bucket=\"defer\">\n\t<!-- each of these have webc:bucket=\"defer\" -->\n\t<!-- (including any nested components inside, too) -->\n\t<footnote-references></footnote-references>\n\n\t<my-footer></my-footer>\n</div>"
      }
    ],
    "relevance": 0.896
  },
  {
    "codeTitle": "Running Eleventy with TypeScript Support",
    "codeDescription": "Command line instruction to run Eleventy with TypeScript file format support.",
    "codeLanguage": "bash",
    "codeTokens": 47,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/typescript.md#2025-04-05_snippet_1",
    "pageTitle": "TypeScript Configuration Guide for Eleventy",
    "codeList": [
      {
        "language": "bash",
        "code": "npx @11ty/eleventy --formats=11ty.ts,11ty.tsx"
      }
    ],
    "relevance": 0.896
  },
  {
    "codeTitle": "Creating Breadcrumbs in Nunjucks for Eleventy Navigation",
    "codeDescription": "Shows how to create breadcrumb navigation using the eleventyNavigationBreadcrumb filter in Nunjucks templates.",
    "codeLanguage": "jinja2",
    "codeTokens": 58,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_22",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "jinja2",
        "code": "{% set navPages = collections.all | eleventyNavigationBreadcrumb(\"Bats\") %}\n{{ navPages | dump | safe }}"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Implementing Liquid and Universal Filters in Eleventy Configuration",
    "codeDescription": "This snippet demonstrates how to add Liquid-specific filters and universal filters in the Eleventy configuration file. It includes examples of synchronous and asynchronous filter implementations.",
    "codeLanguage": "javascript",
    "codeTokens": 148,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/liquid.md#2025-04-05_snippet_3",
    "pageTitle": "Liquid Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n  // Liquid Filter\n  eleventyConfig.addLiquidFilter(\"myLiquidFilter\", function(myVariable) { /* … */ });\n\n  // Async-friendly too\n  eleventyConfig.addLiquidFilter(\"myAsyncLiquidFilter\", async function(myVariable) { /* … */ });\n\n  // Universal filters (Adds to Liquid, Nunjucks, 11ty.js)\n  eleventyConfig.addFilter(\"myFilter\", function(myVariable) { /* … */ });\n};"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Raw Content Handling with webc:raw",
    "codeDescription": "Demonstrates the use of webc:raw to opt-out of WebC template processing for child content.",
    "codeLanguage": "html",
    "codeTokens": 75,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_35",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<template webc:raw>\n\tLeave me out of this.\n\t<style>\n\t\tp {\n\t\t\tcolor: rebeccapurple;\n\t\t}\n\t</style>\n</template>"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Eleventy Watch and Serve Commands",
    "codeDescription": "Commands for development mode with auto-refresh capabilities, including web server configuration and file watching options.",
    "codeLanguage": "bash",
    "codeTokens": 121,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/usage.md#2025-04-05_snippet_2",
    "pageTitle": "Eleventy Command Line Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "# Add a web server to apply changes and\n# refresh automatically. We'll also --watch for you.\nnpx @11ty/eleventy --serve\n\n# Change the web server's port—use localhost:8081\nnpx @11ty/eleventy --serve --port=8081\n\n# Watch and re-run when files change, without the web server.\nnpx @11ty/eleventy --watch"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Creating RSS Feed Template in Eleventy",
    "codeDescription": "This snippet shows how to create an RSS feed template using Eleventy. It includes JSON metadata configuration and the XML structure for the RSS feed. The template iterates through blog posts and generates feed items.",
    "codeLanguage": "html",
    "codeTokens": 428,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/rss.md#2025-04-05_snippet_5",
    "pageTitle": "Configuring RSS Plugin for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "---json\n{\n  \"permalink\": \"feed.xml\",\n  \"eleventyExcludeFromCollections\": true,\n  \"metadata\": {\n    \"title\": \"My Blog about Boats\",\n    \"description\": \"I am writing about my experiences as a naval navel-gazer.\",\n    \"language\": \"en\",\n    \"base\": \"https://example.com/\",\n    \"author\": {\n      \"name\": \"Boaty McBoatFace\"\n    }\n  }\n}\n---\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<rss version=\"2.0\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xml:base=\"{{ metadata.base | addPathPrefixToFullUrl }}\" xmlns:atom=\"http://www.w3.org/2005/Atom\">\n  <channel>\n    <title>{{ metadata.title }}</title>\n    <link>{{ metadata.base | addPathPrefixToFullUrl }}</link>\n    <atom:link href=\"{{ permalink | htmlBaseUrl(metadata.base) }}\" rel=\"self\" type=\"application/rss+xml\" />\n    <description>{{ metadata.description }}</description>\n    <language>{{ metadata.language or page.lang }}</language>\n    {%- for post in collections.posts | reverse %}\n    {%- set absolutePostUrl = post.url | htmlBaseUrl(metadata.base) %}\n    <item>\n      <title>{{ post.data.title }}</title>\n      <link>{{ absolutePostUrl }}</link>\n      <description>{{ post.content | renderTransforms(post.data.page, metadata.base) }}</description>\n      <pubDate>{{ post.date | dateToRfc822 }}</pubDate>\n      <dc:creator>{{ metadata.author.name }}</dc:creator>\n      <guid>{{ absolutePostUrl }}</guid>\n    </item>\n    {%- endfor %}\n  </channel>\n</rss>"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Configuring Watch Target Reset Options",
    "codeDescription": "Shows how to configure watch targets with reset options to force configuration reloading when specific files change.",
    "codeLanguage": "javascript",
    "codeTokens": 72,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/watch-serve.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Development Server Configuration Guide",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\t// You probably don't need this\n\televentyConfig.addWatchTarget(\"./_config/**\", {\n\t\tresetConfig: true\n\t});\n};"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Retrieving Eleventy Output as JSON",
    "codeDescription": "This code snippet shows how to use Eleventy's API to process input files and retrieve the output as JSON without writing to the file system. It uses the toJSON() method.",
    "codeLanguage": "javascript",
    "codeTokens": 117,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/programmatic.md#2025-04-05_snippet_1",
    "pageTitle": "Programmatic API for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "const Eleventy = require(\"@11ty/eleventy\");\n\nasync function elev() {\n  let elev = new Eleventy();\n\n  try {\n    let json = await elev.toJSON();\n    console.log( json );\n  } catch (e) {\n    console.log( \"Error building:\", e );\n  }\n}\n\nelev();"
      }
    ],
    "relevance": 0.894
  },
  {
    "codeTitle": "Using webc:root for Attribute Manipulation",
    "codeDescription": "Shows how to use webc:root to add attributes to the outer host component and override the host component tag.",
    "codeLanguage": "html",
    "codeTokens": 49,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_13",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<my-component class=\"sr-only\"></my-component>"
      },
      {
        "language": "html",
        "code": "<template webc:root class=\"another-class\"> Some component content </template>"
      },
      {
        "language": "html",
        "code": "<button webc:root=\"override\">Some component content</button>\n<style>\n\t/* Hi */\n</style>"
      }
    ],
    "relevance": 0.893
  },
  {
    "codeTitle": "Rendering Bundles in HTML",
    "codeDescription": "Examples of rendering CSS bundles directly in HTML using the getBundle shortcode.",
    "codeLanguage": "html",
    "codeTokens": 92,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/bundle.md#2025-04-05_snippet_3",
    "pageTitle": "Bundle Plugin for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<!-- Use this *anywhere*: a layout file, content template, etc -->\n<style>{% getBundle \"css\" %}</style>\n\n<!--\nYou can add more code to the bundle after calling\ngetBundle and it *will* be included.\n-->\n{% css %}\n* { color: orange; }\n{% endcss %}"
      }
    ],
    "relevance": 0.892
  },
  {
    "codeTitle": "Basic Passthrough Copy Configuration in Eleventy",
    "codeDescription": "Demonstrates basic file and directory copying configuration using addPassthroughCopy. Shows how to copy image directories, CSS font directories, and jpg files using glob patterns.",
    "codeLanguage": "javascript",
    "codeTokens": 160,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/copy.md#2025-04-05_snippet_0",
    "pageTitle": "Passthrough File Copy in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\t// Output directory: _site\n\n\t// Copy `img/` to `_site/img`\n\televentyConfig.addPassthroughCopy(\"img\");\n\n\t// Copy `css/fonts/` to `_site/css/fonts`\n\t// Keeps the same directory structure.\n\televentyConfig.addPassthroughCopy(\"css/fonts\");\n\n\t// Copy any .jpg file to `_site`, via Glob pattern\n\t// Keeps the same directory structure.\n\televentyConfig.addPassthroughCopy(\"**/*.jpg\");\n};"
      }
    ],
    "relevance": 0.892
  },
  {
    "codeTitle": "Using slugify Filter with YAML Frontmatter in 11ty",
    "codeDescription": "Demonstrates how to use the slugify filter in YAML frontmatter to generate URL-friendly permalinks from page titles. The example shows converting 'My Title' to '/my-title/' in the permalink.",
    "codeLanguage": "yaml",
    "codeTokens": 80,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/filters/slugify.md#2025-04-05_snippet_0",
    "pageTitle": "Using slugify Filter in 11ty",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\ntitle: \"My Title\"\npermalink: \"/{{ title | slugify }}/\"\n---\nOutputs to `/my-title/`."
      }
    ],
    "relevance": 0.892
  },
  {
    "codeTitle": "Basic Data Export in JavaScript for Eleventy",
    "codeDescription": "Shows how to export a simple array of data from a JavaScript file for use in Eleventy.",
    "codeLanguage": "javascript",
    "codeTokens": 43,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-js.md#2025-04-05_snippet_0",
    "pageTitle": "JavaScript Data Files in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default [\"user1\", \"user2\"];"
      }
    ],
    "relevance": 0.89
  },
  {
    "codeTitle": "Full Bundle Configuration Options",
    "codeDescription": "Detailed configuration options for the addBundle method, including output file extension, shortcode name, and transforms.",
    "codeLanguage": "javascript",
    "codeTokens": 232,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/bundle.md#2025-04-05_snippet_1",
    "pageTitle": "Bundle Plugin for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\televentyConfig.addBundle(\"css\", {\n\t\t// File extension used for bundle file output, defaults to bundle name\n\t\toutputFileExtension: \"css\",\n\n\t\t// Name of shortcode for use in templates, defaults to bundle name\n\t\tshortcodeName: \"css\",\n\t\t// shortcodeName: false, // disable this feature.\n\n\t\t// Optional subfolder (relative to output directory) files will write to\n\t\ttoFileDirectory: \"\",\n\n\t\t// Modify bundle content\n\t\ttransforms: [],\n\n\t\t// If two identical code blocks exist in non-default buckets, they'll be hoisted to the first bucket in common.\n\t\thoist: true,\n\n\t\t// In 11ty.js templates, having a named export of `bundle` will populate your bundles.\n\t\tbundleExportKey: \"bundle\",\n\t\t// bundleExportKey: false, // disable this feature.\n\t});\n};"
      }
    ],
    "relevance": 0.89
  },
  {
    "codeTitle": "Dynamic Attributes and Props in WebC - Component Implementation",
    "codeDescription": "Demonstrates how to use dynamic attributes within a component to reference values passed from the parent component.",
    "codeLanguage": "html",
    "codeTokens": 52,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_18",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<img :src=\"src\" :alt=\"alt\" class=\"avatar-image\" />"
      }
    ],
    "relevance": 0.89
  },
  {
    "codeTitle": "Ordering Second Navigation Item",
    "codeDescription": "YAML front matter for ordering a second navigation item to appear after the first one.",
    "codeLanguage": "yaml",
    "codeTokens": 54,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_7",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\neleventyNavigation:\n  key: Bats\n  parent: Mammals\n  order: 2\n---"
      }
    ],
    "relevance": 0.89
  },
  {
    "codeTitle": "Adding CSS to a Bundle in Markdown",
    "codeDescription": "Example of adding CSS to a bundle within a Markdown file using Liquid syntax.",
    "codeLanguage": "liquid",
    "codeTokens": 78,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/bundle.md#2025-04-05_snippet_2",
    "pageTitle": "Bundle Plugin for Eleventy",
    "codeList": [
      {
        "language": "liquid",
        "code": "# My Blog Post\n\nThis is some content, I am writing markup.\n\n{% css %}\nem { font-style: italic; }\n{% endcss %}\n\n## More Markdown\n\n{% css %}\nstrong { font-weight: bold; }\n{% endcss %}"
      }
    ],
    "relevance": 0.888
  },
  {
    "codeTitle": "Exporting String Content in JavaScript Templates (ESM)",
    "codeDescription": "A simple example of returning a string value from a JavaScript template using ES modules export syntax. This represents the most basic JavaScript template in Eleventy.",
    "codeLanguage": "javascript",
    "codeTokens": 52,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/javascript.md#2025-04-05_snippet_0",
    "pageTitle": "JavaScript Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default \"<p>Zach</p>\";"
      }
    ],
    "relevance": 0.888
  },
  {
    "codeTitle": "Version Checking in an Eleventy Plugin",
    "codeDescription": "Shows how to use the versionCheck method to ensure compatibility with specific versions of Eleventy. This example checks if the Eleventy version is 3.0 or newer.",
    "codeLanguage": "javascript",
    "codeTokens": 135,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/create-plugin.md#2025-04-05_snippet_13",
    "pageTitle": "Creating and Using Eleventy Plugins",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig, pluginOptions) {\n\ttry {\n\t\t// Emit a warning message if the application is not using Eleventy 3.0 or newer (including prereleases).\n\t\televentyConfig.versionCheck(\">=3.0\");\n\t} catch(e) {\n\t\tconsole.log( `[my-test-plugin] WARN Eleventy plugin compatibility: ${e.message}` );\n\t}\n};"
      }
    ],
    "relevance": 0.888
  },
  {
    "codeTitle": "Passing Data to renderFile Shortcode in Nunjucks",
    "codeDescription": "This snippet shows how to pass additional data to the renderFile shortcode when rendering an external template file.",
    "codeLanguage": "nunjucks",
    "codeTokens": 54,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/render.md#2025-04-05_snippet_4",
    "pageTitle": "Render Plugin Documentation for Eleventy",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{% renderFile \"./src/_includes/blogpost.md\", {title: \"My Blog Post\"} %}"
      }
    ],
    "relevance": 0.887
  },
  {
    "codeTitle": "Filtering Sorted Collections by File Type in Eleventy",
    "codeDescription": "Demonstrates filtering sorted collections by file extension. This example creates a collection containing only Markdown files by examining the input file path extensions.",
    "codeLanguage": "javascript",
    "codeTokens": 124,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/collections-api.md#2025-04-05_snippet_6",
    "pageTitle": "Eleventy Collections API Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\t// Filter using `Array.filter`\n\televentyConfig.addCollection(\"onlyMarkdown\", function (collectionsApi) {\n\t\treturn collectionsApi.getAllSorted().filter(function (item) {\n\t\t\t// Only return content that was originally a markdown file\n\t\t\tlet extension = item.inputPath.split(\".\").pop();\n\t\t\treturn extension === \"md\";\n\t\t});\n\t});\n};"
      }
    ],
    "relevance": 0.886
  },
  {
    "codeTitle": "Fetching Google Fonts CSS with Custom User Agent",
    "codeDescription": "Example of using Eleventy Fetch to cache Google Fonts CSS, demonstrating the use of fetchOptions to set a custom user agent header.",
    "codeLanguage": "javascript",
    "codeTokens": 167,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/fetch.md#2025-04-05_snippet_4",
    "pageTitle": "Eleventy Fetch Plugin Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "import Fetch from \"@11ty/eleventy-fetch\";\n\nlet url = \"https://fonts.googleapis.com/css?family=Roboto+Mono:400&display=swap\";\nlet fontCss = await Fetch(url, {\n\tduration: \"1d\",\n\ttype: \"text\",\n\tfetchOptions: {\n\t\theaders: {\n\t\t\t// lol\n\t\t\t\"user-agent\":\n\t\t\t\t\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36\",\n\t\t},\n\t},\n});"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Using URL Filter with Liquid or Nunjucks Templates in Eleventy",
    "codeDescription": "Examples of how to use the 'url' filter in Liquid or Nunjucks templates to normalize paths. The filter works with both string literals and variables to ensure paths are properly prefixed according to the site's configuration.",
    "codeLanguage": "html",
    "codeTokens": 98,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/filters/url.md#2025-04-05_snippet_0",
    "pageTitle": "URL Filter in Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<a href=\"{{ '/myDir/' | url }}\">Liquid or Nunjucks Link (from string)</a>\n<a href=\"{{ post.url | url }}\">Liquid or Nunjucks Link (from variable)</a>"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Image Component with Attribute Rendering",
    "codeDescription": "Shows an img component definition that merges and re-uses all host component attributes correctly using webc.renderAttributes.",
    "codeLanguage": "html",
    "codeTokens": 69,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_34",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<script webc:type=\"js\" webc:root=\"override\">\n\t`<img ${webc.renderAttributes(webc.attributes)}>`;\n</script>"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Using Filters in JavaScript Templates (ESM)",
    "codeDescription": "Illustrates how to use a custom 'makeUppercase' filter in a JavaScript template (ESM format) to transform the 'name' variable.",
    "codeLanguage": "js",
    "codeTokens": 69,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/filters.md#2025-04-05_snippet_2",
    "pageTitle": "Eleventy Template Filters Documentation",
    "codeList": [
      {
        "language": "js",
        "code": "export default function({name}) {\n  return `<h1>${this.makeUppercase(name)}</h1>`;\n};"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Generating JSON Feed Template in Eleventy",
    "codeDescription": "This snippet illustrates how to create a JSON feed template using Eleventy. It includes JSON metadata configuration and the structure for the JSON feed. The template iterates through blog posts and generates feed items in JSON format.",
    "codeLanguage": "json",
    "codeTokens": 403,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/rss.md#2025-04-05_snippet_6",
    "pageTitle": "Configuring RSS Plugin for Eleventy",
    "codeList": [
      {
        "language": "json",
        "code": "---json\n{\n  \"permalink\": \"feed.json\",\n  \"eleventyExcludeFromCollections\": true,\n  \"metadata\": {\n    \"title\": \"My Blog about Boats\",\n    \"description\": \"I am writing about my experiences as a naval navel-gazer.\",\n    \"language\": \"en\",\n    \"base\": \"https://example.com/\",\n    \"author\": {\n      \"name\": \"Boaty McBoatFace\"\n    }\n  }\n}\n---\n{\n  \"version\": \"https://jsonfeed.org/version/1.1\",\n  \"title\": \"{{ metadata.title }}\",\n  \"language\": \"{{ metadata.language or page.lang }}\",\n  \"home_page_url\": \"{{ metadata.base | addPathPrefixToFullUrl }}\",\n  \"feed_url\": \"{{ permalink | htmlBaseUrl(metadata.base) }}\",\n  \"description\": \"{{ metadata.description }}\",\n  \"authors\": [\n    {\n      \"name\": \"{{ metadata.author.name }}\"\n    }\n  ],\n  \"items\": [\n    {%- for post in collections.posts | reverse %}\n    {%- set absolutePostUrl %}{{ post.url | htmlBaseUrl(metadata.base) }}{% endset %}\n    {\n      \"id\": \"{{ absolutePostUrl }}\",\n      \"url\": \"{{ absolutePostUrl }}\",\n      \"title\": \"{{ post.data.title }}\",\n      \"content_html\": {% if post.content %}{{ post.content | renderTransforms(post.data.page, metadata.base) | dump | safe }}{% else %}\"\"{% endif %},\n      \"date_published\": \"{{ post.date | dateToRfc3339 }}\"\n    }\n    {% if not loop.last %},{% endif %}\n    {%- endfor %}\n  ]\n}"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Plugin Transform Configuration",
    "codeDescription": "Demonstrates how to add transforms within an Eleventy plugin, showing the execution order when combined with regular transforms.",
    "codeLanguage": "javascript",
    "codeTokens": 86,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/transforms.md#2025-04-05_snippet_2",
    "pageTitle": "Eleventy Transforms Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "eleventyConfig.addPlugin(eleventyConfig => {\n\televentyConfig.addTransform(\"third\", () => {});\n});\neleventyConfig.addTransform(\"first\", () => {});\neleventyConfig.addTransform(\"second\", () => {});"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Eleventy Image Width Configuration Examples",
    "codeDescription": "Examples showing how to specify image widths using both string and array syntax in the WebC component.",
    "codeLanguage": "html",
    "codeTokens": 99,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image-webc.md#2025-04-05_snippet_2",
    "pageTitle": "Eleventy Image WebC Component Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<img webc:is=\"eleventy-image\" width=\"100, 200\" src=\"cat.jpg\" alt=\"photo of my tabby cat\">\n<img webc:is=\"eleventy-image\" :width=\"[100, 200]\" src=\"cat.jpg\" alt=\"photo of my tabby cat\">"
      }
    ],
    "relevance": 0.884
  },
  {
    "codeTitle": "Using Before Callback in Eleventy Pagination",
    "codeDescription": "Examples of using the before callback to modify pagination data before processing",
    "codeLanguage": "javascript",
    "codeTokens": 105,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/pagination.md#2025-04-05_snippet_5",
    "pageTitle": "Pagination in 11ty Static Site Generator",
    "codeList": [
      {
        "language": "javascript",
        "code": "---js\n{\n  pagination: {\n    data: \"testdata\",\n    size: 2,\n    before: function(paginationData, fullData) {\n      return paginationData.map(entry => `${entry} with a suffix`);\n    }\n  },\n  testdata: [\n    \"item1\",\n    \"item2\",\n    \"item3\",\n    \"item4\"\n  ]\n}\n---"
      }
    ],
    "relevance": 0.884
  },
  {
    "codeTitle": "Basic <is-land> Implementation",
    "codeDescription": "Simplest usage of the <is-land> element that creates an island in your HTML document without any conditions.",
    "codeLanguage": "html",
    "codeTokens": 55,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/is-land.md#2025-04-05_snippet_2",
    "pageTitle": "Using <is-land> for Islands Architecture in 11ty",
    "codeList": [
      {
        "language": "html",
        "code": "<is-land>This is an island.</is-land>"
      }
    ],
    "relevance": 0.882
  },
  {
    "codeTitle": "Creating Lazy-Loaded Island Component in HTML",
    "codeDescription": "Illustrates the use of the is-land component for lazy-loading content based on visibility and media queries, including CSS and JavaScript dependencies.",
    "codeLanguage": "html",
    "codeTokens": 126,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/performance.md#2025-04-05_snippet_2",
    "pageTitle": "Performance Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<is-land on:visible on:media=\"(prefers-reduced-motion: no-preference)\">\n\t<template data-island=\"once\"><link rel=\"stylesheet\" href=\"/css/throbber.css\"><script src=\"/js/throbber.js\"></script></template>\n\t{% renderTemplate \"webc\" %}<build-comparison @show-all></build-comparison>{% endrenderTemplate %}\n</is-land>"
      }
    ],
    "relevance": 0.882
  },
  {
    "codeTitle": "Displaying All Performance Measurements in Eleventy (macOS/Linux)",
    "codeDescription": "Command to show all performance measurements in Eleventy for macOS or Linux systems. This uses the DEBUG environment variable to display Eleventy benchmark data.",
    "codeLanguage": "bash",
    "codeTokens": 61,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/debug-performance.md#2025-04-05_snippet_0",
    "pageTitle": "Analyzing Build Performance in Eleventy",
    "codeList": [
      {
        "language": "bash",
        "code": "DEBUG=Eleventy:Benchmark* npx @11ty/eleventy"
      }
    ],
    "relevance": 0.882
  },
  {
    "codeTitle": "Adding Alternate Language Links for SEO",
    "codeDescription": "Shows how to implement alternate language link tags in the HTML head for SEO, using the locale_links filter and page.lang information.",
    "codeLanguage": "njk",
    "codeTokens": 114,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/i18n.md#2025-04-05_snippet_5",
    "pageTitle": "Eleventy Internationalization Plugin (i18n) Guide",
    "codeList": [
      {
        "language": "njk",
        "code": "{% raw %}\n<link rel=\"alternate\" hreflang=\"{{ lang }}\" href=\"https://www.11ty.dev{{ page.url }}\">\n{%- for link in page.url | locale_links %}\n<link rel=\"alternate\" hreflang=\"{{ link.lang }}\" href=\"https://www.11ty.dev{{ link.url }}\">\n{%- endfor %}\n{% endraw %}"
      }
    ],
    "relevance": 0.881
  },
  {
    "codeTitle": "Using log filter in Nunjucks templates",
    "codeDescription": "Demonstrates how to use the log filter to output a value to the console in Nunjucks templating language. This is equivalent to console.log in JavaScript.",
    "codeLanguage": "jinja2",
    "codeTokens": 53,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/filters/log.md#2025-04-05_snippet_1",
    "pageTitle": "Log Universal Filter in 11ty",
    "codeList": [
      {
        "language": "jinja2",
        "code": "{{ \"My Title\" | log }}"
      }
    ],
    "relevance": 0.88
  },
  {
    "codeTitle": "Eleventy Image Format Configuration Examples",
    "codeDescription": "Examples demonstrating how to override default image formats using both string and array syntax in the WebC component.",
    "codeLanguage": "html",
    "codeTokens": 103,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image-webc.md#2025-04-05_snippet_3",
    "pageTitle": "Eleventy Image WebC Component Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<img webc:is=\"eleventy-image\" formats=\"avif, png\" src=\"cat.jpg\" alt=\"photo of my tabby cat\">\n<img webc:is=\"eleventy-image\" :formats=\"['avif', 'png']\" src=\"cat.jpg\" alt=\"photo of my tabby cat\">"
      }
    ],
    "relevance": 0.88
  },
  {
    "codeTitle": "Configuring Custom Shortcode in JavaScript",
    "codeDescription": "Example of adding a custom shortcode to Eleventy configuration, with a warning about using reverse() on collections.",
    "codeLanguage": "javascript",
    "codeTokens": 76,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/collections.md#2025-04-05_snippet_5",
    "pageTitle": "Using Tags for Collections in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\televentyConfig.addShortcode(\"myShortcode\", function (aCollection){\n\t  // WARNING\n\t  aCollection.reverse();\n\t})\n};"
      }
    ],
    "relevance": 0.88
  },
  {
    "codeTitle": "Lit Component for <is-land>",
    "codeDescription": "Example Lit component definition that creates a custom element to be used with <is-land>, showcasing properties and rendering methods.",
    "codeLanguage": "js",
    "codeTokens": 135,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/is-land.md#2025-04-05_snippet_16",
    "pageTitle": "Using <is-land> for Islands Architecture in 11ty",
    "codeList": [
      {
        "language": "js",
        "code": "import {\n\thtml,\n\tcss,\n\tLitElement,\n} from \"https://cdn.jsdelivr.net/gh/lit/dist@2/core/lit-core.min.js\";\n\ncustomElements.define(\n\t\"lit-component\",\n\tclass extends LitElement {\n\t\tstatic properties = {\n\t\t\tname: { type: String },\n\t\t};\n\n\t\trender() {\n\t\t\treturn html`<p>Hello, ${this.name || \"Stranger\"}!</p>`;\n\t\t}\n\t}\n);"
      }
    ],
    "relevance": 0.878
  },
  {
    "codeTitle": "Alpine.js Integration with <is-land>",
    "codeDescription": "Example showing how to use Alpine.js with <is-land> by simply importing the library when the island's conditions are met.",
    "codeLanguage": "html",
    "codeTokens": 131,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/is-land.md#2025-04-05_snippet_17",
    "pageTitle": "Using <is-land> for Islands Architecture in 11ty",
    "codeList": [
      {
        "language": "html",
        "code": "<is-land on:visible import=\"https://unpkg.com/alpinejs\">\n\t<div x-data=\"{ count: 0 }\">\n\t\tHello from Alpine.js!\n\n\t\t<button @click=\"count++\">⬆️</button> <button @click=\"count--\">⬇️</button>\n\t\t<span x-text=\"count\"></span>\n\t</div>\n</is-land>"
      }
    ],
    "relevance": 0.878
  },
  {
    "codeTitle": "Configuring Directory Output Plugin Options in Eleventy",
    "codeDescription": "This snippet demonstrates how to configure options for the Directory Output plugin, including customizing columns and setting a warning threshold for file size.",
    "codeLanguage": "javascript",
    "codeTokens": 159,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/directory-output.md#2025-04-05_snippet_1",
    "pageTitle": "Directory Output Plugin for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import dirOutputPlugin from \"@11ty/eleventy-plugin-directory-output\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.setQuietMode(true);\n\televentyConfig.addPlugin(dirOutputPlugin, {\n\t\t// Customize columns\n\t\tcolumns: {\n\t\t\tfilesize: true, // Use `false` to disable\n\t\t\tbenchmark: true, // Use `false` to disable\n\t\t},\n\n\t\t// Will show in yellow if greater than this number of bytes\n\t\twarningFileSize: 400 * 1000,\n\t});\n};"
      }
    ],
    "relevance": 0.878
  },
  {
    "codeTitle": "Executing Incremental Builds in Eleventy",
    "codeDescription": "Command to run Eleventy with incremental builds for specific files. Introduced in version 3.0.0-alpha.14.",
    "codeLanguage": "bash",
    "codeTokens": 54,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/usage.md#2025-04-05_snippet_7",
    "pageTitle": "Eleventy Command Line Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "npx @11ty/eleventy --incremental=myfile.md"
      }
    ],
    "relevance": 0.878
  },
  {
    "codeTitle": "Configuring Virtual Template RSS Feed in Eleventy",
    "codeDescription": "This snippet demonstrates how to set up a virtual template RSS feed using the feedPlugin. It includes options for feed type, output path, collection filtering, and metadata.",
    "codeLanguage": "javascript",
    "codeTokens": 213,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/rss.md#2025-04-05_snippet_0",
    "pageTitle": "Configuring RSS Plugin for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import { feedPlugin } from \"@11ty/eleventy-plugin-rss\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addPlugin(feedPlugin, {\n\t\ttype: \"atom\", // or \"rss\", \"json\"\n\t\toutputPath: \"/feed.xml\",\n\t\tcollection: {\n\t\t\tname: \"posts\", // iterate over `collections.posts`\n\t\t\tlimit: 10,     // 0 means no limit\n\t\t},\n\t\tmetadata: {\n\t\t\tlanguage: \"en\",\n\t\t\ttitle: \"Blog Title\",\n\t\t\tsubtitle: \"This is a longer description about your blog.\",\n\t\t\tbase: \"https://example.com/\",\n\t\t\tauthor: {\n\t\t\t\tname: \"Your Name\",\n\t\t\t\temail: \"\", // Optional\n\t\t\t}\n\t\t}\n\t});\n};"
      }
    ],
    "relevance": 0.876
  },
  {
    "codeTitle": "GraphQL Integration in Eleventy",
    "codeDescription": "Demonstrates how to integrate GraphQL queries into Eleventy data files.",
    "codeLanguage": "javascript",
    "codeTokens": 116,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-js.md#2025-04-05_snippet_4",
    "pageTitle": "JavaScript Data Files in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import { graphql, buildSchema } from \"graphql\";\n\n// this could also be `async function`\nexport default function () {\n\t// if you want to `await` for other things here, use `async function`\n\tvar schema = buildSchema(`type Query {\n    hello: String\n  }`);\n\n\tvar root = {\n\t\thello: () => \"Hello world async!\",\n\t};\n\n\treturn graphql(schema, \"{ hello }\", root);\n};"
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "Conditional Loading with <is-land>",
    "codeDescription": "Using <is-land> with various loading conditions to control hydration. Demonstrates nesting islands which inherit parent loading conditions.",
    "codeLanguage": "html",
    "codeTokens": 108,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/is-land.md#2025-04-05_snippet_3",
    "pageTitle": "Using <is-land> for Islands Architecture in 11ty",
    "codeList": [
      {
        "language": "html",
        "code": "<is-land on:visible on:idle>\n\t<!-- your HTML here -->\n\n\t<is-land on:media=\"(min-width: 64em)\">\n\t\t<!-- Islands can be nested -->\n\t\t<!-- Islands inherit all of their parents' loading conditions -->\n\t</is-land>\n</is-land>"
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "Implementing Minified JavaScript in HTML Template",
    "codeDescription": "Nunjucks template syntax showing how to capture JavaScript content and apply the minification filter before inline insertion into HTML.",
    "codeLanguage": "html",
    "codeTokens": 91,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/quicktips/inline-js.md#2025-04-05_snippet_2",
    "pageTitle": "Inline JavaScript Minification with 11ty",
    "codeList": [
      {
        "language": "html",
        "code": "<!-- capture the JS content as a Nunjucks variable -->\n{% set js %} {% include \"sample.js\" %} {% endset %}\n<!-- feed it through our jsmin filter to minify -->\n<script>\n{{ js | jsmin | safe }}\n</script>"
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "Setting Input Directory in Eleventy Configuration",
    "codeDescription": "Demonstrates how to set the input directory for Eleventy using the setInputDirectory method. This determines where Eleventy looks for template files.",
    "codeLanguage": "javascript",
    "codeTokens": 75,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/config.md#2025-04-05_snippet_1",
    "pageTitle": "Configuring Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\t// Order matters, put this at the top of your configuration file.\n  eleventyConfig.setInputDirectory(\"views\");\n};"
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "Rendering Navigation to HTML in Nunjucks",
    "codeDescription": "Nunjucks template code to render the navigation structure as HTML, including the 'safe' filter to prevent escaping.",
    "codeLanguage": "jinja2",
    "codeTokens": 53,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_10",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "jinja2",
        "code": "{{ collections.all | eleventyNavigation | eleventyNavigationToHtml | safe }}"
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "Configuring Eleventy Dev Server Options in JavaScript",
    "codeDescription": "Demonstrates how to use the setServerOptions method to configure various aspects of the Eleventy Dev Server, including live reload, DOM diffing, port settings, and more.",
    "codeLanguage": "javascript",
    "codeTokens": 421,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/dev-server.md#2025-04-05_snippet_0",
    "pageTitle": "Configuring Eleventy Dev Server",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\televentyConfig.setServerOptions({\n\t\t// Default values are shown:\n\n\t\t// Whether the live reload snippet is used\n\t\tliveReload: true,\n\n\t\t// Whether DOM diffing updates are applied where possible instead of page reloads\n\t\tdomDiff: true,\n\n\t\t// The starting port number\n\t\t// Will increment up to (configurable) 10 times if a port is already in use.\n\t\tport: 8080,\n\n\t\t// Additional files to watch that will trigger server updates\n\t\t// Accepts an Array of file paths or globs (passed to `chokidar.watch`).\n\t\t// Works great with a separate bundler writing files to your output folder.\n\t\t// e.g. `watch: [\"_site/**/*.css\"]`\n\t\twatch: [],\n\n\t\t// Show local network IP addresses for device testing\n\t\tshowAllHosts: false,\n\n\t\t// Use a local key/certificate to opt-in to local HTTP/2 with https\n\t\thttps: {\n\t\t\t// key: \"./localhost.key\",\n\t\t\t// cert: \"./localhost.cert\",\n\t\t},\n\n\t\t// Change the default file encoding for reading/serving files\n\t\tencoding: \"utf-8\",\n\n\t\t// Show the dev server version number on the command line\n\t\tshowVersion: false,\n\n\t\t// Added in Dev Server 2.0+\n\t\t// The default file name to show when a directory is requested.\n\t\tindexFileName: \"index.html\",\n\n\t\t// Added in Dev Server 2.0+\n\t\t// An object mapping a URLPattern pathname to a callback function\n\t\t// for on-request processing (read more below).\n\t\tonRequest: {},\n\t});\n};"
      }
    ],
    "relevance": 0.874
  },
  {
    "codeTitle": "Shortcode Return Values in Markdown Files",
    "codeDescription": "Demonstrates the difference between returning plain markdown content versus HTML-wrapped content from paired shortcodes used in markdown files.",
    "codeLanguage": "javascript",
    "codeTokens": 93,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/markdown.md#2025-04-05_snippet_9",
    "pageTitle": "Using Markdown with Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "eleventyConfig.addPairedShortcode(\"myShortcode\", function (content) {\n\t// Method A: ✅ This works fine\n\treturn content;\n\n\t// Method B: ⚠️ Careful when wrapping with HTML\n\treturn `<div>${content}</div>`;\n});"
      }
    ],
    "relevance": 0.872
  },
  {
    "codeTitle": "Custom JavaScript and CSS Loading in <is-land>",
    "codeDescription": "Embedding custom JavaScript and CSS within an <is-land> template to load when the island's conditions are met.",
    "codeLanguage": "html",
    "codeTokens": 144,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/is-land.md#2025-04-05_snippet_6",
    "pageTitle": "Using <is-land> for Islands Architecture in 11ty",
    "codeList": [
      {
        "language": "html",
        "code": "<is-land on:visible>\n\t<template data-island>\n\t\t<!-- CSS -->\n\t\t<style>\n\t\t\t/* My custom CSS */\n\t\t</style>\n\t\t<link rel=\"stylesheet\" href=\"my-css-file.css\" />\n\n\t\t<!-- JS -->\n\t\t<script type=\"module\">\n\t\t\tconsole.log(\"Hydrating!\");\n\t\t</script>\n\t\t<script type=\"module\" src=\"my-js-file.js\"></script>\n\t</template>\n</is-land>"
      }
    ],
    "relevance": 0.872
  },
  {
    "codeTitle": "Enabling Quiet Mode in Eleventy Configuration",
    "codeDescription": "Demonstrates how to enable quiet mode in Eleventy to reduce console output. This setting disables the detailed processing output shown by default when Eleventy runs.",
    "codeLanguage": "javascript",
    "codeTokens": 64,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/config.md#2025-04-05_snippet_8",
    "pageTitle": "Configuring Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\televentyConfig.setQuietMode(true);\n};"
      }
    ],
    "relevance": 0.872
  },
  {
    "codeTitle": "Using eleventy.after Event in Eleventy Configuration",
    "codeDescription": "Shows how to implement an event handler for the eleventy.after event which runs after each Eleventy build completes. The handler receives build results and context information as arguments.",
    "codeLanguage": "javascript",
    "codeTokens": 122,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/events.md#2025-04-05_snippet_1",
    "pageTitle": "Configuration Events in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\t// Async-friendly in 1.0+\n\t// Arguments added in 2.0+\n\televentyConfig.on(\n\t\t\"eleventy.after\",\n\t\tasync ({ directories, results, runMode, outputMode }) => {\n\t\t\t// Run me after the build ends\n\t\t}\n\t);\n};"
      }
    ],
    "relevance": 0.872
  },
  {
    "codeTitle": "Creating a WebC Layout File in Eleventy",
    "codeDescription": "Example of a WebC layout file that uses the @raw attribute to render content. This layout provides the HTML structure for WebC templates that use it.",
    "codeLanguage": "html",
    "codeTokens": 94,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_39",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"utf-8\" />\n\t\t<title>WebC Example</title>\n\t</head>\n\t<body @raw=\"content\"></body>\n</html>"
      }
    ],
    "relevance": 0.87
  },
  {
    "codeTitle": "Using Image.generateHTML for Custom Image Markup",
    "codeDescription": "Creates an image shortcode that separates image generation from HTML markup creation, using Image.generateHTML to create the final markup from image metadata.",
    "codeLanguage": "javascript",
    "codeTokens": 127,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image-shortcodes.md#2025-04-05_snippet_3",
    "pageTitle": "Image Shortcodes in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import Image from \"@11ty/eleventy-img\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addShortcode(\"image\", async function (src, alt) {\n\t\tlet metadata = await Image(src, {\n\t\t\twidths: [600],\n\t\t\tformats: [\"jpeg\"],\n\t\t});\n\n\t\treturn Image.generateHTML(metadata, {\n\t\t\talt, // required\n\t\t});\n\t});\n};"
      }
    ],
    "relevance": 0.87
  },
  {
    "codeTitle": "Using addPathPrefixToFullUrl Filter",
    "codeDescription": "Example of using the addPathPrefixToFullUrl filter to force addition of path prefix to full URLs.",
    "codeLanguage": "nunjucks",
    "codeTokens": 50,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/html-base.md#2025-04-05_snippet_3",
    "pageTitle": "HTML Base Plugin Documentation for Eleventy",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{{ \"http://example.com/\" | addPathPrefixToFullUrl }}"
      }
    ],
    "relevance": 0.87
  },
  {
    "codeTitle": "Styling Hydrated <is-land> Elements",
    "codeDescription": "CSS example showing how to style an <is-land> element once it has been hydrated, using the ready attribute.",
    "codeLanguage": "html",
    "codeTokens": 65,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/is-land.md#2025-04-05_snippet_7",
    "pageTitle": "Using <is-land> for Islands Architecture in 11ty",
    "codeList": [
      {
        "language": "html",
        "code": "<style>\n\tis-land[ready] {\n\t\tbackground-color: lightgreen;\n\t}\n</style>"
      }
    ],
    "relevance": 0.869
  },
  {
    "codeTitle": "Example of Markdown Indented Code Block",
    "codeDescription": "Demonstrates the syntax and HTML output of Markdown's indented code block feature, which is disabled by default in Eleventy 2.0+.",
    "codeLanguage": "markdown",
    "codeTokens": 51,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/markdown.md#2025-04-05_snippet_3",
    "pageTitle": "Using Markdown with Eleventy",
    "codeList": [
      {
        "language": "markdown",
        "code": "    a simple\n      indented code block"
      },
      {
        "language": "html",
        "code": "<pre><code>a simple\n  indented code block\n</code></pre>"
      }
    ],
    "relevance": 0.868
  },
  {
    "codeTitle": "Configuring Read Option in Eleventy Custom Template",
    "codeDescription": "This snippet demonstrates how to configure the read option for a custom template language in Eleventy. Setting it to false opts out of reading file contents from the file system.",
    "codeLanguage": "javascript",
    "codeTokens": 60,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/custom.md#2025-04-05_snippet_10",
    "pageTitle": "Custom Template Languages in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "\t// some configuration truncated …\n  read: false,"
      }
    ],
    "relevance": 0.868
  },
  {
    "codeTitle": "Using Render Plugin in Eleventy",
    "codeDescription": "Example of using the Render plugin's renderFile tag in Eleventy. This is mentioned as a potential area for future improvements in dependency tracking for incremental builds.",
    "codeLanguage": "liquid",
    "codeTokens": 50,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/usage-incremental.md#2025-04-05_snippet_2",
    "pageTitle": "Incremental Builds in Eleventy",
    "codeList": [
      {
        "language": "liquid",
        "code": "{% renderFile %}"
      }
    ],
    "relevance": 0.868
  },
  {
    "codeTitle": "Capturing and Minifying Multiple CSS Files in Eleventy Templates",
    "codeDescription": "An HTML template that captures CSS content from multiple files into a Nunjucks variable, then minifies it using a custom filter before embedding it in a style tag. This technique combines concatenation with minification.",
    "codeLanguage": "html",
    "codeTokens": 120,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/quicktips/concatenate.md#2025-04-05_snippet_1",
    "pageTitle": "Super Simple CSS Concatenation in Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<!-- capture the CSS content as a Nunjucks variable -->\n{% set css %}\n{% include \"components/header.css\" %}\n{% include \"components/footer.css\" %}\n{% endset %}\n<!-- feed it through our cssmin filter to minify -->\n<style>\n\t{{ css | cssmin | safe }}\n</style>"
      }
    ],
    "relevance": 0.866
  },
  {
    "codeTitle": "Default Export Plugin Import in CommonJS",
    "codeDescription": "Demonstrates how to import plugins that use default exports when using dynamic imports in CommonJS.",
    "codeLanguage": "javascript",
    "codeTokens": 70,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/cjs-esm.md#2025-04-05_snippet_2",
    "pageTitle": "CommonJS and ESM Module Systems in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "module.exports = async function (eleventyConfig) {\n\tconst { default: myPlugin } = await import(\"my-eleventy-plugin\");\n\t// …\n};"
      }
    ],
    "relevance": 0.866
  },
  {
    "codeTitle": "Re-enabling Indented Code Blocks in Eleventy 2.0+",
    "codeDescription": "Demonstrates how to re-enable the Indented Code Blocks feature in Eleventy 2.0 or newer using the amendLibrary API method.",
    "codeLanguage": "javascript",
    "codeTokens": 75,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/markdown.md#2025-04-05_snippet_4",
    "pageTitle": "Using Markdown with Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "module.exports = function (eleventyConfig) {\n\televentyConfig.amendLibrary(\"md\", (mdLib) => mdLib.enable(\"code\"));\n};"
      }
    ],
    "relevance": 0.865
  },
  {
    "codeTitle": "Displaying Error Callout Using Liquid Template in Markdown",
    "codeDescription": "This snippet uses Liquid templating to create a callout box with an error message. It informs users about the removal of the Global Data File Preprocessing feature in Eleventy 2.0 and suggests alternatives.",
    "codeLanguage": "liquid",
    "codeTokens": 168,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-preprocessing.md#2025-04-05_snippet_1",
    "pageTitle": "Global Data File Preprocessing in Eleventy",
    "codeList": [
      {
        "language": "liquid",
        "code": "{% callout \"error\" %}<strong>Feature Removal</strong>: This feature was removed in Eleventy 2.0. You can use <a href=\"/docs/data-js/\">JavaScript Data Files</a> or <a href=\"/docs/data-computed/\">Computed Data</a> instead. If you'd like to read about this feature, please go the <a href=\"https://v2.11ty.dev/docs/data-preprocessing/\">v2 documentation for Global Data File Preprocessing</a>.{% endcallout %}"
      }
    ],
    "relevance": 0.865
  },
  {
    "codeTitle": "Configuring Image Shortcode with HTML Transform Compatibility",
    "codeDescription": "Sets up an image shortcode that includes the eleventy:ignore attribute to prevent double-processing when used alongside the Image HTML Transform method.",
    "codeLanguage": "javascript",
    "codeTokens": 140,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image-shortcodes.md#2025-04-05_snippet_2",
    "pageTitle": "Image Shortcodes in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import Image from \"@11ty/eleventy-img\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addShortcode(\"image\", async function (src, alt) {\n\t\tlet html = await Image(src, {\n\t\t\treturnType: \"html\",\n\t\t\thtmlOptions: {\n\t\t\t\timgAttributes: {\n\t\t\t\t\talt, // required\n\t\t\t\t\t\"eleventy:ignore\": \"\"\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn html;\n\t});\n};"
      }
    ],
    "relevance": 0.865
  },
  {
    "codeTitle": "Using getCollectionItemIndex Filter",
    "codeDescription": "Shows how to get the 0-based numeric index of the current page in a collection using the getCollectionItemIndex filter. Supports both direct use and explicit page parameter.",
    "codeLanguage": "liquid",
    "codeTokens": 81,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/filters/collection-items.md#2025-04-05_snippet_2",
    "pageTitle": "Collection Item Navigation Filters in 11ty",
    "codeList": [
      {
        "language": "liquid",
        "code": "{% assign index = collections.posts | getCollectionItemIndex %}\n\nOr pass it in:\n{% assign index = collections.posts | getCollectionItemIndex: page %}"
      },
      {
        "language": "jinja2",
        "code": "{% set index = collections.posts | getCollectionItemIndex %}\n\nOr pass it in:\n{% set index = collections.posts | getCollectionItemIndex(page) %}"
      }
    ],
    "relevance": 0.865
  },
  {
    "codeTitle": "Configuring Includes Directory in Eleventy",
    "codeDescription": "Shows how to set a custom includes directory for Eleventy layouts, partials, and macros using the setIncludesDirectory method.",
    "codeLanguage": "javascript",
    "codeTokens": 85,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/config.md#2025-04-05_snippet_2",
    "pageTitle": "Configuring Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\t// Order matters, put this at the top of your configuration file.\n\t// This is relative to your input directory!\n  eleventyConfig.setIncludesDirectory(\"my_includes\");\n};"
      }
    ],
    "relevance": 0.865
  },
  {
    "codeTitle": "Overriding Permalink Compilation in Eleventy Custom Template",
    "codeDescription": "Demonstrates how to override the permalink compilation function in Eleventy's custom template configuration. This allows for custom permalink generation based on template data.",
    "codeLanguage": "javascript",
    "codeTokens": 111,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/custom.md#2025-04-05_snippet_14",
    "pageTitle": "Custom Template Languages in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "  // some configuration truncated …\n  compileOptions: {\n    permalink: function(contents, inputPath) {\n      return (data) => {\n        // Return a string to override: you'll want to use `data.page`\n        // Or `return;` (return undefined) to fallback to default behavior\n      }\n    }\n  },"
      }
    ],
    "relevance": 0.865
  },
  {
    "codeTitle": "Eleventy Format Selection Commands",
    "codeDescription": "Commands to specify which template formats Eleventy should process, including options to limit formats or disable processing entirely.",
    "codeLanguage": "bash",
    "codeTokens": 108,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/usage.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Command Line Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "# Use only a subset of template types\nnpx @11ty/eleventy --formats=md,html,ejs\n\n# Don't process any formats\nnpx @11ty/eleventy --formats=\n\n# Find out the most up-to-date list of commands (there are more)\nnpx @11ty/eleventy --help"
      }
    ],
    "relevance": 0.864
  },
  {
    "codeTitle": "Parsing Excerpts from Content in Eleventy",
    "codeDescription": "Example of how to parse excerpts from content in Eleventy using custom front matter options. This snippet shows how to define an excerpt separator and use it in markdown content.",
    "codeLanguage": "markdown",
    "codeTokens": 83,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-frontmatter-customize.md#2025-04-05_snippet_1",
    "pageTitle": "Custom Front Matter Options in Eleventy",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\ntitle: My page title\n---\n\nThis is the start of my content and this will be shown as the excerpt.\n\n<!-- excerpt -->\n\nThis is a continuation of my content…"
      }
    ],
    "relevance": 0.863
  },
  {
    "codeTitle": "Configuring Remote Image Caching Options in 11ty",
    "codeDescription": "Configuration options for caching remote images using the eleventy-fetch functionality. Includes settings for cache duration, directory path, and URL query parameter handling.",
    "codeLanguage": "javascript",
    "codeTokens": 109,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image.md#2025-04-05_snippet_11",
    "pageTitle": "Eleventy Image Utility Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "{\n\t// …\n\tcacheOptions: {\n\t\t// if a remote image URL, this is the amount of time before it fetches a fresh copy\n\t\tduration: \"1d\",\n\n\t\t// project-relative path to the cache directory\n\t\tdirectory: \".cache\",\n\n\t\tremoveUrlQueryParams: false,\n\t},\n}"
      }
    ],
    "relevance": 0.862
  },
  {
    "codeTitle": "Implementing Incremental Match Logic in Eleventy Custom Template",
    "codeDescription": "Demonstrates the default implementation of the isIncrementalMatch function in Eleventy, which determines if a modified file is relevant to a known full template file during incremental builds.",
    "codeLanguage": "javascript",
    "codeTokens": 214,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/custom.md#2025-04-05_snippet_17",
    "pageTitle": "Custom Template Languages in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "\t// some configuration truncated …\n  // Called once for each template (matching this custom template's file extension) in your project.\n  isIncrementalMatch: function(modifiedFile) {\n    // is modifiedFile relevant to this.inputPath?\n    if (this.isFileRelevantToInputPath) {\n      // True if they are the same file\n      // Or if they are related by any `addDependencies` relationships\n      return true;\n    }\n\n    // If `modifiedFile` is not a full template (maybe an include or layout)\n    // and we have no record of any dependencies for this file, we re-render everything\n    if (!this.doesFileHaveDependencies && !this.isFullTemplate) {\n      return true;\n    }\n\n    // Skip it\n    return false;\n  },"
      }
    ],
    "relevance": 0.862
  },
  {
    "codeTitle": "Using InputPath to URL in Nunjucks",
    "codeDescription": "Demonstrates how to use the InputPath to URL plugin in Nunjucks templates. The file path will be converted to the correct output URL.",
    "codeLanguage": "jinja2",
    "codeTokens": 56,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/inputpath-to-url.md#2025-04-05_snippet_3",
    "pageTitle": "InputPath to URL Plugin for Eleventy",
    "codeList": [
      {
        "language": "jinja2",
        "code": "<a href=\"my-template.md\">Home</a>"
      }
    ],
    "relevance": 0.862
  },
  {
    "codeTitle": "Input Directory Handling in Eleventy Passthrough",
    "codeDescription": "Shows how input directories are handled when using passthrough copy, demonstrating how the input directory path is stripped from the output path.",
    "codeLanguage": "javascript",
    "codeTokens": 88,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/copy.md#2025-04-05_snippet_1",
    "pageTitle": "Passthrough File Copy in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\t// Input directory: src\n\t// Output directory: _site\n\n\t// The following copies to `_site/img`\n\televentyConfig.addPassthroughCopy(\"src/img\");\n};"
      }
    ],
    "relevance": 0.86
  },
  {
    "codeTitle": "Configuring Empty Results Page in Eleventy",
    "codeDescription": "Shows how to generate a pagination page even when the data set is empty using generatePageOnEmptyData option",
    "codeLanguage": "markdown",
    "codeTokens": 65,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/pagination.md#2025-04-05_snippet_2",
    "pageTitle": "Pagination in 11ty Static Site Generator",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\ntitle: Available Products\npagination:\n  data: collections.available\n  size: 6\n  generatePageOnEmptyData: true\n---"
      }
    ],
    "relevance": 0.86
  },
  {
    "codeTitle": "Configuring On-Demand Image Optimization with transformOnRequest",
    "codeDescription": "Implements a shortcode with the transformOnRequest feature that optimizes images only when requested during the development server run. This improves build performance by generating images on-demand.",
    "codeLanguage": "javascript",
    "codeTokens": 200,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image-shortcodes.md#2025-04-05_snippet_1",
    "pageTitle": "Image Shortcodes in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import Image from \"@11ty/eleventy-img\";\nimport { eleventyImageOnRequestDuringServePlugin } from \"@11ty/eleventy-img\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addShortcode(\"image\", async function (src, alt) {\n\t\tlet html = await Image(src, {\n\t\t\ttransformOnRequest: process.env.ELEVENTY_RUN_MODE === \"serve\",\n\t\t\treturnType: \"html\",\n\t\t\thtmlOptions: {\n\t\t\t\timgAttributes: {\n\t\t\t\t\talt, // required\n\t\t\t\t},\n\t\t\t}\n\t\t});\n\n\t\treturn html;\n\t});\n\n\t// Add the dev server middleware manually\n\televentyConfig.addPlugin(eleventyImageOnRequestDuringServePlugin);\n};"
      }
    ],
    "relevance": 0.86
  },
  {
    "codeTitle": "Filtering Collections by Tag in Eleventy",
    "codeDescription": "Shows how to retrieve content filtered by a specific tag using the getFilteredByTag() method. This creates a collection of posts by filtering content with the 'post' tag.",
    "codeLanguage": "javascript",
    "codeTokens": 98,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/collections-api.md#2025-04-05_snippet_7",
    "pageTitle": "Eleventy Collections API Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\t// Get only content that matches a tag\n\televentyConfig.addCollection(\"myPosts\", function (collectionsApi) {\n\t\treturn collectionsApi.getFilteredByTag(\"post\");\n\t});\n};"
      }
    ],
    "relevance": 0.858
  },
  {
    "codeTitle": "Allowing Missing Pages in Breadcrumbs for Eleventy Navigation (Nunjucks)",
    "codeDescription": "Shows how to allow missing pages in breadcrumb results using the allowMissing option in Nunjucks templates.",
    "codeLanguage": "jinja2",
    "codeTokens": 65,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_27",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "jinja2",
        "code": "{% set navPages = collections.all | eleventyNavigationBreadcrumb(\"Does not exist\", { allowMissing: true }) %}\n{{ navPages | dump | safe }}"
      }
    ],
    "relevance": 0.858
  },
  {
    "codeTitle": "Adding First and Last Page Links in CommonJS",
    "codeDescription": "Shows how to add first and last page links in pagination navigation using CommonJS module format, conditionally displaying them when not on the respective pages.",
    "codeLanguage": "cjs",
    "codeTokens": 225,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/pagination/nav.md#2025-04-05_snippet_12",
    "pageTitle": "Creating Pagination Navigation in Eleventy",
    "codeList": [
      {
        "language": "js",
        "code": "module.exports = function({ pagination, page }) {\n\treturn `<nav aria-labelledby=\"my-pagination\">\n\t<h2 id=\"my-pagination\">This is my Pagination</h2>\n\t<ol>\n\t\t${pagination.href.first && pagination.href.first !== page.url ? `<li><a href=\"${pagination.href.first}\">First</a></li>` : \"\"}\n\t\t${pagination.pages.map((pageEntry, index) => {\n\t\t\treturn `<li><a href=\"${pagination.hrefs[index]}\"${pagination.hrefs[index] === page.url ? \" aria-current=\\\"page\\\"\" : \"\"}>${\"Page \" + (index + 1)}</a></li>`;\n\t\t}).join(\"\\n\\t\\t\")}\n\t\t${pagination.href.last && pagination.href.last !== page.url ? `<li><a href=\"${pagination.href.last}\">Last</a></li>` : \"\"}\n\t</ol>\n</nav>`;\n};"
      }
    ],
    "relevance": 0.858
  },
  {
    "codeTitle": "Adding Previous and Next Links in CommonJS",
    "codeDescription": "Demonstrates how to add previous and next pagination links in CommonJS module format, conditionally showing them based on the current page position.",
    "codeLanguage": "cjs",
    "codeTokens": 209,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/pagination/nav.md#2025-04-05_snippet_9",
    "pageTitle": "Creating Pagination Navigation in Eleventy",
    "codeList": [
      {
        "language": "js",
        "code": "module.exports = function({ pagination, page }) {\n\treturn `<nav aria-labelledby=\"my-pagination\">\n\t<h2 id=\"my-pagination\">This is my Pagination</h2>\n\t<ol>\n\t\t${pagination.href.previous ? `<li><a href=\"${pagination.href.previous}\">Previous</a></li>` : \"\"}\n\t\t${pagination.pages.map((pageEntry, index) => {\n\t\t\treturn `<li><a href=\"${pagination.hrefs[index]}\"${pagination.hrefs[index] === page.url ? \" aria-current=\\\"page\\\"\" : \"\"}>${\"Page \" + (index + 1)}</a></li>`;\n\t\t}).join(\"\\n\\t\\t\")}\n\t\t${pagination.href.next ? `<li><a href=\"${pagination.href.next}\">Next</a></li>` : \"\"}\n\t</ol>\n</nav>`;\n};"
      }
    ],
    "relevance": 0.857
  },
  {
    "codeTitle": "Configuring EJS Plugin with Custom Options in Eleventy (JavaScript)",
    "codeDescription": "This code snippet shows how to configure the EJS plugin with custom options in an Eleventy configuration file. It demonstrates setting the async option, changing the delimiter, and overriding the EJS library instance.",
    "codeLanguage": "javascript",
    "codeTokens": 151,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/ejs.md#2025-04-05_snippet_1",
    "pageTitle": "EJS Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import ejs from \"ejs\";\nimport ejsPlugin from \"@11ty/eleventy-plugin-ejs\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addPlugin(ejsPlugin, {\n\t\tasync: false, // default\n\n\t\t// use <? ?> instead of <% %>\n\t\tdelimiter: \"?\",\n\n\t\t// Override the `ejs` library instance\n\t\televentyLibraryOverride: ejs,\n\t});\n}"
      }
    ],
    "relevance": 0.856
  },
  {
    "codeTitle": "Using getAllSorted() Method in Eleventy Collections",
    "codeDescription": "Demonstrates using the default sorting algorithm with getAllSorted() method. This creates a collection with all content items sorted in ascending order by date with filename as tiebreaker.",
    "codeLanguage": "javascript",
    "codeTokens": 100,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/collections-api.md#2025-04-05_snippet_4",
    "pageTitle": "Eleventy Collections API Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\t// Use the default sorting algorithm (ascending by date, filename tiebreaker)\n\televentyConfig.addCollection(\"allMySortedContent\", function (collectionsApi) {\n\t\treturn collectionsApi.getAllSorted();\n\t});\n};"
      }
    ],
    "relevance": 0.855
  },
  {
    "codeTitle": "Implementing Sass Underscore Convention in Eleventy",
    "codeDescription": "Shows how to implement the Sass underscore convention in Eleventy, which skips writing files with names starting with an underscore to the output directory.",
    "codeLanguage": "javascript",
    "codeTokens": 91,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/custom.md#2025-04-05_snippet_15",
    "pageTitle": "Custom Template Languages in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "\t// … some configuration truncated\n  compileOptions: {\n    permalink: function(contents, inputPath) {\n      let parsed = path.parse(inputPath);\n      if(parsed.name.startsWith(\"_\")) {\n        return false;\n      }\n    }\n  },"
      }
    ],
    "relevance": 0.855
  },
  {
    "codeTitle": "Asset Bucketing in CSS Bundles",
    "codeDescription": "Examples of using asset bucketing to organize CSS into different sub-containers.",
    "codeLanguage": "html",
    "codeTokens": 56,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/bundle.md#2025-04-05_snippet_5",
    "pageTitle": "Bundle Plugin for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<!-- This goes into a `defer` bucket -->\n{% css \"defer\" %}\nem { font-style: italic; }\n{% endcss %}"
      },
      {
        "language": "html",
        "code": "<!-- Retrieve the `defer` bucket code -->\n<style>{% getBundle \"css\", \"defer\" %}</style>\n\n<!-- Or: -->\n<link rel=\"stylesheet\" href=\"{% getBundleFileUrl 'css', 'defer' %}\">"
      }
    ],
    "relevance": 0.855
  },
  {
    "codeTitle": "Setting Data File Suffix with Legacy Configuration in Eleventy",
    "codeDescription": "Shows the older method of configuring data file suffixes in Eleventy using the jsDataFileSuffix property in the configuration object. This method provides backward compatibility for older projects.",
    "codeLanguage": "javascript",
    "codeTokens": 72,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/config.md#2025-04-05_snippet_13",
    "pageTitle": "Configuring Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\treturn {\n\t\tjsDataFileSuffix: \".11tydata\",\n\t};\n};"
      }
    ],
    "relevance": 0.855
  },
  {
    "codeTitle": "Customizing Hash Length in Eleventy Image Filenames",
    "codeDescription": "This snippet shows how to customize the length of the default filename format hash in Eleventy Image.",
    "codeLanguage": "javascript",
    "codeTokens": 56,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image.md#2025-04-05_snippet_10",
    "pageTitle": "Eleventy Image Utility Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "{\n\t// …\n\thashLength: 8, // careful, don't make it _too_ short!\n}"
      }
    ],
    "relevance": 0.855
  },
  {
    "codeTitle": "Accessing Original Paginated Content in Arrays",
    "codeDescription": "Shows how to access the original content from paginated arrays when creating navigation links in Nunjucks templates.",
    "codeLanguage": "njk",
    "codeTokens": 193,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/pagination/nav.md#2025-04-05_snippet_4",
    "pageTitle": "Creating Pagination Navigation in Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<nav aria-labelledby=\"my-pagination\">\n\t<h2 id=\"my-pagination\">This is my Pagination</h2>\n\t<ol>\n\t\t{%- for pageEntry in pagination.pages %}\n\t\t<li>\n\t\t\t<a href=\"{{ pagination.hrefs[ loop.index0 ] }}\"{% if pagination.hrefs[ loop.index0 ] == page.url %} aria-current=\"page\"{% endif %}>\n\t\t\t\t{# When `size` is 2 #}\n\t\t\t\t{{ pageEntry[0] }} and {{ pageEntry[1] }}\n\n\t\t\t\t{# When `size` is 1 #}\n\t\t\t\t{# {{ pageEntry }} #}\n\t\t\t</a>\n\t\t</li>\n\t\t{%- endfor %}\n\t</ol>\n</nav>"
      }
    ],
    "relevance": 0.854
  },
  {
    "codeTitle": "Configuring Eleventy Navigation Frontmatter in YAML",
    "codeDescription": "YAML frontmatter block that configures navigation settings for an Eleventy documentation page. Sets the navigation key, URL, and permalink properties.",
    "codeLanguage": "yaml",
    "codeTokens": 64,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/sidebar-docs.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Navigation Configuration",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\neleventyNavigation:\n  key: Eleventy Documentation\n  url: /docs/\npermalink: false\n---"
      }
    ],
    "relevance": 0.854
  },
  {
    "codeTitle": "Creating Multi-argument Nunjucks Filters in Eleventy",
    "codeDescription": "Shows how to create a Nunjucks filter that accepts multiple arguments. This example creates a filter that concatenates three strings together.",
    "codeLanguage": "javascript",
    "codeTokens": 106,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/nunjucks.md#2025-04-05_snippet_3",
    "pageTitle": "Nunjucks Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\t// Nunjucks Filter\n\televentyConfig.addNunjucksFilter(\n\t\t\"concatThreeStrings\",\n\t\tfunction (arg1, arg2, arg3) {\n\t\t\treturn arg1 + arg2 + arg3;\n\t\t}\n\t);\n};"
      }
    ],
    "relevance": 0.852
  },
  {
    "codeTitle": "Customizing Image Filenames in Eleventy",
    "codeDescription": "This code snippet shows how to customize the filenames of generated images in Eleventy using the 'filenameFormat' function.",
    "codeLanguage": "javascript",
    "codeTokens": 132,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image.md#2025-04-05_snippet_6",
    "pageTitle": "Eleventy Image Utility Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "{\n\t// …\n\tfilenameFormat: function (id, src, width, format, options) {\n\t\t// Define custom filenames for generated images\n\t\t// id: hash of the original image\n\t\t// src: original image path\n\t\t// width: current width in px\n\t\t// format: current file format\n\t\t// options: set of options passed to the Image call\n\n\t\treturn `${id}-${width}.${format}`;\n\t}\n}"
      }
    ],
    "relevance": 0.852
  },
  {
    "codeTitle": "Enabling WebC Transform for HTML Output Processing",
    "codeDescription": "Shows how to enable the WebC transform option to process all HTML output files, which is useful for adding WebC capabilities to existing projects.",
    "codeLanguage": "javascript",
    "codeTokens": 90,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_3",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import pluginWebc from \"@11ty/eleventy-plugin-webc\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addPlugin(pluginWebc, {\n\t\tuseTransform: true,\n\t});\n};"
      }
    ],
    "relevance": 0.852
  },
  {
    "codeTitle": "Allowing Missing Pages in Breadcrumbs for Eleventy Navigation (Liquid)",
    "codeDescription": "Demonstrates how to allow missing pages in breadcrumb results using the allowMissing option in Liquid templates.",
    "codeLanguage": "liquid",
    "codeTokens": 70,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_26",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "liquid",
        "code": "---\nnavOptions:\n  allowMissing: true\n---\n{% assign navPages = collections.all | eleventyNavigationBreadcrumb: \"Does not exist\", navOptions %}\n{{ navPages | json }}"
      }
    ],
    "relevance": 0.851
  },
  {
    "codeTitle": "Aliasing Existing Template Languages in Eleventy",
    "codeDescription": "This example shows how to alias existing template languages in Eleventy, such as treating .jsx files as .js files or handling multiple extensions.",
    "codeLanguage": "javascript",
    "codeTokens": 110,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/custom.md#2025-04-05_snippet_5",
    "pageTitle": "Custom Template Languages in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\televentyConfig.addExtension(\"11ty.jsx\", {\n\t\tkey: \"11ty.js\",\n\t});\n\n\televentyConfig.addExtension([\"11ty.jsx\", \"11ty.ts\", \"11ty.tsx\"], {\n\t\tkey: \"11ty.js\",\n\t});\n};"
      }
    ],
    "relevance": 0.85
  },
  {
    "codeTitle": "Creating SVG Icon Library with Bundles",
    "codeDescription": "Example of creating an SVG icon library using bundles and rendering it in HTML.",
    "codeLanguage": "html",
    "codeTokens": 182,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/bundle.md#2025-04-05_snippet_7",
    "pageTitle": "Bundle Plugin for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<svg width=\"0\" height=\"0\" aria-hidden=\"true\" style=\"position: absolute;\">\n\t<defs>{% getBundle \"svg\" %}</defs>\n</svg>\n\n<!-- Add icons to the set from anywhere on the page -->\n{% svg %}\n<g id=\"icon-close\"><path d=\"…\" /></g>\n{% endsvg %}\n\nAnd now you can use `icon-close` in as many SVG instances as you'd like (without repeating the heftier SVG content).\n\n<svg><use xlink:href=\"#icon-close\"></use></svg>\n<svg><use xlink:href=\"#icon-close\"></use></svg>\n<svg><use xlink:href=\"#icon-close\"></use></svg>\n<svg><use xlink:href=\"#icon-close\"></use></svg>"
      }
    ],
    "relevance": 0.85
  },
  {
    "codeTitle": "Freeze Reserved Data Configuration in JavaScript",
    "codeDescription": "Shows how to configure Eleventy to disable freezing of reserved data properties, which is enabled by default in version 3.0.",
    "codeLanguage": "javascript",
    "codeTokens": 62,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-eleventy-supplied.md#2025-04-05_snippet_2",
    "pageTitle": "Eleventy Supplied Data Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\televentyConfig.setFreezeReservedData(false);\n};"
      }
    ],
    "relevance": 0.85
  },
  {
    "codeTitle": "Configuring Named Argument Syntax for Nunjucks Shortcodes",
    "codeDescription": "This snippet demonstrates how to configure a Nunjucks shortcode with named argument syntax. It creates a 'user' shortcode that accepts a single object argument with name and optional twitter properties.",
    "codeLanguage": "javascript",
    "codeTokens": 131,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/nunjucks.md#2025-04-05_snippet_9",
    "pageTitle": "Nunjucks Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\t// Nunjucks Shortcode\n\televentyConfig.addNunjucksShortcode(\"user\", function (user) {\n\t\treturn `<div class=\"user\">\n<div class=\"user_name\">${user.name}</div>\n${user.twitter ? `<div class=\"user_twitter\">@${user.twitter}</div>` : \"\"}\n</div>`;\n\t});\n};"
      }
    ],
    "relevance": 0.848
  },
  {
    "codeTitle": "Manual Rendering of Navigation Menu in Liquid",
    "codeDescription": "This snippet shows how to manually render a single-tier navigation menu without using eleventyNavigationToHtml filter in Liquid syntax. It provides full control over the markup.",
    "codeLanguage": "liquid",
    "codeTokens": 115,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_37",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "liquid",
        "code": "{% assign navPages = collections.all | eleventyNavigation %}\n<ul>\n{%- for entry in navPages %}\n  <li{% if entry.url == page.url %} class=\"my-active-class\"{% endif %}>\n    <a href=\"{{ entry.url }}\">{{ entry.title }}</a>\n  </li>\n{%- endfor %}\n</ul>"
      }
    ],
    "relevance": 0.848
  },
  {
    "codeTitle": "In-Memory Cache Example with Different Options",
    "codeDescription": "Example showing how the in-memory cache generates a new promise when processing the same image with different options, as they'll produce different outputs.",
    "codeLanguage": "javascript",
    "codeTokens": 99,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image.md#2025-04-05_snippet_4",
    "pageTitle": "Eleventy Image Utility Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "import Image from \"@11ty/eleventy-img\";\n\nlet stats1 = Image(\"./test/bio-2017.jpg\");\nlet stats2 = Image(\"./test/bio-2017.jpg\", { widths: [300] });\n\nconsole.assert(stats1 !== stats2, \"A different promise\");"
      }
    ],
    "relevance": 0.848
  },
  {
    "codeTitle": "Implementing JavaScript Front Matter in Nunjucks with Eleventy",
    "codeDescription": "Demonstrates how to use JavaScript for front matter in a Nunjucks template, including a function for current date.",
    "codeLanguage": "nunjucks",
    "codeTokens": 80,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-frontmatter.md#2025-04-05_snippet_3",
    "pageTitle": "Front Matter Data Configuration in Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "---js\nconst title = \"My page title\";\n\nfunction currentDate() {\n\treturn (new Date()).toLocaleString();\n}\n---\n\n<h1>{{ title }}</h1>\n<p>Published on {{ currentDate() }}</p>"
      }
    ],
    "relevance": 0.848
  },
  {
    "codeTitle": "Rendering HTML Navigation with Advanced Options in Liquid",
    "codeDescription": "This snippet illustrates how to use the eleventyNavigationToHtml filter with advanced options in Liquid syntax. It shows how to customize HTML elements, classes, and active page highlighting.",
    "codeLanguage": "liquid",
    "codeTokens": 286,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_35",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "liquid",
        "code": "---js\n{\n  navigationOptions: {\n    listElement: \"ul\",            // Change the top level tag\n    listItemElement: \"li\",        // Change the item tag\n\n    listClass: \"\",                // Add a class to the top level\n    listItemClass: \"\",            // Add a class to every item\n    listItemHasChildrenClass: \"\", // Add a class if the item has children\n    activeListItemClass: \"\",      // Add a class to the current page's item\n\n    anchorClass: \"\",              // Add a class to the anchor\n    activeAnchorClass: \"\",        // Add a class to the current page's anchor\n\n    // If matched, `activeListItemClass` and `activeAnchorClass` will be added\n    activeKey: \"\",\n    // It's likely you want to pass in `eleventyNavigation.key` here, e.g.:\n    // activeKey: eleventyNavigation.key\n\n    // Show excerpts (if they exist in data, read more above)\n    showExcerpt: false\n  }\n}\n---\n{{ collections.all | eleventyNavigation | eleventyNavigationToHtml: navigationOptions | json }}"
      }
    ],
    "relevance": 0.846
  },
  {
    "codeTitle": "Overriding Browsersync Server Options in Eleventy Configuration",
    "codeDescription": "This code snippet shows how to modify the default Browsersync configuration in Eleventy by enabling notifications. The eleventyConfig.setBrowserSyncConfig method allows developers to customize Browsersync behavior according to their needs.",
    "codeLanguage": "javascript",
    "codeTokens": 86,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/server-browsersync.md#2025-04-05_snippet_0",
    "pageTitle": "Browsersync Configuration in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\televentyConfig.setBrowserSyncConfig({\n\t\tnotify: true,\n\t});\n};"
      }
    ],
    "relevance": 0.845
  },
  {
    "codeTitle": "Navigation Data Structure Example",
    "codeDescription": "JSON example showing the hierarchical data structure returned by the eleventyNavigation filter, including parent-child relationships.",
    "codeLanguage": "json",
    "codeTokens": 158,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_17",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "json",
        "code": "[\n\t{\n\t\t\"key\": \"Mammals\",\n\t\t\"url\": \"/mammals/\",\n\t\t\"title\": \"Mammals\",\n\t\t\"children\": [\n\t\t\t{\n\t\t\t\t\"key\": \"Humans\",\n\t\t\t\t\"parentKey\": \"Mammals\",\n\t\t\t\t\"url\": \"/humans/\",\n\t\t\t\t\"title\": \"Humans\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"key\": \"Bats\",\n\t\t\t\t\"parentKey\": \"Mammals\",\n\t\t\t\t\"url\": \"/bats/\",\n\t\t\t\t\"title\": \"Bats\"\n\t\t\t}\n\t\t]\n\t}\n]"
      }
    ],
    "relevance": 0.845
  },
  {
    "codeTitle": "Rendering Navigation to HTML in WebC",
    "codeDescription": "WebC template code to render the navigation structure as HTML using the @html attribute.",
    "codeLanguage": "html",
    "codeTokens": 54,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_11",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<nav\n\t@html=\"eleventyNavigationToHtml(eleventyNavigation($data.collections.all))\"\n></nav>"
      }
    ],
    "relevance": 0.845
  },
  {
    "codeTitle": "Using <is-land> with autoinit for Framework Libraries",
    "codeDescription": "Example of using the autoinit and import attributes to automatically initialize a framework (petite-vue in this case) once the island's conditions are met.",
    "codeLanguage": "html",
    "codeTokens": 200,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/is-land.md#2025-04-05_snippet_8",
    "pageTitle": "Using <is-land> for Islands Architecture in 11ty",
    "codeList": [
      {
        "language": "html",
        "code": "<is-land\n\ton:visible\n\tautoinit=\"petite-vue\"\n\timport=\"https://unpkg.com/petite-vue@0.4.1/dist/petite-vue.es.js\"\n\tv-scope=\"{ name: 'post-JS' }\"\n>\n\tHello from <span v-html=\"name\">pre-JS</span>\n</is-land>\n\n<!-- when import maps support is better, this simplifies with an entry for petite-vue in your import map -->\n<is-land on:visible import=\"petite-vue\" v-scope=\"{ name: 'post-JS' }\">\n\tHello from <span v-html=\"name\">pre-JS</span>\n</is-land>"
      }
    ],
    "relevance": 0.845
  },
  {
    "codeTitle": "Displaying Migration Guides Collection with Liquid Template in Eleventy",
    "codeDescription": "This code snippet uses Liquid templating to iterate through the 'migrations' collection and display a list of links to migration guides. For each post, it conditionally displays an indie avatar if an iconUrl is provided.",
    "codeLanguage": "liquid",
    "codeTokens": 122,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/migrate.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Project Content Import Documentation",
    "codeList": [
      {
        "language": "liquid",
        "code": "<ul class=\"list-bare\">\n{%- for post in collections.migrations %}\n\t<li><a href=\"{{ post.url }}\">{% if post.data.iconUrl %}{% indieavatar post.data.iconUrl %}{% endif %}{{ post.data.title }}</a></li>\n{%- endfor %}\n</ul>"
      }
    ],
    "relevance": 0.845
  },
  {
    "codeTitle": "Example MDX Template in Eleventy",
    "codeDescription": "This code snippet shows a basic MDX template that exports a React component and uses it within Markdown syntax.",
    "codeLanguage": "jsx",
    "codeTokens": 52,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/mdx.md#2025-04-05_snippet_2",
    "pageTitle": "MDX Integration in Eleventy",
    "codeList": [
      {
        "language": "jsx",
        "code": "export function Thing() {\n  return <>World!</>\n}\n\n# Hello, <Thing />"
      }
    ],
    "relevance": 0.845
  },
  {
    "codeTitle": "Using Original File Slug for Custom Filenames in Eleventy",
    "codeDescription": "This example demonstrates how to use the original file slug to create custom filenames for generated images in Eleventy.",
    "codeLanguage": "javascript",
    "codeTokens": 142,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image.md#2025-04-05_snippet_7",
    "pageTitle": "Eleventy Image Utility Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "import path from \"node:path\";\nimport Image from \"@11ty/eleventy-img\";\n\nawait Image(\"./test/bio-2017.jpg\", {\n\twidths: [300],\n\tformats: [\"auto\"],\n\tfilenameFormat: function (id, src, width, format, options) {\n\t\tconst extension = path.extname(src);\n\t\tconst name = path.basename(src, extension);\n\n\t\treturn `${name}-${width}w.${format}`;\n\t},\n});\n\n// Writes: \"test/img/bio-2017-300w.jpeg\""
      }
    ],
    "relevance": 0.845
  },
  {
    "codeTitle": "Rendering Advanced Navigation with Nunjucks in Markdown",
    "codeDescription": "This Nunjucks template code, embedded in Markdown, renders the navigation for the 'Advanced' section. It uses the 'nav' filter and 'eleventyNavigationToHtml' function to generate HTML, including excerpts for each item.",
    "codeLanguage": "nunjucks",
    "codeTokens": 82,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/advanced.md#2025-04-05_snippet_1",
    "pageTitle": "Advanced Eleventy Projects",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{{ \"Advanced\" | nav | eleventyNavigationToHtml({ showExcerpt: true }) | safe }}"
      }
    ],
    "relevance": 0.844
  },
  {
    "codeTitle": "Disabling Browsersync JavaScript Snippet in Eleventy Configuration",
    "codeDescription": "This snippet demonstrates how to opt out of the JavaScript snippet that Browsersync normally injects into pages. Setting the snippet option to false disables Browsersync's live-reloading functionality, which was added in browser-sync version 2.27.1.",
    "codeLanguage": "javascript",
    "codeTokens": 93,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/server-browsersync.md#2025-04-05_snippet_1",
    "pageTitle": "Browsersync Configuration in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\televentyConfig.setBrowserSyncConfig({\n\t\tsnippet: false,\n\t});\n};"
      }
    ],
    "relevance": 0.842
  },
  {
    "codeTitle": "Overriding Tags in Markdown Front Matter",
    "codeDescription": "Demonstrates how to override tags defined higher in the data cascade using the override prefix.",
    "codeLanguage": "yaml",
    "codeTokens": 38,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/collections.md#2025-04-05_snippet_3",
    "pageTitle": "Using Tags for Collections in Eleventy",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\noverride:tags: []\n---"
      }
    ],
    "relevance": 0.842
  },
  {
    "codeTitle": "Adding Nunjucks and Universal Shortcodes in Eleventy",
    "codeDescription": "Demonstrates how to create both Nunjucks-specific shortcodes and universal shortcodes that work across multiple template languages. The example creates a user profile shortcode.",
    "codeLanguage": "javascript",
    "codeTokens": 161,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/nunjucks.md#2025-04-05_snippet_6",
    "pageTitle": "Nunjucks Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n  // Nunjucks Shortcode\n  eleventyConfig.addNunjucksShortcode(\"user\", function(name, twitterUsername) { /* … */ });\n\n  // Universal Shortcodes (Adds to Liquid, Nunjucks, 11ty.js)\n  eleventyConfig.addShortcode(\"user\", function(name, twitterUsername) {\n    return `<div class=\"user\">\n<div class=\"user_name\">${name}</div>\n<div class=\"user_twitter\">@${twitterUsername}</div>\n</div>`;\n  });\n};"
      }
    ],
    "relevance": 0.842
  },
  {
    "codeTitle": "Using InputPath to URL in JavaScript (CommonJS)",
    "codeDescription": "Illustrates the usage of the InputPath to URL plugin in JavaScript templates using CommonJS syntax. The file path will be converted to the output URL.",
    "codeLanguage": "javascript",
    "codeTokens": 68,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/inputpath-to-url.md#2025-04-05_snippet_5",
    "pageTitle": "InputPath to URL Plugin for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "module.exports = function (data) {\n  return `<a href=\"my-template.md\">Home</a>`;\n};"
      }
    ],
    "relevance": 0.842
  },
  {
    "codeTitle": "Using inputPathToUrl Filter in JavaScript (CommonJS) Templates",
    "codeDescription": "Maps a markdown file path to its output URL in a CommonJS JavaScript template. Demonstrates how to use inputPathToUrl as a JavaScript function in the template context.",
    "codeLanguage": "javascript",
    "codeTokens": 75,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/filters/inputpath-to-url.md#2025-04-05_snippet_3",
    "pageTitle": "inputPathToUrl Universal Filter Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "module.exports = function (data) {\n\treturn `<a href=\"${this.inputPathToUrl(\"index.md\")}\">Home</a>`;\n};"
      }
    ],
    "relevance": 0.84
  },
  {
    "codeTitle": "Managing Pre-JS Fallback Content in <is-land>",
    "codeDescription": "Example showing how to handle pre-JavaScript fallback content within a web component inside an <is-land>.",
    "codeLanguage": "html",
    "codeTokens": 85,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/is-land.md#2025-04-05_snippet_4",
    "pageTitle": "Using <is-land> for Islands Architecture in 11ty",
    "codeList": [
      {
        "language": "html",
        "code": "<is-land on:visible on:idle>\n\t<vanilla-web-component>\n\t\tPut your pre-JS fallback content in your web component.\n\t</vanilla-web-component>\n</is-land>"
      }
    ],
    "relevance": 0.84
  },
  {
    "codeTitle": "Eleventy Blog Post Frontmatter Configuration",
    "codeDescription": "YAML frontmatter configuration for blog posts defining the title, layout, and computed social media description using date formatting.",
    "codeLanguage": "yaml",
    "codeTokens": 82,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/_includes/layouts/blog.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Blog Post Template",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\ntitle: Eleventy Blog\nlayout: layouts/docs.njk\neleventyComputed:\n  social:\n    description: \"An Eleventy blog post published on {{ page.date | newsDate('LLLL yyyy') }}.\"\n---"
      }
    ],
    "relevance": 0.84
  },
  {
    "codeTitle": "Collection Item Data Structure in JavaScript",
    "codeDescription": "Shows the structure of a collection item in Eleventy, including page data, content, and raw input.",
    "codeLanguage": "javascript",
    "codeTokens": 175,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/collections.md#2025-04-05_snippet_4",
    "pageTitle": "Using Tags for Collections in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "{\n  page: {\n    inputPath: './test1.md',\n    url: '/test1/',\n    date: new Date(),\n    // … and everything else in Eleventy's `page`\n  },\n  data: { title: 'Test Title', tags: ['tag1', 'tag2'], date: 'Last Modified', /* … */ },\n  content: '<h1>Test Title</h1>\\n\\n<p>This is text content…',\n  // Pre-release only: {{ \"3.0.0-alpha.1\" | coerceVersion }}\n  rawInput: '<h1>{{ title }}</h1>\\n\\n<p>This is text content…',\n}"
      }
    ],
    "relevance": 0.839
  },
  {
    "codeTitle": "Customizing Data File Suffixes in Eleventy",
    "codeDescription": "Demonstrates how to configure data file suffixes using the setDataFileSuffixes API. This allows customizing which file suffixes Eleventy recognizes as data files, including options to disable data files entirely.",
    "codeLanguage": "javascript",
    "codeTokens": 140,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/config.md#2025-04-05_snippet_12",
    "pageTitle": "Configuring Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\t// e.g. file.json and file.11tydata.json\n\televentyConfig.setDataFileSuffixes([\".11tydata\", \"\"]);\n\n\t// e.g. file.11tydata.json\n\televentyConfig.setDataFileSuffixes([\".11tydata\"]);\n\n\t// No data files are used.\n\televentyConfig.setDataFileSuffixes([]);\n};"
      }
    ],
    "relevance": 0.838
  },
  {
    "codeTitle": "Configuring Paired Shortcodes in Eleventy",
    "codeDescription": "This snippet demonstrates how to configure paired shortcodes in Eleventy for Nunjucks and Universal templates. It creates a 'user' shortcode that generates HTML for user information.",
    "codeLanguage": "javascript",
    "codeTokens": 188,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/nunjucks.md#2025-04-05_snippet_7",
    "pageTitle": "Nunjucks Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n  // Nunjucks Shortcode\n  eleventyConfig.addPairedNunjucksShortcode(\"user\", function(bioContent, name, twitterUsername) { /* … */ });\n\n  // Universal Shortcodes (Adds to Liquid, Nunjucks, 11ty.js)\n  eleventyConfig.addPairedShortcode(\"user\", function(bioContent, name, twitterUsername) {\n    return `<div class=\"user\">\n<div class=\"user_name\">${name}</div>\n<div class=\"user_twitter\">@${twitterUsername}</div>\n<div class=\"user_bio\">${bioContent}</div>\n</div>`;\n  });\n};"
      }
    ],
    "relevance": 0.838
  },
  {
    "codeTitle": "Creating a Single CSS File with Nunjucks in Eleventy",
    "codeDescription": "A template that concatenates multiple CSS component files into a single output file. It defines the output permalink and includes two component CSS files using Nunjucks include tags.",
    "codeLanguage": "markdown",
    "codeTokens": 73,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/quicktips/concatenate.md#2025-04-05_snippet_0",
    "pageTitle": "Super Simple CSS Concatenation in Eleventy",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\npermalink: theme.css\n---\n\n{% include \"components/header.css\" %}\n{% include \"components/footer.css\" %}"
      }
    ],
    "relevance": 0.838
  },
  {
    "codeTitle": "Using Filters in Nunjucks Templates",
    "codeDescription": "Demonstrates how to use a custom 'makeUppercase' filter in a Nunjucks template to transform the 'name' variable.",
    "codeLanguage": "njk",
    "codeTokens": 56,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/filters.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Template Filters Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<h1>{{ name | makeUppercase }}</h1>"
      }
    ],
    "relevance": 0.836
  },
  {
    "codeTitle": "Server Passthrough Behavior Configuration",
    "codeDescription": "Shows how to configure the server passthrough copy behavior for development server mode.",
    "codeLanguage": "javascript",
    "codeTokens": 63,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/copy.md#2025-04-05_snippet_5",
    "pageTitle": "Passthrough File Copy in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\t// the default is \"copy\"\n\televentyConfig.setServerPassthroughCopyBehavior(\"passthrough\");\n};"
      }
    ],
    "relevance": 0.836
  },
  {
    "codeTitle": "Exporting Configuration Object in Eleventy (ESM)",
    "codeDescription": "Shows how to export static configuration options as the default export in an Eleventy config file. This approach is less preferred than callback functions as it doesn't provide access to the full Configuration API.",
    "codeLanguage": "javascript",
    "codeTokens": 66,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/config-shapes.md#2025-04-05_snippet_1",
    "pageTitle": "Configuration Shapes in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default {\n\tdir: {\n\t\tinput: \"views\"\n\t}\n}"
      }
    ],
    "relevance": 0.835
  },
  {
    "codeTitle": "Directory Data File Example",
    "codeDescription": "JSON configuration showing how to set default tags for all posts in a directory using a posts.json file.",
    "codeLanguage": "json",
    "codeTokens": 43,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-deep-merge.md#2025-04-05_snippet_5",
    "pageTitle": "Data Deep Merge Configuration in Eleventy",
    "codeList": [
      {
        "language": "json",
        "code": "{\n\t\"tags\": [\"posts\"]\n}"
      }
    ],
    "relevance": 0.835
  },
  {
    "codeTitle": "Creating Language Switcher with locale_links Filter",
    "codeDescription": "Example of using the locale_links filter to create a language switcher that shows alternative language versions of the current page.",
    "codeLanguage": "njk",
    "codeTokens": 94,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/i18n.md#2025-04-05_snippet_4",
    "pageTitle": "Eleventy Internationalization Plugin (i18n) Guide",
    "codeList": [
      {
        "language": "njk",
        "code": "{% raw %}\n{%- for link in page.url | locale_links %}\nThis page is also available in <a href=\"{{ link.url }}\" lang=\"{{ link.lang }}\" hreflang=\"{{ link.lang }}\">{{ link.label }}</a>\n{%- endfor %}\n{% endraw %}"
      }
    ],
    "relevance": 0.835
  },
  {
    "codeTitle": "Reversing Pagination Data in Eleventy",
    "codeDescription": "Demonstrates how to reverse the order of paginated data using the reverse option",
    "codeLanguage": "markdown",
    "codeTokens": 72,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/pagination.md#2025-04-05_snippet_3",
    "pageTitle": "Pagination in 11ty Static Site Generator",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\npagination:\n  data: testdata\n  size: 2\n  reverse: true\ntestdata:\n  - item1\n  - item2\n  - item3\n  - item4\n---"
      }
    ],
    "relevance": 0.835
  },
  {
    "codeTitle": "Setting Custom Markdown Library Options in Eleventy",
    "codeDescription": "Shows how to create and configure a custom instance of the markdown-it library with specific options using the Configuration API.",
    "codeLanguage": "javascript",
    "codeTokens": 90,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/markdown.md#2025-04-05_snippet_0",
    "pageTitle": "Using Markdown with Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import markdownIt from \"markdown-it\";\n\nexport default function (eleventyConfig) {\n\tlet options = {\n\t\thtml: true,\n\t\tbreaks: true,\n\t\tlinkify: true,\n\t};\n\n\televentyConfig.setLibrary(\"md\", markdownIt(options));\n};"
      }
    ],
    "relevance": 0.835
  },
  {
    "codeTitle": "Customizing Liquid Template Engine Options",
    "codeDescription": "Overrides default Liquid options to disable dynamic partials and strict filters. This provides more flexibility in how Liquid templates are processed by Eleventy.",
    "codeLanguage": "javascript",
    "codeTokens": 94,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/liquid.md#2025-04-05_snippet_1",
    "pageTitle": "Liquid Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\televentyConfig.setLiquidOptions({\n\t\tdynamicPartials: false,\n\t\tstrictFilters: false, // renamed from `strict_filters` in Eleventy 1.0\n\t});\n};"
      }
    ],
    "relevance": 0.835
  },
  {
    "codeTitle": "Generating HTML Navigation for Retired Plugins using Nunjucks",
    "codeDescription": "This Nunjucks template code uses custom filters to generate an HTML navigation structure for retired plugins, including excerpts for each plugin.",
    "codeLanguage": "Nunjucks",
    "codeTokens": 65,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/retired.md#2025-04-05_snippet_1",
    "pageTitle": "Retired Plugins Documentation for 11ty Website",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{{ \"Retired Plugins\" | nav | eleventyNavigationToHtml({ showExcerpt: true }) | safe }}"
      }
    ],
    "relevance": 0.834
  },
  {
    "codeTitle": "Function-based Data Export in Eleventy",
    "codeDescription": "Demonstrates how to export data using a function that returns values in Eleventy.",
    "codeLanguage": "javascript",
    "codeTokens": 45,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-js.md#2025-04-05_snippet_1",
    "pageTitle": "JavaScript Data Files in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function () {\n\treturn [\"user1\", \"user2\"];\n}"
      }
    ],
    "relevance": 0.833
  },
  {
    "codeTitle": "Deep Merge Data Structure",
    "codeDescription": "JSON example showing the resulting data structure when deep merge is enabled, demonstrating how arrays and nested objects are combined.",
    "codeLanguage": "json",
    "codeTokens": 97,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-deep-merge.md#2025-04-05_snippet_4",
    "pageTitle": "Data Deep Merge Configuration in Eleventy",
    "codeList": [
      {
        "language": "json",
        "code": "{\n\t\"title\": \"This is a Good Blog Post\",\n\t\"author\": \"Zach\",\n\t\"tags\": [\"CSS\", \"HTML\", \"JavaScript\"],\n\t\"eleventyNavigation\": {\n\t\t\"key\": \"my-key\",\n\t\t\"parent\": \"test\"\n\t}\n}"
      }
    ],
    "relevance": 0.832
  },
  {
    "codeTitle": "Configuring Eleventy to use Vite plugin",
    "codeDescription": "Basic configuration to add the Vite plugin to Eleventy. This snippet imports the plugin and adds it to the Eleventy configuration.",
    "codeLanguage": "javascript",
    "codeTokens": 87,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/server-vite.md#2025-04-05_snippet_1",
    "pageTitle": "Integrating Vite with Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import EleventyVitePlugin from \"@11ty/eleventy-plugin-vite\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addPlugin(EleventyVitePlugin);\n};"
      }
    ],
    "relevance": 0.832
  },
  {
    "codeTitle": "Setting Watch Throttle Wait Time",
    "codeDescription": "Demonstrates how to add a delay before rebuilding when files change using setWatchThrottleWaitTime.",
    "codeLanguage": "javascript",
    "codeTokens": 68,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/watch-serve.md#2025-04-05_snippet_4",
    "pageTitle": "Eleventy Development Server Configuration Guide",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\t// default is 0\n\televentyConfig.setWatchThrottleWaitTime(100); // in milliseconds\n};"
      }
    ],
    "relevance": 0.832
  },
  {
    "codeTitle": "Override Prefix Usage",
    "codeDescription": "Markdown front matter example demonstrating how to use the override prefix to opt-out of data merging for specific values.",
    "codeLanguage": "markdown",
    "codeTokens": 42,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-deep-merge.md#2025-04-05_snippet_6",
    "pageTitle": "Data Deep Merge Configuration in Eleventy",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\noverride:tags: []\n---"
      }
    ],
    "relevance": 0.83
  },
  {
    "codeTitle": "Global Data with Config Access in Eleventy",
    "codeDescription": "Example of accessing configuration data within JavaScript data files in Eleventy.",
    "codeLanguage": "javascript",
    "codeTokens": 74,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-js.md#2025-04-05_snippet_3",
    "pageTitle": "JavaScript Data Files in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (configData) {\n\tif (configData.eleventy.env.source === \"cli\") {\n\t\treturn \"I am on the command line\";\n\t}\n\n\treturn \"I am running programmatically via a script\";\n}"
      }
    ],
    "relevance": 0.83
  },
  {
    "codeTitle": "Caching Remote Image with Eleventy Fetch",
    "codeDescription": "Example of using Eleventy Fetch to cache a remote image as a buffer. This technique is used internally by the eleventy-img plugin.",
    "codeLanguage": "javascript",
    "codeTokens": 116,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/fetch.md#2025-04-05_snippet_3",
    "pageTitle": "Eleventy Fetch Plugin Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "import Fetch from \"@11ty/eleventy-fetch\";\n\nlet url = \"https://www.zachleat.com/img/avatar-2017-big.png\";\nlet imageBuffer = await Fetch(url, {\n\tduration: \"1d\",\n\ttype: \"buffer\",\n});\n// Use imageBuffer as an input to the `sharp` plugin, for example\n\n// (Example truncated)"
      }
    ],
    "relevance": 0.83
  },
  {
    "codeTitle": "Implementing Generator Image API in HTML",
    "codeDescription": "This HTML snippet demonstrates how to use the Generator Image API to display logos of site generators for different websites. It includes examples for 11ty.dev, gatsbyjs.com, and astro.build.",
    "codeLanguage": "html",
    "codeTokens": 243,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/services/generator.md#2025-04-05_snippet_2",
    "pageTitle": "Generator Image API Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<img\n\tsrc=\"https://v1.generator.11ty.dev/image/https%3A%2F%2Fwww.11ty.dev%2F/\"\n\talt=\"Site Generator logo for 11ty.dev/\"\n\tloading=\"lazy\"\n\tdecoding=\"async\"\n\twidth=\"40\"\n\theight=\"40\"\n/>\n<img\n\tsrc=\"https://v1.generator.11ty.dev/image/https%3A%2F%2Fwww.gatsbyjs.com%2F/\"\n\talt=\"Site Generator logo for gatsbyjs.com/\"\n\tloading=\"lazy\"\n\tdecoding=\"async\"\n\twidth=\"40\"\n\theight=\"40\"\n/>\n<img\n\tsrc=\"https://v1.generator.11ty.dev/image/https%3A%2F%2Fastro.build%2F/\"\n\talt=\"Site Generator logo for astro.build/\"\n\tloading=\"lazy\"\n\tdecoding=\"async\"\n\twidth=\"40\"\n\theight=\"40\"\n/>"
      }
    ],
    "relevance": 0.83
  },
  {
    "codeTitle": "Configuring eleventyComputed in JavaScript Data File",
    "codeDescription": "JavaScript data file that sets up eleventyComputed to generate eleventyNavigation properties based on existing front matter.",
    "codeLanguage": "javascript",
    "codeTokens": 82,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-computed.md#2025-04-05_snippet_1",
    "pageTitle": "Implementing Computed Data in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default {\n\televentyComputed: {\n\t\televentyNavigation: {\n\t\t\tkey: (data) => data.title,\n\t\t\tparent: (data) => data.parent,\n\t\t},\n\t},\n};"
      }
    ],
    "relevance": 0.828
  },
  {
    "codeTitle": "Eleventy Navigation Front Matter Configuration in YAML",
    "codeDescription": "YAML front matter configuration showing the eleventyNavigation settings for organizing documentation pages with parent-child relationships and custom ordering.",
    "codeLanguage": "yaml",
    "codeTokens": 61,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-configuration.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Template Configuration Documentation",
    "codeList": [
      {
        "language": "yaml",
        "code": "eleventyNavigation:\n  parent: Eleventy Projects\n  key: Configure Templates with Data\n  order: 1"
      }
    ],
    "relevance": 0.828
  },
  {
    "codeTitle": "Server-only Comments in WebC",
    "codeDescription": "Demonstrates how to use server-only comments in WebC that will be stripped from the output.",
    "codeLanguage": "html",
    "codeTokens": 69,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_37",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<!--- WebC will remove this --->\n<!-- This will *not* be removed and is rendered to the output -->\n<!------- WebC will remove this, too ------->"
      }
    ],
    "relevance": 0.828
  },
  {
    "codeTitle": "Adding Literal Global Data in Eleventy Configuration",
    "codeDescription": "Demonstrates how to add a static string value as global data in Eleventy's configuration.",
    "codeLanguage": "javascript",
    "codeTokens": 67,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-global-custom.md#2025-04-05_snippet_0",
    "pageTitle": "Global Data Configuration in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "module.exports = function (eleventyConfig) {\n\t// Values can be static:\n\televentyConfig.addGlobalData(\"myString\", \"myValue\");\n};"
      }
    ],
    "relevance": 0.827
  },
  {
    "codeTitle": "Querying Hosting Image API for JSON Response",
    "codeDescription": "This snippet shows the URL format for querying the Hosting Image API to retrieve hosting provider information in JSON format for a given website URL. The :url parameter must be URI encoded.",
    "codeLanguage": "plaintext",
    "codeTokens": 60,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/services/builtwith.md#2025-04-05_snippet_1",
    "pageTitle": "Hosting Image API Documentation",
    "codeList": [
      {
        "language": "plaintext",
        "code": "https://v1.builtwith.11ty.dev/:url/json/"
      }
    ],
    "relevance": 0.826
  },
  {
    "codeTitle": "Using JSON Front Matter in HTML with Eleventy",
    "codeDescription": "Illustrates how to use JSON format for front matter in an HTML file with Eleventy.",
    "codeLanguage": "html",
    "codeTokens": 59,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-frontmatter.md#2025-04-05_snippet_2",
    "pageTitle": "Front Matter Data Configuration in Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "---json\n{\n  \"title\": \"My page title\"\n}\n---\n\n<!DOCTYPE html>\n<html>\n\t…\n</html>"
      }
    ],
    "relevance": 0.825
  },
  {
    "codeTitle": "Configuring 11ty Navigation Front Matter in YAML",
    "codeDescription": "YAML front matter block that configures navigation settings for an Eleventy website page. Sets up parent-child relationships, navigation key, pinning status, ordering, and URL routing with permalink settings.",
    "codeLanguage": "yaml",
    "codeTokens": 93,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/sidebar-get-started.md#2025-04-05_snippet_0",
    "pageTitle": "11ty Website Navigation Configuration",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\neleventyNavigation:\n  parent: Eleventy Projects\n  key: Get Started\n  pinned: true\n  order: -2\n  url: '/docs/'\npermalink: false\n---"
      }
    ],
    "relevance": 0.825
  },
  {
    "codeTitle": "Adding Custom Timeout to Eleventy Fetch Request",
    "codeDescription": "Example of using AbortSignal to add a custom timeout to an Eleventy Fetch request.",
    "codeLanguage": "javascript",
    "codeTokens": 68,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/fetch.md#2025-04-05_snippet_5",
    "pageTitle": "Eleventy Fetch Plugin Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "import Fetch from \"@11ty/eleventy-fetch\";\n\nawait Fetch(\"https://…\", {\n\tfetchOptions: {\n\t\tsignal: AbortSignal.timeout(5000)\n\t},\n});"
      }
    ],
    "relevance": 0.825
  },
  {
    "codeTitle": "Using log filter in Liquid templates",
    "codeDescription": "Demonstrates how to use the log filter to output a value to the console in Liquid templating language. This is equivalent to console.log in JavaScript.",
    "codeLanguage": "liquid",
    "codeTokens": 51,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/filters/log.md#2025-04-05_snippet_0",
    "pageTitle": "Log Universal Filter in 11ty",
    "codeList": [
      {
        "language": "liquid",
        "code": "{{ \"My Title\" | log }}"
      }
    ],
    "relevance": 0.825
  },
  {
    "codeTitle": "Component Setup with JavaScript in WebC",
    "codeDescription": "Shows how to use webc:setup script to run JavaScript and provide data and functions to a WebC component, enabling dynamic content generation.",
    "codeLanguage": "html",
    "codeTokens": 119,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_29",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<script webc:setup>\n\tconst myHtml = \"<my-webc-component></my-webc-component>\";\n\n\tfunction alwaysBlue() {\n\t\treturn \"blue\";\n\t}\n</script>\n\n<div @html=\"myHtml\"></div>\n<div @raw=\"myHtml\"></div>\n<!-- @raw does not reprocess as WebC -->\n<div @html=\"alwaysBlue()\"></div>"
      }
    ],
    "relevance": 0.825
  },
  {
    "codeTitle": "Arrow Function Template with Incorrect 'this' Usage (ESM)",
    "codeDescription": "An example showing incorrect usage of 'this' in an arrow function template, which will throw an error because arrow functions don't have their own 'this' context.",
    "codeLanguage": "javascript",
    "codeTokens": 86,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/javascript.md#2025-04-05_snippet_18",
    "pageTitle": "JavaScript Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default (data) => {\n\t// Using `this` in an arrow function will throw an error!\n\treturn `<h1>${this.myFunction(data.a, data.b)}</h1>`;\n};"
      }
    ],
    "relevance": 0.825
  },
  {
    "codeTitle": "Disabling .gitignore Usage in Eleventy Configuration",
    "codeDescription": "Demonstrates how to disable the automatic use of .gitignore file for ignoring files in Eleventy using the configuration API.",
    "codeLanguage": "javascript",
    "codeTokens": 61,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/ignores.md#2025-04-05_snippet_3",
    "pageTitle": "Ignoring Template Files in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\televentyConfig.setUseGitIgnore(false);\n};"
      }
    ],
    "relevance": 0.824
  },
  {
    "codeTitle": "Template Front Matter Example",
    "codeDescription": "Example of YAML front matter in a markdown template showing basic metadata configuration including title, tags, layout, and navigation settings.",
    "codeLanguage": "yaml",
    "codeTokens": 77,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-deep-merge.md#2025-04-05_snippet_1",
    "pageTitle": "Data Deep Merge Configuration in Eleventy",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\ntitle: This is a Good Blog Post\ntags:\n  - CSS\n  - HTML\nlayout: my-layout.njk\neleventyNavigation:\n  key: my-key\n---"
      }
    ],
    "relevance": 0.824
  },
  {
    "codeTitle": "Accessing Event Arguments in Eleventy Configuration Events",
    "codeDescription": "Demonstrates how to access and use the metadata object provided to event callbacks for both eleventy.before and eleventy.after events, including information about directories, run mode, and build results.",
    "codeLanguage": "javascript",
    "codeTokens": 136,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/events.md#2025-04-05_snippet_2",
    "pageTitle": "Configuration Events in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\televentyConfig.on(\"eleventy.before\", async ({ directories, runMode, outputMode }) => {\n\t\t// Read more below\n\t});\n\n\televentyConfig.on(\n\t\t\"eleventy.after\",\n\t\tasync ({ dir, results, runMode, outputMode }) => {\n\t\t\t// Read more below\n\t\t}\n\t);\n};"
      }
    ],
    "relevance": 0.822
  },
  {
    "codeTitle": "Retrieving Branch Children in Liquid for Eleventy Navigation",
    "codeDescription": "Demonstrates how to get the children of a specific navigation key using the eleventyNavigation filter in Liquid templates.",
    "codeLanguage": "liquid",
    "codeTokens": 60,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_18",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "liquid",
        "code": "{% assign navPages = collections.all | eleventyNavigation: \"Mammals\" %}\n{{ navPages | json }}"
      }
    ],
    "relevance": 0.822
  },
  {
    "codeTitle": "Disabling Colors in Terminal Output",
    "codeDescription": "Command to disable colorized text in terminal output using NODE_DISABLE_COLORS",
    "codeLanguage": "sh",
    "codeTokens": 40,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/environment-vars.md#2025-04-05_snippet_5",
    "pageTitle": "Environment Variables Guide for Eleventy",
    "codeList": [
      {
        "language": "sh",
        "code": "NODE_DISABLE_COLORS=1 npx @11ty/eleventy"
      }
    ],
    "relevance": 0.822
  },
  {
    "codeTitle": "Sample .eleventyignore File Content",
    "codeDescription": "Example of an .eleventyignore file showing how to ignore specific files and directories in Eleventy.",
    "codeLanguage": "plaintext",
    "codeTokens": 53,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/ignores.md#2025-04-05_snippet_0",
    "pageTitle": "Ignoring Template Files in Eleventy",
    "codeList": [
      {
        "language": "plaintext",
        "code": "README.md\n_drafts/\nsecretNunjucksTemplates/anotherFolder/**/*.njk"
      }
    ],
    "relevance": 0.821
  },
  {
    "codeTitle": "Configuring Language URL Redirects - TOML Format",
    "codeDescription": "TOML configuration for multilingual URL routing, defining redirect rules with specific status codes and conditions. Handles English and Spanish language paths with force flags and language-based conditions.",
    "codeLanguage": "toml",
    "codeTokens": 192,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/i18n.md#2025-04-05_snippet_9",
    "pageTitle": "Eleventy Internationalization (I18n) Guide",
    "codeList": [
      {
        "language": "toml",
        "code": "# Redirect any URLs with the language code in them already\n[[redirects]]\n  from = \"/en/*\"\n  to = \"/:splat\"\n  status = 301\n  force = true\n\n# Important: Per shadowing rules, URLs for the\n# _non-default_ language-specific content files\n# are served without redirects.\n\n# Redirect for end-user's browser preference override\n[[redirects]]\n  from = \"/*\"\n  to = \"/es/:splat\"\n  status = 302\n  conditions = {Language = [\"es\"]}\n\n# Default\n[[redirects]]\n  from = \"/*\"\n  to = \"/en/:splat\"\n  status = 200"
      }
    ],
    "relevance": 0.82
  },
  {
    "codeTitle": "Enabling Debug Mode for 11ty Fetch",
    "codeDescription": "Command to run 11ty with fetch debugging enabled using the DEBUG environment variable.",
    "codeLanguage": "bash",
    "codeTokens": 44,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/fetch.md#2025-04-05_snippet_12",
    "pageTitle": "Eleventy Fetch Plugin Documentation",
    "codeList": [
      {
        "language": "bash",
        "code": "DEBUG=Eleventy:Fetch npx @11ty/eleventy"
      }
    ],
    "relevance": 0.82
  },
  {
    "codeTitle": "Basic Mustache Plugin Configuration in Eleventy",
    "codeDescription": "Basic configuration to add the Mustache plugin to an Eleventy project, enabling support for Mustache templates.",
    "codeLanguage": "javascript",
    "codeTokens": 76,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/mustache.md#2025-04-05_snippet_1",
    "pageTitle": "Mustache Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import mustachePlugin from \"@11ty/eleventy-plugin-mustache\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addPlugin(mustachePlugin);\n}"
      }
    ],
    "relevance": 0.82
  },
  {
    "codeTitle": "Arrow Function Template with Destructuring (ESM)",
    "codeDescription": "A concise example using arrow function syntax and destructuring to create a JavaScript template in Eleventy. More compact than the regular function syntax.",
    "codeLanguage": "javascript",
    "codeTokens": 55,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/javascript.md#2025-04-05_snippet_6",
    "pageTitle": "JavaScript Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default ({ name }) => `<p>${name}</p>`;"
      }
    ],
    "relevance": 0.818
  },
  {
    "codeTitle": "Processing Markdown Only in Eleventy",
    "codeDescription": "Example of using templateEngineOverride to process a file as Markdown without any additional templating engine.",
    "codeLanguage": "markdown",
    "codeTokens": 41,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/template-overrides.md#2025-04-05_snippet_1",
    "pageTitle": "Overriding Template Languages in Eleventy",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\ntemplateEngineOverride: md\n---"
      }
    ],
    "relevance": 0.818
  },
  {
    "codeTitle": "Using Template Syntax in YAML Front Matter",
    "codeDescription": "Example of using template syntax (Nunjucks/Liquid) in YAML front matter to set eleventyComputed properties.",
    "codeLanguage": "markdown",
    "codeTokens": 76,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-computed.md#2025-04-05_snippet_3",
    "pageTitle": "Implementing Computed Data in Eleventy",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\ntitle: My Page Title\nparent: My Parent Key\neleventyComputed:\n  eleventyNavigation:\n    key: \"{{ title }}\"\n    parent: \"{{ parent }}\"\n---"
      }
    ],
    "relevance": 0.818
  },
  {
    "codeTitle": "Using Outdent with Shortcodes in Markdown",
    "codeDescription": "Using the outdent package to allow indented template literals in shortcodes without triggering Markdown indented code blocks.",
    "codeLanguage": "javascript",
    "codeTokens": 77,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/markdown.md#2025-04-05_snippet_7",
    "pageTitle": "Using Markdown with Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "// ✅ This is also acceptable\neleventyConfig.addShortcode(\"alsoGoodShortcode\", function () {\n\treturn outdent`\n    This will not be a code block in a markdown file.\n`;\n});"
      }
    ],
    "relevance": 0.818
  },
  {
    "codeTitle": "Configuring Liquid Parameter Parsing in Eleventy",
    "codeDescription": "Demonstrates how to configure Liquid parameter parsing, including legacy and built-in options for more robust parameter handling.",
    "codeLanguage": "javascript",
    "codeTokens": 80,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/liquid.md#2025-04-05_snippet_10",
    "pageTitle": "Liquid Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\t// Current default:\n\t// eleventyConfig.setLiquidParameterParsing(\"legacy\");\n\n\t// Liquid-native\n\televentyConfig.setLiquidParameterParsing(\"builtin\");\n};"
      }
    ],
    "relevance": 0.816
  },
  {
    "codeTitle": "Defining Possum Data in JSON (JavaScript)",
    "codeDescription": "This code snippet defines an array of possum objects, each with a name and age. It's stored in '_data/possums.json' and will be used as the data source for generating individual possum pages.",
    "codeLanguage": "js",
    "codeTokens": 136,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/pages-from-data.md#2025-04-05_snippet_0",
    "pageTitle": "Creating Pages from Data in Eleventy",
    "codeList": [
      {
        "language": "js",
        "code": "[\n\t{\n\t\tname: \"Fluffy\",\n\t\tage: 2,\n\t},\n\t{\n\t\tname: \"Snugglepants\",\n\t\tage: 5,\n\t},\n\t{\n\t\tname: \"Lord Featherbottom\",\n\t\tage: 4,\n\t},\n\t{\n\t\tname: \"Pennywise\",\n\t\tage: 9,\n\t},\n];"
      }
    ],
    "relevance": 0.815
  },
  {
    "codeTitle": "Svelte Integration with <is-land>",
    "codeDescription": "Example showing how to use Svelte with <is-land> through an Eleventy template, using the autoinit attribute.",
    "codeLanguage": "html",
    "codeTokens": 89,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/is-land.md#2025-04-05_snippet_11",
    "pageTitle": "Using <is-land> for Islands Architecture in 11ty",
    "codeList": [
      {
        "language": "html",
        "code": "{% assign component = \"./lib/svelte/my-component.svelte\" | svelte %}\n<is-land\n\ton:visible\n\tautoinit=\"svelte\"\n\timport=\"{{ component.clientJsUrl }}\"\n></is-land>"
      }
    ],
    "relevance": 0.815
  },
  {
    "codeTitle": "Using Quoted Template Syntax in YAML Permalinks",
    "codeDescription": "Shows the correct way to use quotes around template syntax in YAML front matter to prevent parsing errors with curly braces.",
    "codeLanguage": "yaml",
    "codeTokens": 47,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/permalinks.md#2025-04-05_snippet_4",
    "pageTitle": "Eleventy Permalinks Configuration Guide",
    "codeList": [
      {
        "language": "yaml",
        "code": "permalink: \"{{ page.filePathStem }}.html\""
      }
    ],
    "relevance": 0.815
  },
  {
    "codeTitle": "Basic GitHub API Request with Cache in Eleventy",
    "codeDescription": "JavaScript module that fetches GitHub repository data with eleventy-fetch, using a 1-day cache duration. Returns the stargazers count in a structured object.",
    "codeLanguage": "javascript",
    "codeTokens": 150,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/quicktips/cache-api-requests.md#2025-04-05_snippet_1",
    "pageTitle": "Caching API Requests in Eleventy with eleventy-fetch",
    "codeList": [
      {
        "language": "javascript",
        "code": "import Fetch from \"@11ty/eleventy-fetch\";\n\nexport default async function () {\n\t// https://developer.github.com/v3/repos/#get\n\tlet json = await Fetch(\"https://api.github.com/repos/11ty/eleventy\", {\n\t\tduration: \"1d\", // 1 day\n\t\ttype: \"json\", // also supports \"text\" or \"buffer\"\n\t});\n\n\treturn {\n\t\tstargazers: json.stargazers_count,\n\t};\n};"
      }
    ],
    "relevance": 0.815
  },
  {
    "codeTitle": "Running Eleventy with MDX Support",
    "codeDescription": "This shell command demonstrates how to run Eleventy with MDX support by specifying the --formats flag to include mdx files.",
    "codeLanguage": "shell",
    "codeTokens": 53,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/mdx.md#2025-04-05_snippet_1",
    "pageTitle": "MDX Integration in Eleventy",
    "codeList": [
      {
        "language": "shell",
        "code": "npx @11ty/eleventy --formats=mdx"
      }
    ],
    "relevance": 0.815
  },
  {
    "codeTitle": "Using @text with webc:nokeep in WebC",
    "codeDescription": "Demonstrates using @text with webc:nokeep to replace the outer element with the escaped text content.",
    "codeLanguage": "html",
    "codeTokens": 61,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_25",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<!-- webc:nokeep will replace the outer element -->\n<p @text=\"dataProperty\" webc:nokeep></p>"
      }
    ],
    "relevance": 0.815
  },
  {
    "codeTitle": "Changing Cache Directory in Eleventy Fetch",
    "codeDescription": "Example of specifying a custom cache directory for Eleventy Fetch. It's recommended to add this directory to .gitignore.",
    "codeLanguage": "javascript",
    "codeTokens": 64,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/fetch.md#2025-04-05_snippet_6",
    "pageTitle": "Eleventy Fetch Plugin Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "import Fetch from \"@11ty/eleventy-fetch\";\n\nawait Fetch(\"https://…\", {\n\tdirectory: \".cache\",\n});"
      }
    ],
    "relevance": 0.815
  },
  {
    "codeTitle": "Initializing and Incrementing Counter in Nunjucks",
    "codeDescription": "Sets up a counter variable and increments it for use in numbering sections.",
    "codeLanguage": "nunjucks",
    "codeTokens": 44,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/community.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Community Contribution Guide",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{% set count = 0 %}\n\n{% set count = count + 1 %}"
      }
    ],
    "relevance": 0.814
  },
  {
    "codeTitle": "Generating Custom File Formats with Permalinks in Eleventy",
    "codeDescription": "Example of using permalinks to output content as JSON instead of HTML, useful for creating search indexes or other data files.",
    "codeLanguage": "markdown",
    "codeTokens": 58,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/permalinks.md#2025-04-05_snippet_5",
    "pageTitle": "Eleventy Permalinks Configuration Guide",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\npermalink: \"index.json\"\n---\n\n<%- JSON.stringify(collections.all) -%>"
      }
    ],
    "relevance": 0.812
  },
  {
    "codeTitle": "Configuring Pug Options in Eleventy",
    "codeDescription": "Example showing how to set Pug-specific options like debug mode when configuring the plugin",
    "codeLanguage": "javascript",
    "codeTokens": 77,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/pug.md#2025-04-05_snippet_2",
    "pageTitle": "Pug Template Integration Guide for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import pugPlugin from \"@11ty/eleventy-plugin-pug\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addPlugin(pugPlugin, {\n\t\tdebug: true\n\t});\n}"
      }
    ],
    "relevance": 0.812
  },
  {
    "codeTitle": "Including Current Page in Breadcrumbs for Eleventy Navigation (Nunjucks)",
    "codeDescription": "Shows how to include the current page in breadcrumb results using the includeSelf option in Nunjucks templates.",
    "codeLanguage": "jinja2",
    "codeTokens": 65,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_25",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "jinja2",
        "code": "{% set navPages = collections.all | eleventyNavigationBreadcrumb(\"Bats\", { includeSelf: true }) %}\n{{ navPages | dump | safe }}"
      }
    ],
    "relevance": 0.812
  },
  {
    "codeTitle": "Nunjucks Project Grid Template",
    "codeDescription": "Nunjucks template logic for rendering starter projects in a grid layout, handling official, featured, and community projects separately with conditional rendering and Lighthouse score data integration.",
    "codeLanguage": "nunjucks",
    "codeTokens": 258,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/starter.md#2025-04-05_snippet_1",
    "pageTitle": "11ty Starter Projects Documentation",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{%- for site in starters | sortObjectByOrder %}\n{%- if site.disabled != true and site.official %}\n{%- set siteData = speedlifyStarters.data[site.demo] or speedlifyStarters.data[site.url] %}\n  {% include \"site-card.njk\" %}\n{%- endif %}{%- endfor %}\n{%- for site in starters | sortObjectByOrder %}\n{%- if site.disabled != true and site.featured %}\n{%- set siteData = speedlifyStarters.data[site.demo] or speedlifyStarters.data[site.url] %}\n  {% include \"site-card.njk\" %}\n{%- endif %}{%- endfor %}\n{%- for name, site in starters | shuffle %}\n{%- if site.disabled != true and not site.official and not site.featured %}\n{%- set siteData = speedlifyStarters.data[site.demo] or speedlifyStarters.data[site.url] %}\n  {% include \"site-card.njk\" %}\n{%- endif %}{%- endfor %}"
      }
    ],
    "relevance": 0.812
  },
  {
    "codeTitle": "Configuring Pug Plugin in Eleventy",
    "codeDescription": "Basic configuration to add Pug template support to Eleventy using the plugin",
    "codeLanguage": "javascript",
    "codeTokens": 68,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/pug.md#2025-04-05_snippet_1",
    "pageTitle": "Pug Template Integration Guide for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import pugPlugin from \"@11ty/eleventy-plugin-pug\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addPlugin(pugPlugin);\n}"
      }
    ],
    "relevance": 0.81
  },
  {
    "codeTitle": "Creating Basic Pagination Navigation Structure in CommonJS",
    "codeDescription": "Demonstrates how to create an accessible pagination navigation structure in CommonJS module format with proper ARIA attributes and semantics.",
    "codeLanguage": "cjs",
    "codeTokens": 153,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/pagination/nav.md#2025-04-05_snippet_3",
    "pageTitle": "Creating Pagination Navigation in Eleventy",
    "codeList": [
      {
        "language": "js",
        "code": "module.exports = function({ pagination, page }) {\n\treturn `<nav aria-labelledby=\"my-pagination\">\n\t<h2 id=\"my-pagination\">This is my Pagination</h2>\n\t<ol>\n\t\t${pagination.pages.map((pageEntry, index) => {\n\t\t\treturn `<li><a href=\"${pagination.hrefs[index]}\"${pagination.hrefs[index] === page.url ? \" aria-current=\\\"page\\\"\" : \"\"}>${\"Page \" + (index + 1)}</a></li>`;\n\t\t}).join(\"\\n\\t\\t\")}\n\t</ol>\n</nav>`;\n};"
      }
    ],
    "relevance": 0.81
  },
  {
    "codeTitle": "Disabling Indented Code Blocks in Eleventy v1",
    "codeDescription": "Shows how to disable the Indented Code Blocks feature in Eleventy version 1.0 or older using the setLibrary method.",
    "codeLanguage": "javascript",
    "codeTokens": 94,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/markdown.md#2025-04-05_snippet_8",
    "pageTitle": "Using Markdown with Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "const markdownIt = require(\"markdown-it\");\n\nmodule.exports = function (eleventyConfig) {\n\tlet options = {\n\t\t// … truncated for brevity\n\t};\n\n\televentyConfig.setLibrary(\"md\", markdownIt(options).disable(\"code\"));\n};"
      }
    ],
    "relevance": 0.81
  },
  {
    "codeTitle": "Advanced Mustache Plugin Configuration with Custom Library",
    "codeDescription": "Extended configuration that demonstrates how to override the default Mustache library instance with a custom one when adding the Mustache plugin to Eleventy.",
    "codeLanguage": "javascript",
    "codeTokens": 116,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/mustache.md#2025-04-05_snippet_2",
    "pageTitle": "Mustache Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import mustache from \"mustache\";\nimport mustachePlugin from \"@11ty/eleventy-plugin-mustache\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addPlugin(mustachePlugin, {\n\t\t// Override the `mustache` library instance\n\t\televentyLibraryOverride: mustache,\n\t});\n}"
      }
    ],
    "relevance": 0.809
  },
  {
    "codeTitle": "Using Template Syntax with Slugify Filter in Eleventy Permalinks",
    "codeDescription": "Demonstrates how to use template syntax and the slugify filter in permalinks to create URL-safe paths based on front matter data variables.",
    "codeLanguage": "markdown",
    "codeTokens": 66,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/permalinks.md#2025-04-05_snippet_3",
    "pageTitle": "Eleventy Permalinks Configuration Guide",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\ntitle: This is a New Path\npermalink: \"subdir/{{ title | slugify }}/index.html\"\n---"
      }
    ],
    "relevance": 0.808
  },
  {
    "codeTitle": "Conditional CSS Minification Template",
    "codeDescription": "Template example showing conditional CSS minification based on environment variables.",
    "codeLanguage": "html",
    "codeTokens": 62,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-js.md#2025-04-05_snippet_6",
    "pageTitle": "JavaScript Data Files in Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<style>\n{% if myProject.environment == \"production\" %}\n\t{{ css | cssmin | safe }}\n{% else %}\n\t{{ css | safe }}\n{% endif %}\n</style>"
      }
    ],
    "relevance": 0.808
  },
  {
    "codeTitle": "Interactive Filter Form HTML",
    "codeDescription": "HTML form structure for filtering starter projects, including radio buttons to toggle between all projects and those with perfect Lighthouse scores.",
    "codeLanguage": "html",
    "codeTokens": 121,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/starter.md#2025-04-05_snippet_0",
    "pageTitle": "11ty Starter Projects Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<form>\n  <label>\n    <input type=\"radio\" name=\"projectfilter\" value=\"\" data-filter-key=\"tags\" checked>\n    Show all projects\n  </label>\n  <label>\n    <input type=\"radio\" name=\"projectfilter\" value=\"perfectlh\" data-filter-key=\"tags\">\n    Only show projects with a Four Hundos Lighthouse score\n  </label>\n</form>"
      }
    ],
    "relevance": 0.808
  },
  {
    "codeTitle": "Installing the HAML plugin for Eleventy",
    "codeDescription": "Command to install the HAML plugin package from npm, which is required for using HAML templates in Eleventy v3+.",
    "codeLanguage": "sh",
    "codeTokens": 53,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/haml.md#2025-04-05_snippet_0",
    "pageTitle": "HAML Template Language Configuration for Eleventy",
    "codeList": [
      {
        "language": "sh",
        "code": "npm install @11ty/eleventy-plugin-haml"
      }
    ],
    "relevance": 0.806
  },
  {
    "codeTitle": "Generated HTML Output from Layout Chaining in Eleventy",
    "codeDescription": "Example of the final HTML output after applying layout chaining in Eleventy. It shows how the content flows through multiple layouts to produce the final structure.",
    "codeLanguage": "html",
    "codeTokens": 131,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/layout-chaining.md#2025-04-05_snippet_3",
    "pageTitle": "Layout Chaining in Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>My Rad Blog</title>\n  </head>\n  <body>\n    <main>\n      <h1>My Rad Markdown Blog Post<h1>\n    </main>\n  </body>\n</html>"
      }
    ],
    "relevance": 0.806
  },
  {
    "codeTitle": "Setting Basic Permalinks in Eleventy Front Matter",
    "codeDescription": "Example of setting a basic permalink in YAML front matter to remap a template to a custom output path. This writes the file to a new location in the output directory.",
    "codeLanguage": "yaml",
    "codeTokens": 62,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/permalinks.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Permalinks Configuration Guide",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\npermalink: \"this-is-a-new-path/subdirectory/testing/\"\n---"
      }
    ],
    "relevance": 0.805
  },
  {
    "codeTitle": "Adding a Child Page to Navigation",
    "codeDescription": "YAML front matter showing how to add a page as a child navigation item using the parent property.",
    "codeLanguage": "yaml",
    "codeTokens": 50,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_3",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\neleventyNavigation:\n  key: Humans\n  parent: Mammals\n---"
      }
    ],
    "relevance": 0.805
  },
  {
    "codeTitle": "Creating Basic Pagination Navigation Structure in Nunjucks",
    "codeDescription": "Demonstrates how to create an accessible pagination navigation structure in Nunjucks templates with proper ARIA attributes and semantics.",
    "codeLanguage": "njk",
    "codeTokens": 139,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/pagination/nav.md#2025-04-05_snippet_1",
    "pageTitle": "Creating Pagination Navigation in Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<nav aria-labelledby=\"my-pagination\">\n\t<h2 id=\"my-pagination\">This is my Pagination</h2>\n\t<ol>\n\t\t{%- for pageEntry in pagination.pages %}\n\t\t<li><a href=\"{{ pagination.hrefs[ loop.index0 ] }}\"{% if pagination.hrefs[ loop.index0 ] == page.url %} aria-current=\"page\"{% endif %}>Page {{ loop.index }}</a></li>\n\t\t{%- endfor %}\n\t</ol>\n</nav>"
      }
    ],
    "relevance": 0.805
  },
  {
    "codeTitle": "Looping with webc:for",
    "codeDescription": "Shows how to use webc:for to loop over data with HTML, including examples for arrays, objects, and iterables.",
    "codeLanguage": "html",
    "codeTokens": 204,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_11",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<!-- renders three div elements -->\n<div webc:for=\"item of [1, 2, 3]\" @text=\"item\"></div>\n\n<!-- access the loop index (zero-indexed) -->\n<div webc:for=\"(item, index) of [1, 2, 3]\" @text=\"index\"></div>\n\n<!-- name these whatever you'd like -->\n<div webc:for=\"myItem of [1, 2, 3]\" @text=\"myItem\"></div>\n<div webc:for=\"(myItem, myIndex) of [1, 2, 3]\" @text=\"myIndex\"></div>\n\n<!-- any iterable -->\n<div webc:for=\"item of new Set([1, 2, 3])\" @text=\"item\"></div>"
      },
      {
        "language": "html",
        "code": "<!-- renders two div elements -->\n<div webc:for=\"key in { a: 1, b: 2 }\" @text=\"key\"></div>\n\n<!-- access the value -->\n<div webc:for=\"(key, value) in { a: 1, b: 2 }\" @text=\"value\"></div>\n\n<!-- access the loop index (zero-indexed) -->\n<div webc:for=\"(key, value, index) in { a: 1, b: 2 }\" @text=\"index\"></div>\n\n<!-- name these whatever you'd like -->\n<div\n\twebc:for=\"(myKey, myValue, myIndex) in { a: 1, b: 2 }\"\n\t@text=\"myIndex\"\n></div>\n\n<!-- use `Object.values` or `Object.keys`, sure -->\n<div webc:for=\"value of Object.values({ a: 1, b: 2 })\"></div>\n<div webc:for=\"key of Object.keys({ a: 1, b: 2 })\"></div>"
      }
    ],
    "relevance": 0.805
  },
  {
    "codeTitle": "Generating Table of Contents with Nunjucks in Eleventy",
    "codeDescription": "Uses Nunjucks templating to generate a table of contents for Eleventy Projects, leveraging the navigation data and custom filters.",
    "codeLanguage": "nunjucks",
    "codeTokens": 64,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/projects.md#2025-04-05_snippet_1",
    "pageTitle": "Guide to Eleventy Projects",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{{ \"Eleventy Projects\" | nav | eleventyNavigationToHtml({ showExcerpt: true }) | safe }}"
      }
    ],
    "relevance": 0.805
  },
  {
    "codeTitle": "Installing Eleventy v2.0 Beta",
    "codeDescription": "Commands to install the beta version of Eleventy v2.0 either locally in a project or globally on your system using npm.",
    "codeLanguage": "sh",
    "codeTokens": 76,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2023-01-18-eleventy-v2-beta.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy v2.0 Beta Release Documentation",
    "codeList": [
      {
        "language": "sh",
        "code": "# Local project\nnpm install @11ty/eleventy@beta\n\n# Global install\nnpm install @11ty/eleventy@beta -g"
      }
    ],
    "relevance": 0.804
  },
  {
    "codeTitle": "Running Eleventy with Same Input and Output Directory",
    "codeDescription": "Example command line usage showing how to run Eleventy with the same input and output directory, which can lead to duplicate template errors when processing HTML files multiple times.",
    "codeLanguage": "bash",
    "codeTokens": 89,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/html.md#2025-04-05_snippet_0",
    "pageTitle": "HTML Template Language in Eleventy",
    "codeList": [
      {
        "language": "bash",
        "code": "$ eleventy --input=. --output=. --formats=md,html\nWriting ./README/index.html from ./README.md\n\n$ eleventy --input=. --output=. --formats=md,html"
      }
    ],
    "relevance": 0.803
  },
  {
    "codeTitle": "Configuring Global Error Handling for Missing Extensions in Eleventy",
    "codeDescription": "JavaScript configuration to disable the error for missing file extensions project-wide, allowing URLs without file extensions.",
    "codeLanguage": "javascript",
    "codeTokens": 67,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/permalinks.md#2025-04-05_snippet_7",
    "pageTitle": "Eleventy Permalinks Configuration Guide",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\t// Disable this error for the project.\n\televentyConfig.configureErrorReporting({ allowMissingExtensions: true })\n};"
      }
    ],
    "relevance": 0.802
  },
  {
    "codeTitle": "Basic Eleventy Image WebC Component Usage",
    "codeDescription": "Basic usage examples of the eleventy-image WebC component using both the webc:is syntax and element syntax.",
    "codeLanguage": "html",
    "codeTokens": 64,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image-webc.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Image WebC Component Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<img webc:is=\"eleventy-image\" src=\"cat.jpg\" alt=\"photo of my tabby cat\">"
      },
      {
        "language": "html",
        "code": "<eleventy-image src=\"cat.jpg\" alt=\"photo of my tabby cat\"></eleventy-image>"
      }
    ],
    "relevance": 0.802
  },
  {
    "codeTitle": "Rendering WebC Template in Eleventy",
    "codeDescription": "Shows how to render a WebC template for a build comparison component with specific attributes.",
    "codeLanguage": "html",
    "codeTokens": 55,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/performance.md#2025-04-05_snippet_1",
    "pageTitle": "Performance Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "{% renderTemplate \"webc\" %}<build-comparison @show-all></build-comparison>{% endrenderTemplate %}"
      }
    ],
    "relevance": 0.802
  },
  {
    "codeTitle": "Eleventy Front Matter Configuration",
    "codeDescription": "YAML front matter that sets the news title and configures Eleventy navigation with a parent page of 'Blog'",
    "codeLanguage": "yaml",
    "codeTokens": 59,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2025-01-13-certification.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Certification Form Implementation",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\nnewstitle: Eleventy Super Professional Linkedin Certification\neleventyNavigation:\n  parent: Blog\n---"
      }
    ],
    "relevance": 0.8
  },
  {
    "codeTitle": "Properly Formatted Shortcode for Markdown",
    "codeDescription": "A correctly implemented shortcode that avoids unintended code block formatting in Markdown by not using indentation.",
    "codeLanguage": "javascript",
    "codeTokens": 69,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/markdown.md#2025-04-05_snippet_6",
    "pageTitle": "Using Markdown with Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "// ✅ This will return expected output\neleventyConfig.addShortcode(\"goodShortcode\", function () {\n\treturn `\nThis will not be a code block in a markdown file.\n`;\n});"
      }
    ],
    "relevance": 0.8
  },
  {
    "codeTitle": "Sample HTML Output for Pagination Navigation in 11ty",
    "codeDescription": "The resulting HTML output for the pagination navigation component when implemented on the first page of a paginated collection. Shows the structure with active state indicators.",
    "codeLanguage": "html",
    "codeTokens": 192,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/pagination/nav.md#2025-04-05_snippet_16",
    "pageTitle": "Creating Pagination Navigation in Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<nav aria-labelledby=\"my-pagination\">\n\t<h2 id=\"my-pagination\">This is my Pagination</h2>\n\t<ol>\n\t\t<li>First</li>\n\t\t<li>Previous</li>\n\t\t<li><a href=\"/test-array/\" aria-current=\"page\">Page 1</a></li>\n\t\t<li><a href=\"/test-array/1/\">Page 2</a></li>\n\t\t<li><a href=\"/test-array/2/\">Page 3</a></li>\n\t\t<li><a href=\"/test-array/1/\">Next</a></li>\n\t\t<li><a href=\"/test-array/2/\">Last</a></li>\n\t</ol>\n</nav>"
      }
    ],
    "relevance": 0.8
  },
  {
    "codeTitle": "Defining Page Metadata in Markdown Frontmatter",
    "codeDescription": "Sets the news title and Eleventy navigation properties for the page using YAML frontmatter in Markdown.",
    "codeLanguage": "markdown",
    "codeTokens": 68,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2021-10-18-new-mascot-from-geri-coady.md#2025-04-05_snippet_0",
    "pageTitle": "New Eleventy Mascot Announcement",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\nnewstitle: A new Eleventy mascot from Geri Coady\neleventyNavigation:\n  parent: Blog\n  key: New mascot\n---"
      }
    ],
    "relevance": 0.8
  },
  {
    "codeTitle": "Using transformWithHtmlBase Filter",
    "codeDescription": "Example of using the transformWithHtmlBase filter to transform HTML blocks with URL modifications.",
    "codeLanguage": "nunjucks",
    "codeTokens": 57,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/html-base.md#2025-04-05_snippet_2",
    "pageTitle": "HTML Base Plugin Documentation for Eleventy",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{% set html %}<img src=\"/img/photo.jpg\">{%- endset %}\n{{ html | transformWithHtmlBase | safe }}"
      }
    ],
    "relevance": 0.798
  },
  {
    "codeTitle": "Creating Basic Pagination Navigation Structure in Liquid",
    "codeDescription": "Demonstrates how to create an accessible pagination navigation structure in Liquid templates with proper ARIA attributes and semantics.",
    "codeLanguage": "liquid",
    "codeTokens": 140,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/pagination/nav.md#2025-04-05_snippet_0",
    "pageTitle": "Creating Pagination Navigation in Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<nav aria-labelledby=\"my-pagination\">\n\t<h2 id=\"my-pagination\">This is my Pagination</h2>\n\t<ol>\n\t\t{%- for pageEntry in pagination.pages %}\n\t\t<li><a href=\"{{ pagination.hrefs[ forloop.index0 ] }}\"{% if pagination.hrefs[ forloop.index0 ] == page.url %} aria-current=\"page\"{% endif %}>Page {{ forloop.index }}</a></li>\n\t\t{%- endfor %}\n\t</ol>\n</nav>"
      }
    ],
    "relevance": 0.798
  },
  {
    "codeTitle": "Displaying External Link with Screenshot in HTML",
    "codeDescription": "This HTML snippet creates a link to the Eleventy Wikipedia page, displaying a screenshot of the page using the 11ty.dev screenshot service. It includes accessibility attributes for the image.",
    "codeLanguage": "html",
    "codeTokens": 125,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2024-10-17-wikipedia.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Wikipedia Announcement",
    "codeList": [
      {
        "language": "html",
        "code": "<a href=\"{{ external_url }}\" class=\"elv-externalexempt opengraph-card\">\n  <img src=\"https://v1.screenshot.11ty.dev/{{ external_url | urlencode }}/opengraph/\" alt=\"A screenshot of the Wikipedia page for Eleventy\" loading=\"lazy\" decoding=\"async\" width=\"650\" height=\"341\">\n</a>"
      }
    ],
    "relevance": 0.798
  },
  {
    "codeTitle": "Using Paired Shortcodes in Nunjucks",
    "codeDescription": "This snippet shows how to use the paired 'user' shortcode in a Nunjucks template. It demonstrates that other Nunjucks tags or content can be included within the shortcode.",
    "codeLanguage": "nunjucks",
    "codeTokens": 82,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/nunjucks.md#2025-04-05_snippet_8",
    "pageTitle": "Nunjucks Template Language in Eleventy",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{% user \"Zach Leatherman\", \"zachleat\" %}\n  Zach likes to take long walks on Nebraska beaches.\n{% enduser %}"
      }
    ],
    "relevance": 0.797
  },
  {
    "codeTitle": "Initializing YAML Front Matter for Eleventy Blog Post",
    "codeDescription": "YAML front matter configuration for an Eleventy blog post, setting the news title and navigation parent.",
    "codeLanguage": "yaml",
    "codeTokens": 55,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2023-07-04-six-million.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy npm Downloads Milestone Announcement",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\nnewstitle: Six Million npm Downloads!\neleventyNavigation:\n  parent: Blog\n---"
      }
    ],
    "relevance": 0.796
  },
  {
    "codeTitle": "JSON Output for Eleventy Navigation Branch Children",
    "codeDescription": "Displays the expected JSON output when retrieving children of a specific navigation key using the eleventyNavigation filter.",
    "codeLanguage": "json",
    "codeTokens": 113,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_20",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "json",
        "code": "[\n\t{\n\t\t\"key\": \"Humans\",\n\t\t\"parentKey\": \"Mammals\",\n\t\t\"url\": \"/humans/\",\n\t\t\"title\": \"Humans\"\n\t},\n\t{\n\t\t\"key\": \"Bats\",\n\t\t\"parentKey\": \"Mammals\",\n\t\t\"url\": \"/bats/\",\n\t\t\"title\": \"Bats\"\n\t}\n]"
      }
    ],
    "relevance": 0.795
  },
  {
    "codeTitle": "Certification Form HTML Implementation",
    "codeDescription": "HTML form with a checkbox input and submit button, styled with custom classes for visual enhancement. The form submits to a success page and includes required validation.",
    "codeLanguage": "html",
    "codeTokens": 126,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2025-01-13-certification.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Certification Form Implementation",
    "codeList": [
      {
        "language": "html",
        "code": "<form action=\"/blog/certification/success/\" class=\"fl fl-nowrap fl-center\">\n\t<label class=\"elv-type4\">\n\t\t<input type=\"checkbox\" required> I heard Eleventy was good\n\t</label>\n\t<button class=\"btn-primary btn-primary-sm benchnine rainbow-active rainbow-active-noanim elv-externalexempt\">Certify Me</button>\n</form>"
      }
    ],
    "relevance": 0.795
  },
  {
    "codeTitle": "Adding Previous and Next Links in Nunjucks",
    "codeDescription": "Demonstrates how to add previous and next pagination links in Nunjucks templates, conditionally showing them based on the current page position.",
    "codeLanguage": "njk",
    "codeTokens": 199,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/pagination/nav.md#2025-04-05_snippet_7",
    "pageTitle": "Creating Pagination Navigation in Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<nav aria-labelledby=\"my-pagination\">\n\t<h2 id=\"my-pagination\">This is my Pagination</h2>\n\t<ol>\n\t\t{%- if pagination.href.previous %}<li><a href=\"{{ pagination.href.previous }}\">Previous</a></li>{% endif %}\n\t\t{%- for pageEntry in pagination.pages %}\n\t\t<li><a href=\"{{ pagination.hrefs[ loop.index0 ] }}\"{% if pagination.hrefs[ loop.index0 ] == page.url %} aria-current=\"page\"{% endif %}>Page {{ loop.index }}</a></li>\n\t\t{%- endfor %}\n\t\t{%- if pagination.href.next %}<li><a href=\"{{ pagination.href.next }}\">Next</a></li>{% endif %}\n\t</ol>\n</nav>"
      }
    ],
    "relevance": 0.795
  },
  {
    "codeTitle": "Displaying All Performance Measurements in Eleventy (Windows)",
    "codeDescription": "Command to show all performance measurements in Eleventy for Windows systems. This sets the DEBUG environment variable to display Eleventy benchmark data.",
    "codeLanguage": "bash",
    "codeTokens": 61,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/debug-performance.md#2025-04-05_snippet_1",
    "pageTitle": "Analyzing Build Performance in Eleventy",
    "codeList": [
      {
        "language": "bash",
        "code": "set DEBUG=Eleventy:Benchmark* & npx @11ty/eleventy"
      }
    ],
    "relevance": 0.795
  },
  {
    "codeTitle": "Using webc:elseif and webc:else",
    "codeDescription": "Demonstrates the use of webc:elseif and webc:else for additional conditional logic.",
    "codeLanguage": "html",
    "codeTokens": 84,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_10",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<div webc:if=\"false\">This will not render</div>\n<!-- interspersing comments works ok -->\n<div webc:elseif=\"true\">This will render</div>\n<div webc:else>This will not render</div>"
      }
    ],
    "relevance": 0.795
  },
  {
    "codeTitle": "Setting Event Emitter Mode in Eleventy Configuration",
    "codeDescription": "Shows how to configure Eleventy's event emitter to run callbacks sequentially instead of the default parallel execution, using the setEventEmitterMode configuration method.",
    "codeLanguage": "javascript",
    "codeTokens": 63,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/events.md#2025-04-05_snippet_6",
    "pageTitle": "Configuration Events in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig){\n\televentyConfig.setEventEmitterMode(\"sequential\");\n}"
      }
    ],
    "relevance": 0.795
  },
  {
    "codeTitle": "Displaying Removal Notice for Edge Plugin in Liquid",
    "codeDescription": "This Liquid template code generates a callout notice informing users about the removal of the Edge plugin in Eleventy 3.0. It includes links to survey results, previous documentation, and alternative solutions.",
    "codeLanguage": "liquid",
    "codeTokens": 225,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/edge.md#2025-04-05_snippet_1",
    "pageTitle": "Edge Plugin Documentation for Eleventy",
    "codeList": [
      {
        "language": "liquid",
        "code": "{% callout \"error\" %}<strong>Feature Removal</strong>: Per the <a href=\"/blog/community-survey-results/#which-official-plugins-do-you-use-in-your-projects\">results of our Eleventy Community Survey 2023</a> (and announced in our <a href=\"/blog/canary-eleventy-v3/\">first alpha</a> and <a href=\"/blog/three-point-oh-beta-one/\">beta releases</a>), this feature was removed in Eleventy 3.0. You can go back to the <a href=\"https://v2.11ty.dev/docs/plugins/edge/\">v2 documentation</a> or create your <a href=\"/docs/programmatic/\">own bundle using the Eleventy programmatic API</a>.{% endcallout %}"
      }
    ],
    "relevance": 0.794
  },
  {
    "codeTitle": "Using Custom Title for Navigation Links",
    "codeDescription": "YAML front matter showing how to use a different title for navigation display than the key value.",
    "codeLanguage": "yaml",
    "codeTokens": 54,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_5",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\neleventyNavigation:\n  key: Mammals\n  title: All of the Mammals\n---"
      }
    ],
    "relevance": 0.794
  },
  {
    "codeTitle": "JSON Output for Eleventy Navigation Breadcrumbs",
    "codeDescription": "Displays the expected JSON output when generating breadcrumb navigation using the eleventyNavigationBreadcrumb filter.",
    "codeLanguage": "json",
    "codeTokens": 64,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_23",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "json",
        "code": "[\n\t{\n\t\t\"key\": \"Mammals\",\n\t\t\"url\": \"/mammals/\",\n\t\t\"title\": \"Mammals\"\n\t}\n]"
      }
    ],
    "relevance": 0.792
  },
  {
    "codeTitle": "Transform Execution Order Example",
    "codeDescription": "Shows the order of execution for multiple transforms in Eleventy configuration. Transforms are executed in the order they are added to the configuration.",
    "codeLanguage": "javascript",
    "codeTokens": 77,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/transforms.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Transforms Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "eleventyConfig.addTransform(\"first\", () => {});\neleventyConfig.addTransform(\"second\", () => {});\neleventyConfig.addTransform(\"third\", () => {});"
      }
    ],
    "relevance": 0.792
  },
  {
    "codeTitle": "Configuring YAML Front Matter for Eleventy Blog Post",
    "codeDescription": "Sets up the YAML front matter for an Eleventy blog post, including the title and navigation structure.",
    "codeLanguage": "yaml",
    "codeTokens": 54,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2022-09-30-four-million.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Website Blog Post",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\nnewstitle: Four Million npm Downloads!\neleventyNavigation:\n  parent: Blog\n---"
      }
    ],
    "relevance": 0.792
  },
  {
    "codeTitle": "Installing Inclusive Language Plugin via npm",
    "codeDescription": "Command to install the @11ty/eleventy-plugin-inclusive-language package using npm.",
    "codeLanguage": "bash",
    "codeTokens": 46,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/inclusive-language.md#2025-04-05_snippet_0",
    "pageTitle": "Inclusive Language Plugin for Eleventy",
    "codeList": [
      {
        "language": "bash",
        "code": "npm install @11ty/eleventy-plugin-inclusive-language"
      }
    ],
    "relevance": 0.791
  },
  {
    "codeTitle": "Configuring Base File Name for Data Files in Eleventy",
    "codeDescription": "Shows how to set a static base file name for data files instead of using the current folder name by default. This uses the setDataFileBaseName method to specify which base name Eleventy should look for with data files.",
    "codeLanguage": "javascript",
    "codeTokens": 98,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/config.md#2025-04-05_snippet_11",
    "pageTitle": "Configuring Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\t// Looks for index.json and index.11tydata.json instead of using folder names\n\televentyConfig.setDataFileBaseName(\"index\");\n};"
      }
    ],
    "relevance": 0.79
  },
  {
    "codeTitle": "Rendering Markdown Navigation with Options in Liquid",
    "codeDescription": "This snippet demonstrates how to use the eleventyNavigationToMarkdown filter with custom options in Liquid syntax. It shows how to enable showing excerpts in the navigation.",
    "codeLanguage": "liquid",
    "codeTokens": 96,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_33",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "liquid",
        "code": "---\nnavToMdOptions:\n  # Show excerpts (if they exist in data, read more above)\n  showExcerpt: false\n---\n{{ collections.all | eleventyNavigation | eleventyNavigationToMarkdown: navToMdOptions | json }}"
      }
    ],
    "relevance": 0.79
  },
  {
    "codeTitle": "Blog Post YAML Frontmatter Configuration",
    "codeDescription": "YAML frontmatter defining the blog post title and navigation parent category",
    "codeLanguage": "yaml",
    "codeTokens": 50,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2024-01-30-conference.md#2025-04-05_snippet_0",
    "pageTitle": "11ty Conference Announcement Post",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\nnewstitle: \"We're running an 11ty Conference!\"\neleventyNavigation:\n  parent: Blog\n---"
      }
    ],
    "relevance": 0.79
  },
  {
    "codeTitle": "Memoized Shortcode Implementation",
    "codeDescription": "Example of implementing a memoized shortcode using the memoize package to cache function results for improved performance.",
    "codeLanguage": "JavaScript",
    "codeTokens": 75,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/shortcodes.md#2025-04-05_snippet_2",
    "pageTitle": "Eleventy Template Shortcodes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "import memoize from \"memoize\";\n\nexport default function(eleventyConfig) {\n\televentyConfig.addShortcode(\"htmlEntities\", memoize(str => {\n\t\treturn encode(str);\n\t}));\n};"
      }
    ],
    "relevance": 0.788
  },
  {
    "codeTitle": "Configuring Global Concurrency in 11ty Fetch",
    "codeDescription": "Shows how to modify the global concurrency setting for fetch operations. Default value is 10, example sets it to 4.",
    "codeLanguage": "javascript",
    "codeTokens": 61,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/fetch.md#2025-04-05_snippet_11",
    "pageTitle": "Eleventy Fetch Plugin Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "import Fetch from \"@11ty/eleventy-fetch\";\nFetch.concurrency = 4; // default is 10"
      }
    ],
    "relevance": 0.788
  },
  {
    "codeTitle": "Defining a Base HTML Layout in Nunjucks for Eleventy",
    "codeDescription": "Example of a base Nunjucks layout file (mylayout.njk) that provides the HTML structure. It includes placeholders for title and content.",
    "codeLanguage": "html",
    "codeTokens": 114,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/layout-chaining.md#2025-04-05_snippet_2",
    "pageTitle": "Layout Chaining in Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"utf-8\" />\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t\t<title>{{title}}</title>\n\t</head>\n\t<body>\n\t\t{{ content | safe }}\n\t</body>\n</html>"
      }
    ],
    "relevance": 0.788
  },
  {
    "codeTitle": "Configuring Eleventy Navigation in YAML",
    "codeDescription": "This YAML front matter sets up the navigation structure for an Eleventy blog post about stability. It defines the post title and sets the parent navigation item to 'Blog'.",
    "codeLanguage": "yaml",
    "codeTokens": 69,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2023-04-05-stability.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Stability Analysis",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\nnewstitle: \"The Stability of Eleventy\"\neleventyNavigation:\n  parent: Blog\n---"
      }
    ],
    "relevance": 0.788
  },
  {
    "codeTitle": "Displaying Year-over-Year Metrics Table in HTML",
    "codeDescription": "HTML table that presents Eleventy's cumulative growth metrics from 2023 to 2024, showing percentage changes across various platforms including npm downloads, GitHub dependents, stars, and social media followers.",
    "codeLanguage": "html",
    "codeTokens": 985,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2025-01-08-review-2024.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy 2024 in Review Blog Post",
    "codeList": [
      {
        "language": "html",
        "code": "<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Cumulative Metric</th>\n\t\t\t<th class=\"numeric\">2023</th>\n\t\t\t<th class=\"numeric\">2024</th>\n\t\t\t<th class=\"numeric\">Change</th>\n\t\t</tr>\n\t</thead>\n\t\t<tr>\n\t\t\t<td>npm Downloads</td>\n\t\t\t<td class=\"numeric\">7,585,613</td>\n\t\t\t<td class=\"numeric\">10,711,017</td>\n\t\t\t<td class=\"numeric numeric-up\">41.20%</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><a href=\"https://github.com/11ty/eleventy/network/dependents\">GitHub dependents</a></td>\n\t\t\t<td class=\"numeric numeric-note\">69,632</td>\n\t\t\t<td class=\"numeric\">79,563</td>\n\t\t\t<td class=\"numeric numeric-up\">12.49%</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><a href=\"https://github.com/11ty/eleventy/stargazers\">GitHub Stars</a></td>\n\t\t\t<td class=\"numeric\">15,569</td>\n\t\t\t<td class=\"numeric\">17,460</td>\n\t\t\t<td class=\"numeric numeric-up\">12.14%</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><a href=\"https://github.com/11ty/11ty-community/\"><code>11ty-community</code></a> Sites</td>\n\t\t\t<td class=\"numeric\"><a href=\"https://github.com/11ty/11ty-community/tree/6a1f48cafc2c3159720cd3328161cc8cdff362e2/built-with-eleventy\">1,018</a></td>\n\t\t\t<td class=\"numeric\"><a href=\"https://github.com/11ty/11ty-community/tree/87be4cc3b48df684f37aa418d5430544be0ccced/built-with-eleventy\">1,175</a></td>\n\t\t\t<td class=\"numeric numeric-up\">15.42%</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><a href=\"https://fosstodon.org/@eleventy\">Mastodon Friends</a></td>\n\t\t\t<td class=\"numeric numeric-note\">3,565</td>\n\t\t\t<td class=\"numeric\">4,217</td>\n\t\t\t<td class=\"numeric numeric-up\">18.28%</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><a href=\"https://bsky.app/profile/11ty.dev\">Bluesky Friends</a></td>\n\t\t\t<td class=\"numeric numeric-note\">99</td>\n\t\t\t<td class=\"numeric\">2,344</td>\n\t\t\t<td class=\"numeric numeric-up\">2267.67%</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><a href=\"https://www.youtube.com/c/EleventyVideo\">YouTube Subscribers</a></td>\n\t\t\t<td class=\"numeric\">1,880</td>\n\t\t\t<td class=\"numeric\">2,498</td>\n\t\t\t<td class=\"numeric numeric-up\">32.87%</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><a href=\"/blog/discord/\">Discord Members</a></td>\n\t\t\t<td class=\"numeric numeric-note\">3,093</td>\n\t\t\t<td class=\"numeric\">3,253</td>\n\t\t\t<td class=\"numeric numeric-up\">5.17%</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><a href=\"https://www.linkedin.com/company/11ty/\">LinkedIn Super Professional Network</a></td>\n\t\t\t<td class=\"numeric numeric-note\">265</td>\n\t\t\t<td class=\"numeric\">737</td>\n\t\t\t<td class=\"numeric numeric-up\">178.11%</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><a href=\"https://buttondown.com/11ty\">Newsletter Subscribers</a></td>\n\t\t\t<td class=\"numeric numeric-note\">268</td>\n\t\t\t<td class=\"numeric\">1607</td>\n\t\t\t<td class=\"numeric numeric-up\">499.62%</td>\n\t\t</tr>\n\t</tbody>\n</table>"
      }
    ],
    "relevance": 0.786
  },
  {
    "codeTitle": "HTML Implementation of Sparkline API Call",
    "codeDescription": "An example HTML img tag implementation using the Sparklines API to generate a visualization of post frequency data. It includes proper attributes like dimensions, alt text, and loading optimization.",
    "codeLanguage": "html",
    "codeTokens": 140,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/services/sparklines.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Sparklines API Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<img\n\tsrc=\"https://v1.sparkline.11ty.dev/120x30/41,25,9,12,10,6,12,14,19,17,23,30,36,21,40/%23123456/\"\n\twidth=\"120\"\n\theight=\"30\"\n\talt=\"Sparkline representing frequency of posts written from 2007 to 2021\"\n\tloading=\"lazy\"\n\tdecoding=\"async\"\n/>"
      }
    ],
    "relevance": 0.785
  },
  {
    "codeTitle": "Writing Bundle to File System",
    "codeDescription": "Example of writing a bundle to a file and referencing it in HTML.",
    "codeLanguage": "html",
    "codeTokens": 45,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/bundle.md#2025-04-05_snippet_4",
    "pageTitle": "Bundle Plugin for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<link rel=\"stylesheet\" href=\"{% getBundleFileUrl \"css\" %}\">"
      }
    ],
    "relevance": 0.785
  },
  {
    "codeTitle": "Eleventy Custom Config Command",
    "codeDescription": "Command to specify a custom configuration file instead of the default .eleventy.js.",
    "codeLanguage": "bash",
    "codeTokens": 63,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/usage.md#2025-04-05_snippet_5",
    "pageTitle": "Eleventy Command Line Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "# Override the default eleventy project config filename (.eleventy.js)\nnpx @11ty/eleventy --config=myeleventyconfig.js"
      }
    ],
    "relevance": 0.785
  },
  {
    "codeTitle": "Installing the Eleventy Navigation Plugin via npm",
    "codeDescription": "Command to install the Eleventy Navigation plugin package from npm.",
    "codeLanguage": "bash",
    "codeTokens": 35,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_0",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "bash",
        "code": "npm install @11ty/eleventy-navigation"
      }
    ],
    "relevance": 0.785
  },
  {
    "codeTitle": "Setting Permalinks with Explicit index.html in Eleventy",
    "codeDescription": "Example showing how to explicitly include index.html in the permalink path. This is functionally equivalent to the previous example with a trailing slash.",
    "codeLanguage": "yaml",
    "codeTokens": 57,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/permalinks.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Permalinks Configuration Guide",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\npermalink: \"this-is-a-new-path/subdirectory/testing/index.html\"\n---"
      }
    ],
    "relevance": 0.785
  },
  {
    "codeTitle": "Basic Eleventy CLI Usage",
    "codeDescription": "Basic commands to run Eleventy, showing default input/output directory configuration. These commands process files in the current directory and output to ./_site.",
    "codeLanguage": "bash",
    "codeTokens": 98,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/usage.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Command Line Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "# Searches the current directory, outputs to ./_site\nnpx @11ty/eleventy\n\n# `npx @11ty/eleventy` is the same as:\nnpx @11ty/eleventy --input=. --output=_site"
      }
    ],
    "relevance": 0.785
  },
  {
    "codeTitle": "Disabling File Output with permalink: false in Eleventy",
    "codeDescription": "Setting permalink to false to prevent writing the file to the output directory. The template is still processed and available in collections but won't exist as a standalone file.",
    "codeLanguage": "yaml",
    "codeTokens": 52,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/permalinks.md#2025-04-05_snippet_2",
    "pageTitle": "Eleventy Permalinks Configuration Guide",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\npermalink: false\n---"
      }
    ],
    "relevance": 0.785
  },
  {
    "codeTitle": "Installing cross-env Package",
    "codeDescription": "Command to install the cross-env package for cross-platform environment variable support",
    "codeLanguage": "sh",
    "codeTokens": 30,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/environment-vars.md#2025-04-05_snippet_3",
    "pageTitle": "Environment Variables Guide for Eleventy",
    "codeList": [
      {
        "language": "sh",
        "code": "npm install cross-env"
      }
    ],
    "relevance": 0.784
  },
  {
    "codeTitle": "Installing cross-env Package",
    "codeDescription": "Command to install the cross-env package for cross-platform environment variable support",
    "codeLanguage": "sh",
    "codeTokens": 30,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/environment-vars.md#2025-04-05_snippet_3",
    "pageTitle": "Environment Variables Guide for Eleventy",
    "codeList": [
      {
        "language": "sh",
        "code": "npm install cross-env"
      }
    ],
    "relevance": 0.784
  },
  {
    "codeTitle": "Embedding a Screenshot Image in HTML",
    "codeDescription": "Shows how to embed a screenshot generated by the Eleventy Screenshots API into an HTML document. This example includes attributes for responsive loading and accessibility.",
    "codeLanguage": "html",
    "codeTokens": 128,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/services/screenshots.md#2025-04-05_snippet_1",
    "pageTitle": "Screenshots API Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<img\n\tsrc=\"https://v1.screenshot.11ty.dev/https%3A%2F%2Fwww.11ty.dev%2Fdocs%2F/small/9:16/bigger/\"\n\tclass=\"screenshot screenshot-first-example\"\n\twidth=\"375\"\n\theight=\"667\"\n\tloading=\"lazy\"\n\tdecoding=\"async\"\n\talt=\"Screenshot of 11ty.dev\"\n/>"
      }
    ],
    "relevance": 0.782
  },
  {
    "codeTitle": "Using Same Input/Output Directories in Eleventy",
    "codeDescription": "Command to process Markdown files in-place, using the same directory for input and output while maintaining directory structure.",
    "codeLanguage": "bash",
    "codeTokens": 65,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/usage.md#2025-04-05_snippet_10",
    "pageTitle": "Eleventy Command Line Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "# Parse and write Markdown to HTML, respecting directory structure.\nnpx @11ty/eleventy --input=. --output=. --formats=md"
      }
    ],
    "relevance": 0.782
  },
  {
    "codeTitle": "Importing CSS for Supporters Page in Eleventy",
    "codeDescription": "This snippet imports CSS styles specific to the supporters page using Eleventy's CSS include functionality.",
    "codeLanguage": "nunjucks",
    "codeTokens": 53,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/supporters.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Contributors and Supporters Page",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{%- css %}{% include \"components/page-supporters.css\" %}{% endcss %}"
      }
    ],
    "relevance": 0.782
  },
  {
    "codeTitle": "Creating Breadcrumbs in Liquid for Eleventy Navigation",
    "codeDescription": "Demonstrates how to generate breadcrumb navigation using the eleventyNavigationBreadcrumb filter in Liquid templates.",
    "codeLanguage": "liquid",
    "codeTokens": 56,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_21",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "liquid",
        "code": "{% assign navPages = collections.all | eleventyNavigationBreadcrumb: \"Bats\" %}\n{{ navPages | json }}"
      }
    ],
    "relevance": 0.78
  },
  {
    "codeTitle": "Adding a Top-Level Page to Navigation",
    "codeDescription": "YAML front matter showing how to add a page as a top-level navigation item using the eleventyNavigation key.",
    "codeLanguage": "yaml",
    "codeTokens": 49,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_2",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\neleventyNavigation:\n  key: Mammals\n---"
      }
    ],
    "relevance": 0.78
  },
  {
    "codeTitle": "Displaying Images with 11ty Image Shortcode",
    "codeDescription": "Two examples of using the 11ty Image shortcode to display responsive images with specified widths and paths. These shortcodes render images celebrating the 7 million downloads milestone.",
    "codeLanguage": "liquid",
    "codeTokens": 81,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2023-10-23-seven-million.md#2025-04-05_snippet_1",
    "pageTitle": "Seven Million npm Downloads Announcement",
    "codeList": [
      {
        "language": "liquid",
        "code": "{% image \"./src/blog/sevenmilgraph.png\", \"A line chart showing Eleventy's downloads per year\", [350, 700], \"\", \"100vw\" %}"
      },
      {
        "language": "liquid",
        "code": "{% image \"./src/blog/sevenmil.jpg\", \"Zach pointing to the new balloons in his office that say 7 Million\", [350, 700], \"\", \"100vw\" %}"
      }
    ],
    "relevance": 0.78
  },
  {
    "codeTitle": "Setting Environment Variables in Windows cmd.exe",
    "codeDescription": "Command to set environment variables when running Eleventy in Windows Command Prompt",
    "codeLanguage": "bash",
    "codeTokens": 43,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/environment-vars.md#2025-04-05_snippet_1",
    "pageTitle": "Environment Variables Guide for Eleventy",
    "codeList": [
      {
        "language": "bash",
        "code": "set MY_ENVIRONMENT=production & npx @11ty/eleventy"
      }
    ],
    "relevance": 0.779
  },
  {
    "codeTitle": "Customizing Wait Conditions for Screenshots",
    "codeDescription": "Demonstrates how to customize the wait conditions for the headless browser when taking screenshots. This controls the 'waitUntil' property in Puppeteer's 'goto' call.",
    "codeLanguage": "plaintext",
    "codeTokens": 77,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/services/screenshots.md#2025-04-05_snippet_2",
    "pageTitle": "Screenshots API Documentation for Eleventy",
    "codeList": [
      {
        "language": "plaintext",
        "code": "/:url/_wait:0/\n/:url/_wait:1/\n/:url/_wait:2/\n/:url/_wait:3/"
      }
    ],
    "relevance": 0.778
  },
  {
    "codeTitle": "Configuring .htaccess for Custom 404 Page",
    "codeDescription": "This code snippet shows how to configure an .htaccess file to use a custom 404 page. It uses the ErrorDocument directive to specify the path to the 404.html file.",
    "codeLanguage": "apache",
    "codeTokens": 65,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/quicktips/not-found.md#2025-04-05_snippet_1",
    "pageTitle": "Adding a 404 Not Found Page to a Static Site with Eleventy",
    "codeList": [
      {
        "language": "apache",
        "code": "ErrorDocument 404 /404.html"
      }
    ],
    "relevance": 0.778
  },
  {
    "codeTitle": "Inserting Responsive Image in Eleventy",
    "codeDescription": "Uses Eleventy's image shortcode to insert a responsive image with multiple sizes and alt text.",
    "codeLanguage": "nunjucks",
    "codeTokens": 75,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2024-02-23-eight-million.md#2025-04-05_snippet_2",
    "pageTitle": "Eleventy Milestone: Eight Million npm Downloads",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{% image \"./src/blog/eight-million.jpg\", \"Zach pointing to the new balloons in his office that say 8 Million\", [350, 700], \"\", \"100vw\" %}"
      }
    ],
    "relevance": 0.778
  },
  {
    "codeTitle": "Checking Eleventy Version After Global Installation",
    "codeDescription": "This command checks the version of Eleventy after global installation. It demonstrates how to use the 'eleventy' command that becomes available globally after installation.",
    "codeLanguage": "bash",
    "codeTokens": 49,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/global-installation.md#2025-04-05_snippet_1",
    "pageTitle": "Installing Eleventy Globally",
    "codeList": [
      {
        "language": "bash",
        "code": "eleventy --version"
      }
    ],
    "relevance": 0.776
  },
  {
    "codeTitle": "Embedding YouTube Video in Markdown",
    "codeDescription": "This snippet demonstrates how to embed a YouTube video in an Eleventy Markdown file using a custom shortcode called 'youtubeEmbed'. The video ID is passed as an argument to the shortcode.",
    "codeLanguage": "markdown",
    "codeTokens": 62,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2023-04-05-stability.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Stability Analysis",
    "codeList": [
      {
        "language": "markdown",
        "code": "{% youtubeEmbed \"bPtQmsjXMuo\" %}"
      }
    ],
    "relevance": 0.776
  },
  {
    "codeTitle": "Basic URL Format for OpenGraph Image API",
    "codeDescription": "Shows the three URL format patterns for accessing the OpenGraph image service with optional size and format parameters.",
    "codeLanguage": "text",
    "codeTokens": 80,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/services/opengraph.md#2025-04-05_snippet_0",
    "pageTitle": "Using OpenGraph Image Service with 11ty",
    "codeList": [
      {
        "language": "text",
        "code": "https://v1.opengraph.11ty.dev/:url/\nhttps://v1.opengraph.11ty.dev/:url/:size/\nhttps://v1.opengraph.11ty.dev/:url/:size/:format/"
      }
    ],
    "relevance": 0.775
  },
  {
    "codeTitle": "Declaring Dependencies in eleventyComputed",
    "codeDescription": "Example of explicitly declaring dependencies between eleventyComputed keys to ensure correct resolution order.",
    "codeLanguage": "javascript",
    "codeTokens": 147,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-computed.md#2025-04-05_snippet_4",
    "pageTitle": "Implementing Computed Data in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default {\n\televentyComputed: {\n\t\tmyValue: () => \"Hi\",\n\t\tmyOtherValue: () => \"Bye\",\n\t\tusesAllTheThings: (data) => {\n\t\t\t// We detect this as a declared dependency\n\t\t\tdata.myValue;\n\t\t\t// You can use as many as you want.\n\t\t\tdata.myOtherValue;\n\t\t\t// You could use any valid JS syntax to access them.\n\t\t\t[data.myValue, data.myOtherValue];\n\n\t\t\treturn `How are you?`;\n\t\t},\n\t},\n};"
      }
    ],
    "relevance": 0.775
  },
  {
    "codeTitle": "Reversing Sorted Collections in Eleventy",
    "codeDescription": "Shows how to reverse the order of a sorted collection using Array.reverse(). This creates a collection with content sorted in descending order by date and filename.",
    "codeLanguage": "javascript",
    "codeTokens": 116,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/collections-api.md#2025-04-05_snippet_5",
    "pageTitle": "Eleventy Collections API Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\t// Use the default sorting algorithm in reverse (descending dir, date, filename)\n\t// Note that using a template engine's `reverse` filter might be easier here\n\televentyConfig.addCollection(\"myPostsReverse\", function (collectionsApi) {\n\t\treturn collectionsApi.getAllSorted().reverse();\n\t});\n};"
      }
    ],
    "relevance": 0.775
  },
  {
    "codeTitle": "Eleventy JSON Output Commands",
    "codeDescription": "Commands to output Eleventy processing results in JSON or NDJSON format instead of writing to filesystem.",
    "codeLanguage": "bash",
    "codeTokens": 116,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/usage.md#2025-04-05_snippet_6",
    "pageTitle": "Eleventy Command Line Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "# Output a JSON structure (does not write to the file system)\nnpx @11ty/eleventy --to=json\n\n# Output a Newline Deliminated JSON structure (does not write to the file system)\nnpx @11ty/eleventy --to=ndjson\n\n# Default behavior (Output to file system)\nnpx @11ty/eleventy --to=fs"
      }
    ],
    "relevance": 0.775
  },
  {
    "codeTitle": "Adding Nested Function Global Data in Eleventy Configuration",
    "codeDescription": "Demonstrates how to add a nested function as global data, which returns a function that creates a Date object in Eleventy's configuration.",
    "codeLanguage": "javascript",
    "codeTokens": 93,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-global-custom.md#2025-04-05_snippet_3",
    "pageTitle": "Global Data Configuration in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "module.exports = function (eleventyConfig) {\n\televentyConfig.addGlobalData(\"myFunction\", () => {\n\t\treturn () => new Date();\n\t});\n\n\t// myFunction's value will be a function that returns a Date instance\n};"
      }
    ],
    "relevance": 0.775
  },
  {
    "codeTitle": "Installing Eleventy Globally via npm",
    "codeDescription": "This command installs Eleventy globally using npm. It's not recommended due to potential versioning issues across projects and deployment complications.",
    "codeLanguage": "bash",
    "codeTokens": 49,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/global-installation.md#2025-04-05_snippet_0",
    "pageTitle": "Installing Eleventy Globally",
    "codeList": [
      {
        "language": "bash",
        "code": "npm install -g @11ty/eleventy"
      }
    ],
    "relevance": 0.773
  },
  {
    "codeTitle": "IndieWeb Avatar URL Format",
    "codeDescription": "Demonstrates the basic URL format for accessing the IndieWeb Avatar service API endpoint.",
    "codeLanguage": "plaintext",
    "codeTokens": 42,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/services/indieweb-avatar.md#2025-04-05_snippet_0",
    "pageTitle": "IndieWeb Avatar Service Documentation",
    "codeList": [
      {
        "language": "plaintext",
        "code": "https://v1.indieweb-avatar.11ty.dev/:url/"
      }
    ],
    "relevance": 0.772
  },
  {
    "codeTitle": "Legacy CommonJS Plugin Import",
    "codeDescription": "Example of the old way to import Eleventy plugins using CommonJS require syntax, which needs to be updated in v3.0.",
    "codeLanguage": "javascript",
    "codeTokens": 90,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2023-12-17-canary-eleventy-v3.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy v3.0 Canary Release Guide",
    "codeList": [
      {
        "language": "javascript",
        "code": "// Any combination of these\nconst { I18nPlugin, RenderPlugin, HtmlBasePlugin } = require(\"@11ty/eleventy\");\n\nmodule.exports = function (eleventyConfig) {\n\t// …\n};"
      }
    ],
    "relevance": 0.772
  },
  {
    "codeTitle": "Using htmlBaseUrl Filter",
    "codeDescription": "Examples of using the htmlBaseUrl filter to transform individual URLs with base path and custom base href values.",
    "codeLanguage": "nunjucks",
    "codeTokens": 56,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/html-base.md#2025-04-05_snippet_1",
    "pageTitle": "HTML Base Plugin Documentation for Eleventy",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{{ \"/path/\" | htmlBaseUrl }}\n{{ \"/path/\" | htmlBaseUrl(\"https://example.com/\") }}"
      }
    ],
    "relevance": 0.77
  },
  {
    "codeTitle": "Changing Input and Output Directories in Eleventy",
    "codeDescription": "This code shows how to specify custom input and output directories when using Eleventy's programmatic API. The first argument is the input directory, and the second is the output directory.",
    "codeLanguage": "javascript",
    "codeTokens": 92,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/programmatic.md#2025-04-05_snippet_3",
    "pageTitle": "Programmatic API for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "const Eleventy = require(\"@11ty/eleventy\");\n\nasync function elev() {\n  let elev = new Eleventy(\"src\", \"_site\");\n\n  await elev.write();\n}\n\nelev();"
      }
    ],
    "relevance": 0.77
  },
  {
    "codeTitle": "Setting Template Formats via Command Line in Eleventy",
    "codeDescription": "Demonstrates how to use the command line to specify which template formats Eleventy should process. This uses the --formats flag to limit transformation to only HTML, Liquid, and Nunjucks templates.",
    "codeLanguage": "bash",
    "codeTokens": 68,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/config.md#2025-04-05_snippet_6",
    "pageTitle": "Configuring Eleventy",
    "codeList": [
      {
        "language": "bash",
        "code": "npx @11ty/eleventy --formats=html,liquid,njk"
      }
    ],
    "relevance": 0.77
  },
  {
    "codeTitle": "Sample CSS for Inlining",
    "codeDescription": "A simple CSS snippet to be used as an example for inlining and minification.",
    "codeLanguage": "css",
    "codeTokens": 39,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/quicktips/inline-css.md#2025-04-05_snippet_1",
    "pageTitle": "Inline Minified CSS in Eleventy",
    "codeList": [
      {
        "language": "css",
        "code": "body {\n\tfont-family: fantasy;\n}"
      }
    ],
    "relevance": 0.768
  },
  {
    "codeTitle": "Implementing Eleventy Image Shortcode",
    "codeDescription": "Template shortcode for rendering a responsive image using Eleventy's image plugin, including source path, alt text, widths, and sizes attributes.",
    "codeLanguage": "markdown",
    "codeTokens": 82,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2023-07-04-six-million.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy npm Downloads Milestone Announcement",
    "codeList": [
      {
        "language": "markdown",
        "code": "{% image \"./src/blog/six-million.jpg\", \"Zach pointing to the new balloons in his office that say 6 Million\", [350, 700], \"\", \"100vw\" %}"
      }
    ],
    "relevance": 0.768
  },
  {
    "codeTitle": "Using Template Literals in JavaScript Templates (ESM)",
    "codeDescription": "Example of using JavaScript template literals to create multiline string content in an Eleventy template. This allows for more readable HTML formatting.",
    "codeLanguage": "javascript",
    "codeTokens": 56,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/javascript.md#2025-04-05_snippet_1",
    "pageTitle": "JavaScript Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default `<p>These can\nspan\nmultiple\nlines!</p>`;"
      }
    ],
    "relevance": 0.767
  },
  {
    "codeTitle": "Fetching GitHub Stargazers Count with JavaScript Data File in Eleventy",
    "codeDescription": "This snippet shows how to create a JavaScript data file in Eleventy that fetches the stargazers count from the GitHub API. It uses node-fetch to make the API request and returns only the required data.",
    "codeLanguage": "javascript",
    "codeTokens": 157,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/quicktips/eliminate-js.md#2025-04-05_snippet_0",
    "pageTitle": "Fetching GitHub API Data at Build Time in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import fetch from \"node-fetch\";\n\nexport default async function () {\n\tconsole.log(\"Fetching new github stargazers count…\");\n\n\t// GitHub API: https://developer.github.com/v3/repos/#get\n\tlet res = await fetch(\"https://api.github.com/repos/11ty/eleventy\");\n\tlet json = await res.json();\n\n\t// prune the data to return only what we want\n\treturn {\n\t\tstargazers: json.stargazers_count,\n\t};\n};"
      }
    ],
    "relevance": 0.765
  },
  {
    "codeTitle": "Ignoring Content with webc:ignore",
    "codeDescription": "Shows how to use webc:ignore to completely ignore a node and not process or output anything related to it.",
    "codeLanguage": "html",
    "codeTokens": 73,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_36",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<template webc:ignore>\n\tHere's how you might use this component:\n\n\t<my-component>Nothing in here will be processed</my-component>\n</template>"
      }
    ],
    "relevance": 0.765
  },
  {
    "codeTitle": "Configuring a Plugin with Custom Options",
    "codeDescription": "Demonstrates how to pass configuration options to a plugin using the second argument of addPlugin. This example configures the syntax highlighting plugin with custom options.",
    "codeLanguage": "javascript",
    "codeTokens": 124,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/create-plugin.md#2025-04-05_snippet_6",
    "pageTitle": "Creating and Using Eleventy Plugins",
    "codeList": [
      {
        "language": "javascript",
        "code": "import pluginSyntaxHighlight from \"@11ty/eleventy-plugin-syntaxhighlight\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addPlugin(pluginSyntaxHighlight, {\n\t\t// only install the markdown highlighter\n\t\ttemplateFormats: [\"md\"],\n\n\t\tinit: function ({ Prism }) {\n\t\t\t// Add your own custom language to Prism!\n\t\t},\n\t});\n};"
      }
    ],
    "relevance": 0.765
  },
  {
    "codeTitle": "OpenGraph Image Example for 11ty.dev",
    "codeDescription": "HTML code for embedding an OpenGraph image from 11ty.dev with small size specification and proper loading attributes.",
    "codeLanguage": "html",
    "codeTokens": 105,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/services/opengraph.md#2025-04-05_snippet_1",
    "pageTitle": "Using OpenGraph Image Service with 11ty",
    "codeList": [
      {
        "language": "html",
        "code": "<img\n\tsrc=\"https://v1.opengraph.11ty.dev/https%3A%2F%2Fwww.11ty.dev%2F/small/\"\n\talt=\"OpenGraph image for 11ty.dev\"\n\tloading=\"lazy\"\n\tdecoding=\"async\"\n\twidth=\"375\"\n\theight=\"197\"\n/>"
      }
    ],
    "relevance": 0.765
  },
  {
    "codeTitle": "Debugging Eleventy with Environment Variables",
    "codeDescription": "Command to enable debug logging in Eleventy using the DEBUG environment variable with cross-env package for cross-platform compatibility.",
    "codeLanguage": "bash",
    "codeTokens": 58,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/usage.md#2025-04-05_snippet_9",
    "pageTitle": "Eleventy Command Line Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "npx cross-env DEBUG=Eleventy:* npx @11ty/eleventy --dryrun"
      }
    ],
    "relevance": 0.765
  },
  {
    "codeTitle": "Embedding an Image in HTML within Markdown",
    "codeDescription": "This snippet shows how to embed an HTML img tag within a Markdown file to display an image. The image represents the Font Awesome and 11ty logos.",
    "codeLanguage": "html",
    "codeTokens": 64,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2024-09-12-eleventy-font-awesome.md#2025-04-05_snippet_1",
    "pageTitle": "11ty Joins Font Awesome Announcement",
    "codeList": [
      {
        "language": "html",
        "code": "<img src=\"./fa-2.png\" alt=\"Font Awesome + 11ty logos\">"
      }
    ],
    "relevance": 0.765
  },
  {
    "codeTitle": "ESM Configuration for Eleventy",
    "codeDescription": "Shows the ESM configuration pattern for Eleventy, using import statements and export default syntax.",
    "codeLanguage": "javascript",
    "codeTokens": 80,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/cjs-esm.md#2025-04-05_snippet_3",
    "pageTitle": "CommonJS and ESM Module Systems in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "// Any combination of these\nimport { I18nPlugin, RenderPlugin, HtmlBasePlugin } from \"@11ty/eleventy\";\n\nexport default function (eleventyConfig) {\n\t// …\n};"
      }
    ],
    "relevance": 0.764
  },
  {
    "codeTitle": "Example Output of GitHub Stargazers Count",
    "codeDescription": "This code snippet shows the rendered output of the GitHub stargazers count template.",
    "codeLanguage": "html",
    "codeTokens": 39,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/quicktips/eliminate-js.md#2025-04-05_snippet_2",
    "pageTitle": "Fetching GitHub API Data at Build Time in Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "1515 GitHub Stars"
      }
    ],
    "relevance": 0.762
  },
  {
    "codeTitle": "Generating Blog Post List with Nunjucks Templating",
    "codeDescription": "This Nunjucks template iterates over the blog collection to generate a list of blog posts, formatting dates and applying conditional styling for highlighted posts.",
    "codeLanguage": "nunjucks",
    "codeTokens": 122,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/blog.md#2025-04-05_snippet_2",
    "pageTitle": "Eleventy Community Blog",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{% for news in collections.blog | reverse %}\n- <small><code>{{ news.date | newsDate(\"LLL yyyy\") }}</code></small> [{% if news.data.blogHighlight %}<strong class=\"blog-lrg\">{% endif %}{{ news.data.newstitle }}{% if news.data.blogHighlight %}</strong>{% endif %}]({{ news.url }})\n{%- endfor %}"
      }
    ],
    "relevance": 0.762
  },
  {
    "codeTitle": "Updated CommonJS Plugin Import for v3.0",
    "codeDescription": "Updated method for importing Eleventy plugins in CommonJS configuration files using dynamic imports with async/await syntax.",
    "codeLanguage": "javascript",
    "codeTokens": 105,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2023-12-17-canary-eleventy-v3.md#2025-04-05_snippet_2",
    "pageTitle": "Eleventy v3.0 Canary Release Guide",
    "codeList": [
      {
        "language": "javascript",
        "code": "// Eleventy 3.0 supports async configuration callbacks:\nmodule.exports = async function (eleventyConfig) {\n\t// Any combination of these\n\tconst { I18nPlugin, RenderPlugin, HtmlBasePlugin } = await import(\n\t\t\"@11ty/eleventy\"\n\t);\n\n\t// …\n};"
      }
    ],
    "relevance": 0.761
  },
  {
    "codeTitle": "Preact Integration with <is-land>",
    "codeDescription": "Using Preact with <is-land> through the autoinit attribute, requiring an external component file.",
    "codeLanguage": "html",
    "codeTokens": 70,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/is-land.md#2025-04-05_snippet_13",
    "pageTitle": "Using <is-land> for Islands Architecture in 11ty",
    "codeList": [
      {
        "language": "html",
        "code": "<is-land\n\ton:visible\n\tautoinit=\"preact\"\n\timport=\"/lib/preact/preact-component.js\"\n></is-land>"
      }
    ],
    "relevance": 0.76
  },
  {
    "codeTitle": "Feature Testing in an Eleventy Plugin",
    "codeDescription": "Shows how to implement feature testing in a plugin to check if specific Eleventy functionality exists. This ensures compatibility and provides helpful warnings to users.",
    "codeLanguage": "javascript",
    "codeTokens": 108,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/create-plugin.md#2025-04-05_snippet_12",
    "pageTitle": "Creating and Using Eleventy Plugins",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig, pluginOptions) {\n\tif(!(\"addTemplate\" in eleventyConfig)) {\n\t\tconsole.log( `[my-test-plugin] WARN Eleventy plugin compatibility: Virtual Templates are required for this plugin, please use Eleventy v3.0 or newer.` );\n\t}\n};"
      }
    ],
    "relevance": 0.76
  },
  {
    "codeTitle": "Transforming Global Data with eleventyComputed.js in 11ty",
    "codeDescription": "Module that exports computed data transformations for copyright and link information. Takes data from global JSON files and extracts specific entry elements from within their feed structures. Each function receives the global data object and returns a transformed subset of that data.",
    "codeLanguage": "javascript",
    "codeTokens": 101,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/quicktips/create-multiple-computed-data-elements.md#2025-04-05_snippet_0",
    "pageTitle": "Global Data Transformation with 11ty Computed",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default {\n\tmyCopyrights: (data) => {\n\t\treturn data.copyrights.feed.entry;\n\t},\n\tmyLinks: (data) => {\n\t\treturn data.links.feed.entry;\n\t},\n};"
      }
    ],
    "relevance": 0.758
  },
  {
    "codeTitle": "Setting Front Matter for Eleventy Navigation",
    "codeDescription": "Example of front matter in a Markdown file for use with Eleventy's Navigation Plugin.",
    "codeLanguage": "markdown",
    "codeTokens": 47,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-computed.md#2025-04-05_snippet_0",
    "pageTitle": "Implementing Computed Data in Eleventy",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\ntitle: My Page Title\nparent: My Parent Key\n---"
      }
    ],
    "relevance": 0.758
  },
  {
    "codeTitle": "Using Next/Previous Collection Item Filters in Liquid/Nunjucks",
    "codeDescription": "Demonstrates how to fetch previous and next items in a collection using getPreviousCollectionItem and getNextCollectionItem filters. The page argument becomes optional in version 2.0.0-beta.1.",
    "codeLanguage": "liquid",
    "codeTokens": 110,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/filters/collection-items.md#2025-04-05_snippet_0",
    "pageTitle": "Collection Item Navigation Filters in 11ty",
    "codeList": [
      {
        "language": "liquid",
        "code": "{% assign previousPost = collections.posts | getPreviousCollectionItem: page %}\n{% assign nextPost = collections.posts | getNextCollectionItem: page %}\n\n{% assign previousPost = collections.posts | getPreviousCollectionItem %}\n{% assign nextPost = collections.posts | getNextCollectionItem %}"
      },
      {
        "language": "jinja2",
        "code": "{% set previousPost = collections.posts | getPreviousCollectionItem(page) %}\n{% set nextPost = collections.posts | getNextCollectionItem(page) %}\n\n{% set previousPost = collections.posts | getPreviousCollectionItem %}\n{% set nextPost = collections.posts | getNextCollectionItem %}"
      }
    ],
    "relevance": 0.758
  },
  {
    "codeTitle": "Installing eleventy-fetch in an Eleventy project",
    "codeDescription": "Command to install the eleventy-fetch plugin via npm, which allows caching of external API requests.",
    "codeLanguage": "bash",
    "codeTokens": 49,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/quicktips/cache-api-requests.md#2025-04-05_snippet_0",
    "pageTitle": "Caching API Requests in Eleventy with eleventy-fetch",
    "codeList": [
      {
        "language": "bash",
        "code": "npm install @11ty/eleventy-fetch"
      }
    ],
    "relevance": 0.755
  },
  {
    "codeTitle": "Adding HTML to Head using Bundles",
    "codeDescription": "Example of using bundles to add HTML content to the head section from anywhere in the document.",
    "codeLanguage": "html",
    "codeTokens": 105,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/bundle.md#2025-04-05_snippet_8",
    "pageTitle": "Bundle Plugin for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<!-- … -->\n<head>\n\t{% getBundle \"html\", \"head\" %}\n</head>\n<body>\n\t<!-- Add things to `<head>` from anywhere on the page -->\n\t{% html \"head\" %}\n\t<link href=\"https://v1.opengraph.11ty.dev\" rel=\"preconnect\" crossorigin>\n\t{% endhtml %}\n</body>\n<!-- … -->"
      }
    ],
    "relevance": 0.755
  },
  {
    "codeTitle": "Basic Pagination Object Structure",
    "codeDescription": "Shows the structure of the pagination object available in templates, including items, page numbers, and navigation URLs.",
    "codeLanguage": "javascript",
    "codeTokens": 204,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/pagination.md#2025-04-05_snippet_0",
    "pageTitle": "Pagination in 11ty Static Site Generator",
    "codeList": [
      {
        "language": "javascript",
        "code": "{\n  items: [], // Array of current page's chunk of data\n  pageNumber: 0, // current page number, 0 indexed\n\n  // Cool URLs\n  hrefs: [], // Array of all page hrefs (in order)\n  href: {\n    next: \"…\", // put inside <a href=\"{{ pagination.href.next }}\">Next Page</a>\n    previous: \"…\", // put inside <a href=\"{{ pagination.href.previous }}\">Previous Page</a>\n    first: \"…\",\n    last: \"…\",\n  },\n\n  pages: [], // Array of all chunks of paginated data (in order)\n  page: {\n    next: {}, // Next page's chunk of data\n    previous: {}, // Previous page's chunk of data\n    first: {},\n    last: {},\n  }\n}"
      }
    ],
    "relevance": 0.755
  },
  {
    "codeTitle": "Paired Shortcode Configuration in Eleventy",
    "codeDescription": "Shows how to implement paired shortcodes that allow nested content between start and end tags. Includes both synchronous and asynchronous implementations.",
    "codeLanguage": "JavaScript",
    "codeTokens": 202,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/shortcodes.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Template Shortcodes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "export default function (eleventyConfig) {\n  // Shortcodes added in this way are available in:\n  // * Markdown\n  // * Liquid\n  // * Nunjucks\n  // * JavaScript\n  // * Handlebars (sync only)\n\n  eleventyConfig.addPairedShortcode(\"user\", function(content, firstName, lastName) { /* … */ });\n\n  // Async support for `addPairedShortcode` is new in Eleventy 2.0.0-canary.24\n  eleventyConfig.addPairedShortcode(\"user\", async function(content, myName) { /* … */ });\n\n  // Async method available\n  eleventyConfig.addPairedAsyncShortcode(\"user\", async function(content, myName) { /* … */ });\n};"
      }
    ],
    "relevance": 0.755
  },
  {
    "codeTitle": "Passing Data to renderTemplate Shortcode in Nunjucks",
    "codeDescription": "This snippet shows how to pass additional data to the renderTemplate shortcode when rendering a template string.",
    "codeLanguage": "nunjucks",
    "codeTokens": 58,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/render.md#2025-04-05_snippet_2",
    "pageTitle": "Render Plugin Documentation for Eleventy",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{% renderTemplate \"njk\", {myData: \"myValue\"} %}\n{{ myData }}\n{% endrenderTemplate %}"
      }
    ],
    "relevance": 0.755
  },
  {
    "codeTitle": "Installing Eleventy v3.0 Canary Release",
    "codeDescription": "Command to install the alpha release of Eleventy v3.0 using npm. The --save-exact flag ensures getting the exact same version every time when using the canary channel.",
    "codeLanguage": "sh",
    "codeTokens": 70,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2023-12-17-canary-eleventy-v3.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy v3.0 Canary Release Guide",
    "codeList": [
      {
        "language": "sh",
        "code": "npm install @11ty/eleventy@canary --save-exact"
      }
    ],
    "relevance": 0.755
  },
  {
    "codeTitle": "Configuring Page Navigation in YAML Front Matter",
    "codeDescription": "YAML front matter configuration for the Eleventy plugins documentation page, defining navigation hierarchy, parent-child relationships, and sort order.",
    "codeLanguage": "yaml",
    "codeTokens": 66,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Plugins Documentation",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\neleventyNavigation:\n  parent: Ecosystem\n  key: Plugins\n  order: 4\ncommunityLinksKey: plugins\n---"
      }
    ],
    "relevance": 0.752
  },
  {
    "codeTitle": "Basic Folder Structure for i18n in Eleventy Projects",
    "codeDescription": "Demonstrates the recommended directory structure for organizing multilingual content in Eleventy, with separate folders for each language containing parallel content files.",
    "codeLanguage": "bash",
    "codeTokens": 95,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/i18n.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Internationalization (I18n) Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "📁 en -> 📄 about.html\n📁 es -> 📄 about.html\n📁 de -> 📄 about.html\n📁 ja -> 📄 about.html\n📂 and so on…"
      }
    ],
    "relevance": 0.752
  },
  {
    "codeTitle": "Eleventy Quiet Mode Command",
    "codeDescription": "Command to reduce console output verbosity when running Eleventy.",
    "codeLanguage": "bash",
    "codeTokens": 50,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/usage.md#2025-04-05_snippet_3",
    "pageTitle": "Eleventy Command Line Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "# Shhhhh—Don't log so much to the console\nnpx @11ty/eleventy --quiet"
      }
    ],
    "relevance": 0.752
  },
  {
    "codeTitle": "Svelte Component for <is-land>",
    "codeDescription": "Example Svelte component code to be used with <is-land>, showing script, style, and template sections with reactive state management.",
    "codeLanguage": "html",
    "codeTokens": 140,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/is-land.md#2025-04-05_snippet_12",
    "pageTitle": "Using <is-land> for Islands Architecture in 11ty",
    "codeList": [
      {
        "language": "html",
        "code": "<script>\n\t// using export to allow overrides via props\n\texport let name = \"world\";\n\n\tlet count = 0;\n\n\tfunction handleClick() {\n\t\tcount += 1;\n\t}\n</script>\n\n<style>\n\th1 {\n\t\tcolor: red;\n\t}\n</style>\n\n<h1>Hello {name}</h1>\n\n<button on:click=\"{handleClick}\">\n\tClicked {count} {count === 1 ? 'time' : 'times'}\n</button>"
      }
    ],
    "relevance": 0.75
  },
  {
    "codeTitle": "Async Engine-Specific Shortcode Configuration",
    "codeDescription": "Demonstrates how to implement asynchronous shortcodes for specific template engines including Liquid, Nunjucks, and JavaScript.",
    "codeLanguage": "JavaScript",
    "codeTokens": 202,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/shortcodes.md#2025-04-05_snippet_4",
    "pageTitle": "Eleventy Template Shortcodes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "export default function (eleventyConfig) {\n  // Async-friendly\n  // Liquid is already async-friendly\n  eleventyConfig.addLiquidShortcode(\"user\", async function() {});\n  eleventyConfig.addPairedLiquidShortcode(\"user\", async function(content) {});\n\n  // Nunjucks Async\n  eleventyConfig.addNunjucksAsyncShortcode(\"user\", async function() {});\n  eleventyConfig.addPairedNunjucksAsyncShortcode(\"user\", async function(content) {});\n\n  // JavaScript Template function\n  // (make sure you `await` these when using in templates!)\n  eleventyConfig.addJavaScriptFunction(\"user\", async function() {});\n  eleventyConfig.addJavaScriptFunction(\"user\", async function(content) {}); // Faux-paired shortcode\n};"
      }
    ],
    "relevance": 0.75
  },
  {
    "codeTitle": "Implementing Edge Content Generation in Eleventy Templates",
    "codeDescription": "Demonstrates how to use the edge shortcode to define portions of an Eleventy template that should be processed on the Edge server rather than during the build phase. This allows for dynamic, user-specific content generation.",
    "codeLanguage": "liquid",
    "codeTokens": 116,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2022-04-19-eleventy-edge.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Edge Documentation and Usage Guide",
    "codeList": [
      {
        "language": "liquid",
        "code": "The content outside of the `edge` shortcode is generated with the Build.\n\n{% edge %}\nThe content inside of the `edge` shortcode is generated on the Edge.\n\n* Use a query param value here.\n* Use a cookie value here.\n* All without clientside JS.\n{% endedge %}"
      }
    ],
    "relevance": 0.749
  },
  {
    "codeTitle": "Rendering Navigation with Nunjucks in Eleventy",
    "codeDescription": "Nunjucks template code that generates an HTML navigation structure for plugins. It uses Eleventy's navigation plugin with the \"Plugins\" key and displays excerpts for each item.",
    "codeLanguage": "nunjucks",
    "codeTokens": 69,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Plugins Documentation",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{{ \"Plugins\" | nav | eleventyNavigationToHtml({ showExcerpt: true }) | safe }}"
      }
    ],
    "relevance": 0.748
  },
  {
    "codeTitle": "Defining Eleventy Navigation and Page Properties in YAML Front Matter",
    "codeDescription": "This YAML front matter sets up navigation properties for the page in Eleventy, including the parent page, key, and order. It also specifies page exclusion from the sidebar and marks it as a removed feature.",
    "codeLanguage": "yaml",
    "codeTokens": 95,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-preprocessing.md#2025-04-05_snippet_0",
    "pageTitle": "Global Data File Preprocessing in Eleventy",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\neleventyNavigation:\n  parent: Global Data Files\n  key: Data Preprocessing\n  order: 4\nexcludeFromSidebar: true\nremovedFeature: true\n---"
      }
    ],
    "relevance": 0.748
  },
  {
    "codeTitle": "YAML Front Matter Configuration for Eleventy Blog Post",
    "codeDescription": "YAML configuration block defining metadata for the blog post, including title, navigation settings, and external URL reference.",
    "codeLanguage": "yaml",
    "codeTokens": 96,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2024-10-02-eleventy-v3.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy v3.0.0 Release Announcement",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\nnewstitle: \"Eleventy v3.0.0 is now available!\"\neleventyNavigation:\n  parent: Blog\nblogHighlight: true\nexternal_url: https://github.com/11ty/eleventy/releases/tag/v3.0.0\n---"
      }
    ],
    "relevance": 0.746
  },
  {
    "codeTitle": "Raw Liquid Template Tag Example in Markdown",
    "codeDescription": "Demonstration of how to display Liquid template syntax literally in a Markdown file using the raw tag to prevent template processing of content.",
    "codeLanguage": "markdown",
    "codeTokens": 52,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/pitfalls.md#2025-04-05_snippet_0",
    "pageTitle": "Common Pitfalls in Eleventy Projects",
    "codeList": [
      {
        "language": "markdown",
        "code": "{% raw %}{% set %}{% endraw %}"
      }
    ],
    "relevance": 0.745
  },
  {
    "codeTitle": "Liquid Template for Rendering Eleventy Version History",
    "codeDescription": "This liquid template iterates through a 'versions' collection and renders each version as a list item with links to documentation and release notes. It handles conditional display for channel information and release notes links.",
    "codeLanguage": "liquid",
    "codeTokens": 171,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/versions.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Release History Documentation",
    "codeList": [
      {
        "language": "liquid",
        "code": "{%- for version in versions %}\n- `{{ version.tag }}`{% if version.channel %} on the `@{{ version.channel }}` channel{% endif %}—[Docs]({% if version.docs_url %}{{ version.docs_url }}{% else %}https://github.com/11ty/eleventy/blob/{{ version.tag }}/README.md{% endif %}){% if version.ignore_release_notes !== true %} and [Release Notes](https://github.com/11ty/eleventy/releases/tag/{{ version.tag }}){% endif %}\n{%- endfor -%}"
      }
    ],
    "relevance": 0.745
  },
  {
    "codeTitle": "Creating Possum Pages with Pagination (Markdown/Liquid)",
    "codeDescription": "This template uses Eleventy's pagination feature to iterate over the possums data and create individual pages. It sets up pagination, defines a custom permalink for each possum, and displays the possum's name and age. The template will generate one page per possum.",
    "codeLanguage": "markdown",
    "codeTokens": 121,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/pages-from-data.md#2025-04-05_snippet_1",
    "pageTitle": "Creating Pages from Data in Eleventy",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\npagination:\n  data: possums\n  size: 1\n  alias: possum\npermalink: \"possums/{{ possum.name | slugify }}/\"\n---\n\n{{ possum.name }} is {{ possum.age }} years old"
      }
    ],
    "relevance": 0.745
  },
  {
    "codeTitle": "Extended Business Configuration in Eleventy Author JSON",
    "codeDescription": "Example JSON configuration showing both the required business_url and optional business_name properties for customizing business listing display",
    "codeLanguage": "json",
    "codeTokens": 101,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2021-02-26-espbn.md#2025-04-05_snippet_1",
    "pageTitle": "Adding Business Information to Eleventy Author Profiles",
    "codeList": [
      {
        "language": "json",
        "code": "{\n\t\"url\": \"https://www.zachleat.com/\",\n\t\"name\": \"Zach Leatherman\",\n\t\"twitter\": \"zachleat\",\n\t\"business_url\": \"https://www.zachleat.com/hire-me/\",\n\t\"business_name\": \"zachleat Web Design Company\"\n}"
      }
    ],
    "relevance": 0.745
  },
  {
    "codeTitle": "Using renderFile Shortcode in Nunjucks",
    "codeDescription": "This example demonstrates how to use the renderFile shortcode to render an external template file within a Nunjucks template.",
    "codeLanguage": "nunjucks",
    "codeTokens": 49,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/render.md#2025-04-05_snippet_3",
    "pageTitle": "Render Plugin Documentation for Eleventy",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{% renderFile \"./src/_includes/blogpost.md\" %}"
      }
    ],
    "relevance": 0.745
  },
  {
    "codeTitle": "Disabling Template Transformations in Eleventy",
    "codeDescription": "Example of using templateEngineOverride to disable all transformations and copy the template content without changes.",
    "codeLanguage": "markdown",
    "codeTokens": 40,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/template-overrides.md#2025-04-05_snippet_3",
    "pageTitle": "Overriding Template Languages in Eleventy",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\ntemplateEngineOverride: false\n---"
      }
    ],
    "relevance": 0.745
  },
  {
    "codeTitle": "Configuring Eleventy Blog Post Metadata in Markdown",
    "codeDescription": "This snippet defines the metadata for an Eleventy blog post, including the news title, navigation parent, and external URL for the Wikipedia page.",
    "codeLanguage": "markdown",
    "codeTokens": 84,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2024-10-17-wikipedia.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Wikipedia Announcement",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\nnewstitle: \"Eleventy (software) is now on Wikipedia\"\neleventyNavigation:\n  parent: Blog\nexternal_url: https://en.wikipedia.org/wiki/Eleventy_(software)\n---"
      }
    ],
    "relevance": 0.743
  },
  {
    "codeTitle": "Adding Previous and Next Links in JavaScript",
    "codeDescription": "Demonstrates how to add previous and next pagination links in JavaScript templates, conditionally showing them based on the current page position.",
    "codeLanguage": "js",
    "codeTokens": 207,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/pagination/nav.md#2025-04-05_snippet_8",
    "pageTitle": "Creating Pagination Navigation in Eleventy",
    "codeList": [
      {
        "language": "js",
        "code": "module.exports = function({ pagination, page }) {\n\treturn `<nav aria-labelledby=\"my-pagination\">\n\t<h2 id=\"my-pagination\">This is my Pagination</h2>\n\t<ol>\n\t\t${pagination.href.previous ? `<li><a href=\"${pagination.href.previous}\">Previous</a></li>` : \"\"}\n\t\t${pagination.pages.map((pageEntry, index) => {\n\t\t\treturn `<li><a href=\"${pagination.hrefs[index]}\"${pagination.hrefs[index] === page.url ? \" aria-current=\\\"page\\\"\" : \"\"}>${\"Page \" + (index + 1)}</a></li>`;\n\t\t}).join(\"\\n\\t\\t\")}\n\t\t${pagination.href.next ? `<li><a href=\"${pagination.href.next}\">Next</a></li>` : \"\"}\n\t</ol>\n</nav>`;\n};"
      }
    ],
    "relevance": 0.742
  },
  {
    "codeTitle": "Configuring Blog Post Frontmatter in YAML",
    "codeDescription": "YAML frontmatter configuration for a blog post about 11ty Conference merchandise, setting the news title and navigation parent",
    "codeLanguage": "yaml",
    "codeTokens": 70,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2024-03-21-merch.md#2025-04-05_snippet_0",
    "pageTitle": "11ty Conference 2024 Merchandise Announcement",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\nnewstitle: \"Get your 11ty Conference 2024 Merch Bundle (Limited Edition)\"\neleventyNavigation:\n  parent: Blog\n---"
      }
    ],
    "relevance": 0.742
  },
  {
    "codeTitle": "Setting Layouts Directory in Eleventy Configuration",
    "codeDescription": "Demonstrates how to specify a separate layouts directory for Eleventy using the setLayoutsDirectory method, allowing layouts to be stored outside the includes directory.",
    "codeLanguage": "javascript",
    "codeTokens": 88,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/config.md#2025-04-05_snippet_3",
    "pageTitle": "Configuring Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\t// Order matters, put this at the top of your configuration file.\n\t// This is relative to your input directory!\n  eleventyConfig.setLayoutsDirectory(\"_layouts\");\n};"
      }
    ],
    "relevance": 0.74
  },
  {
    "codeTitle": "Configuring 11ty Frontmatter for Blog Post",
    "codeDescription": "Sets up the frontmatter for an 11ty blog post, including the title, navigation parent, and external URL for the survey.",
    "codeLanguage": "yaml",
    "codeTokens": 83,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2024-11-19-survey-awesome.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Blog Post: Survey Awesome Announcement",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\nnewstitle: Help Eleventy by filling out Survey Awesome!\neleventyNavigation:\n  parent: Blog\nexternal_url: https://survey.awesome.me/?from=11ty\n---"
      }
    ],
    "relevance": 0.74
  },
  {
    "codeTitle": "Eleventy Environment Variable Structure in JavaScript",
    "codeDescription": "Defines the structure of the eleventy variable object containing version information, generator metadata, and environment settings.",
    "codeLanguage": "javascript",
    "codeTokens": 151,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-eleventy-supplied.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Supplied Data Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "const eleventy = {\n\tversion: \"1.0.1\",\n\tgenerator: \"Eleventy v1.0.1\",\n\tenv: {\n\t\troot: \"/Users/zachleat/myProject/\",\n\t\tconfig: \"/Users/zachleat/myProject/.eleventy.js\",\n\t\tsource: \"cli\",\n\t\trunMode: \"build\"\n\t},\n\tdirectories: {\n\t\t\"input\": \"./\",\n\t\t\"includes\": \"./_includes/\",\n\t\t\"data\": \"./_data/\",\n\t\t\"output\": \"./_site/\"\n\t}\n};"
      }
    ],
    "relevance": 0.74
  },
  {
    "codeTitle": "Adding First and Last Page Links in Nunjucks",
    "codeDescription": "Shows how to add first and last page links in pagination navigation using Nunjucks templates, conditionally displaying them when not on the respective pages.",
    "codeLanguage": "njk",
    "codeTokens": 215,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/pagination/nav.md#2025-04-05_snippet_10",
    "pageTitle": "Creating Pagination Navigation in Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<nav aria-labelledby=\"my-pagination\">\n\t<h2 id=\"my-pagination\">This is my Pagination</h2>\n\t<ol>\n\t\t{%- if pagination.href.first and pagination.href.first != page.url %}<li><a href=\"{{ pagination.href.first }}\">First</a></li>{% endif %}\n\t\t{%- for pageEntry in pagination.pages %}\n\t\t<li><a href=\"{{ pagination.hrefs[ loop.index0 ] }}\"{% if pagination.hrefs[ loop.index0 ] == page.url %} aria-current=\"page\"{% endif %}>Page {{ loop.index }}</a></li>\n\t\t{%- endfor %}\n\t\t{%- if pagination.href.last and pagination.href.last != page.url %}<li><a href=\"{{ pagination.href.last }}\">Last</a></li>{% endif %}\n\t</ol>\n</nav>"
      }
    ],
    "relevance": 0.738
  },
  {
    "codeTitle": "Distinct URLs Redirects Configuration (netlify.toml)",
    "codeDescription": "Netlify.toml configuration for implementing distinct URLs with language codes while respecting user language preferences.",
    "codeLanguage": "toml",
    "codeTokens": 133,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/i18n.md#2025-04-05_snippet_5",
    "pageTitle": "Eleventy Internationalization (I18n) Guide",
    "codeList": [
      {
        "language": "toml",
        "code": "# Important: Per shadowing rules (force = false) URLs for the\n# language-specific content files are served without redirects.\n\n# Redirect for end-user's browser preference override\n[[redirects]]\n  from = \"/*\"\n  to = \"/es/:splat\"\n  status = 302\n  conditions = {Language = [\"es\"]}\n\n# Default\n[[redirects]]\n  from = \"/*\"\n  to = \"/en/:splat\"\n  status = 302"
      }
    ],
    "relevance": 0.738
  },
  {
    "codeTitle": "Using Liquid Template Tag for YouTube Embed in Eleventy",
    "codeDescription": "A custom Liquid template tag that embeds a YouTube video in an Eleventy site using the video ID parameter.",
    "codeLanguage": "liquid",
    "codeTokens": 55,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2023-11-29-static-feedback.md#2025-04-05_snippet_0",
    "pageTitle": "Blog Post: Static Feedback Episode #11 featuring Eleventy",
    "codeList": [
      {
        "language": "liquid",
        "code": "{% youtubeEmbed \"mZUTXX13X-I\" %}"
      }
    ],
    "relevance": 0.737
  },
  {
    "codeTitle": "Styling Current Page Link with CSS",
    "codeDescription": "Shows how to apply visual styling to indicate the current page in pagination navigation.",
    "codeLanguage": "css",
    "codeTokens": 40,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/pagination/nav.md#2025-04-05_snippet_6",
    "pageTitle": "Creating Pagination Navigation in Eleventy",
    "codeList": [
      {
        "language": "css",
        "code": "[aria-current] {\n\tbackground-color: #eee;\n}"
      }
    ],
    "relevance": 0.735
  },
  {
    "codeTitle": "Using @raw in WebC Components",
    "codeDescription": "Demonstrates using @raw to insert HTML content without reprocessing it as WebC, useful for inserting arbitrary HTML strings.",
    "codeLanguage": "html",
    "codeTokens": 88,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/webc.md#2025-04-05_snippet_23",
    "pageTitle": "WebC Template Language Documentation for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<!-- No reprocessing as WebC (useful in Eleventy layouts) -->\n<!-- Where `myHtmlContent` is a variable holding an arbitrary HTML string -->\n<template @raw=\"myHtmlContent\" webc:nokeep></template>"
      }
    ],
    "relevance": 0.735
  },
  {
    "codeTitle": "Configuring MDX Integration in Eleventy",
    "codeDescription": "This code snippet demonstrates how to configure Eleventy to render *.mdx files using the @mdx-js/node-loader. It imports necessary modules, registers the MDX loader, and adds an extension for MDX files.",
    "codeLanguage": "javascript",
    "codeTokens": 163,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/mdx.md#2025-04-05_snippet_0",
    "pageTitle": "MDX Integration in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import {renderToStaticMarkup} from 'react-dom/server'\nimport {register} from 'node:module';\n\nregister('@mdx-js/node-loader', import.meta.url);\n\nexport default function(eleventyConfig) {\n\televentyConfig.addExtension(\"mdx\", {\n\t\tkey: \"11ty.js\",\n\t\tcompile: () => {\n\t\t\treturn async function(data) {\n\t\t\t\tlet content = await this.defaultRenderer(data);\n\t\t\t\treturn renderToStaticMarkup(content);\n\t\t\t};\n\t\t}\n\t});\n};"
      }
    ],
    "relevance": 0.735
  },
  {
    "codeTitle": "Using renderContent Filter in Nunjucks with YAML Front Matter",
    "codeDescription": "This snippet shows how to use the renderContent filter to render a string of template content, comparing it with renderTemplate shortcode.",
    "codeLanguage": "yaml",
    "codeTokens": 81,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/render.md#2025-04-05_snippet_6",
    "pageTitle": "Render Plugin Documentation for Eleventy",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\nmyContent: \"{{ 'Second' }}\"\n---\n{% renderTemplate %}{{ myContent }}{% endrenderTemplate %} from renderTemplate\n{{ myContent | renderContent(\"njk\") }} from renderContent"
      }
    ],
    "relevance": 0.735
  },
  {
    "codeTitle": "Mixed Approach Redirects Configuration (netlify.toml)",
    "codeDescription": "Netlify.toml configuration for using content negotiation on the homepage while using distinct URLs for other pages.",
    "codeLanguage": "toml",
    "codeTokens": 173,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/i18n.md#2025-04-05_snippet_7",
    "pageTitle": "Eleventy Internationalization (I18n) Guide",
    "codeList": [
      {
        "language": "toml",
        "code": "# Content negotiation for home page\n[[redirects]]\n  from = \"/\"\n  to = \"/es/\"\n  status = 200\n  conditions = {Language = [\"es\"]}\n\n# Content negotiation for home page\n[[redirects]]\n  from = \"/\"\n  to = \"/en/\"\n  status = 200\n\n# Redirect for end-user's browser preference override\n[[redirects]]\n  from = \"/*\"\n  to = \"/es/:splat\"\n  status = 302\n  conditions = {Language = [\"es\"]}\n\n# Default\n[[redirects]]\n  from = \"/*\"\n  to = \"/en/:splat\"\n  status = 302"
      }
    ],
    "relevance": 0.735
  },
  {
    "codeTitle": "Displaying Mascot Image with Nunjucks in Markdown",
    "codeDescription": "This snippet uses Nunjucks templating within a Markdown file to display the new Eleventy mascot image. It utilizes the 'image' shortcode to render an SVG file with specified dimensions and alt text.",
    "codeLanguage": "markdown",
    "codeTokens": 162,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2023-11-03-mascot-david.md#2025-04-05_snippet_0",
    "pageTitle": "Introducing New Eleventy Mascot by David Neal",
    "codeList": [
      {
        "language": "markdown",
        "code": "<div style=\"display: inline-block; padding: 1em; border-radius: 1em; background-color: #019cb5; border: .75em solid #00848b; box-shadow: -10px 10px 80px rgb(0 0 0 / 10%); max-width: 25em\">\n  {% image \"./src/img/mascots/david.svg\", \"A possum in glasses suspended from a red balloon\", [800] %}\n</div>"
      }
    ],
    "relevance": 0.734
  },
  {
    "codeTitle": "Displaying Info Callout with Redirect in Nunjucks",
    "codeDescription": "Uses the callout shortcode to display an info-style notification that documentation has moved to a new location. Includes an HTML link to the new documentation path.",
    "codeLanguage": "nunjucks",
    "codeTokens": 72,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/local-installation.md#2025-04-05_snippet_0",
    "pageTitle": "Legacy Documentation Notice",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{% callout \"info\" %}This documentation has moved into the <a href=\"/docs/\">Get Started</a> instructions.{% endcallout %}"
      }
    ],
    "relevance": 0.732
  },
  {
    "codeTitle": "Running Eleventy with esbuild-register Configuration",
    "codeDescription": "This command line instruction shows how to run Eleventy with the esbuild-register configuration to process .11ty.jsx and .11ty.tsx files.",
    "codeLanguage": "bash",
    "codeTokens": 65,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/jsx.md#2025-04-05_snippet_3",
    "pageTitle": "JSX Template Language Configuration for Eleventy",
    "codeList": [
      {
        "language": "bash",
        "code": "npx @11ty/eleventy --formats=11ty.jsx,11ty.tsx"
      }
    ],
    "relevance": 0.732
  },
  {
    "codeTitle": "Displaying Dynamic Download Count with Liquid Template",
    "codeDescription": "A conditional Liquid template snippet that dynamically displays the current download count if npm data is available. It formats the number to be human-readable and includes the current date.",
    "codeLanguage": "liquid",
    "codeTokens": 85,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2023-10-23-seven-million.md#2025-04-05_snippet_0",
    "pageTitle": "Seven Million npm Downloads Announcement",
    "codeList": [
      {
        "language": "liquid",
        "code": "{%- if npm and npm.downloads %} _That download count is now {{ npm.downloads | humanReadableNum }} (as of {{ config.now | newsDate }})._\n{%- endif %}"
      }
    ],
    "relevance": 0.731
  },
  {
    "codeTitle": "Adding Custom Liquid Filters for RSS Date Formatting",
    "codeDescription": "This code shows how to add custom Liquid filters for date formatting in RSS feeds, using the dateToRfc3339 and dateToRfc822 functions provided by the RSS plugin.",
    "codeLanguage": "javascript",
    "codeTokens": 140,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/rss.md#2025-04-05_snippet_3",
    "pageTitle": "Configuring RSS Plugin for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import pluginRss from \"@11ty/eleventy-plugin-rss\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addLiquidFilter(\"dateToRfc3339\", pluginRss.dateToRfc3339);\n\n\t// New in RSS 1.2.0\n\televentyConfig.addLiquidFilter(\"dateToRfc822\", pluginRss.dateToRfc822);\n};"
      }
    ],
    "relevance": 0.73
  },
  {
    "codeTitle": "Overriding GetData Keys in Eleventy Custom Template",
    "codeDescription": "This advanced snippet demonstrates how to override getData keys for a specific instance in a custom template language using the eleventyDataKey property.",
    "codeLanguage": "javascript",
    "codeTokens": 160,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/custom.md#2025-04-05_snippet_13",
    "pageTitle": "Custom Template Languages in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "\t// some configuration truncated …\n  // if getData is `false`, `eleventyDataKey` will not be used.\n  getData: true,\n\n  getInstanceFromInputPath: function(inputPath) {\n    return {\n      // Overrides `getData` for this instance\n      eleventyDataKey: [\"myOverrideData\"],\n\n      // Will not be used\n      data: {\n        notAvailableOnGlobalData: 456\n      },\n\n      // Will be used.\n      myOverrideData: {\n        availableOnGlobalData: 123\n      }\n    }\n  },"
      }
    ],
    "relevance": 0.73
  },
  {
    "codeTitle": "Template Navigation Rendering Liquid",
    "codeDescription": "Liquid template syntax for rendering the navigation menu with excerpts",
    "codeLanguage": "liquid",
    "codeTokens": 48,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages.md#2025-04-05_snippet_2",
    "pageTitle": "Template Languages in Eleventy",
    "codeList": [
      {
        "language": "liquid",
        "code": "{{ eleventyNavigation.key | navFiltered | eleventyNavigationToHtml({ showExcerpt: true }) | safe }}"
      }
    ],
    "relevance": 0.728
  },
  {
    "codeTitle": "Configuring Eleventy Blog Post Frontmatter in YAML",
    "codeDescription": "YAML frontmatter configuration that sets up the blog post title and navigation parent for an Eleventy website article. It establishes the post's metadata and position in the site hierarchy.",
    "codeLanguage": "yaml",
    "codeTokens": 78,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2023-03-20-newstack.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Blog Post Configuration",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\nnewstitle: \"The Need for Speed: Why Eleventy Leaves Bundlers Behind\"\neleventyNavigation:\n  parent: Blog\n---"
      }
    ],
    "relevance": 0.728
  },
  {
    "codeTitle": "Setting Environment Variables in macOS/Linux",
    "codeDescription": "Command to set environment variables when running Eleventy in macOS or Linux environments",
    "codeLanguage": "bash",
    "codeTokens": 42,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/environment-vars.md#2025-04-05_snippet_0",
    "pageTitle": "Environment Variables Guide for Eleventy",
    "codeList": [
      {
        "language": "bash",
        "code": "MY_ENVIRONMENT=production npx @11ty/eleventy"
      }
    ],
    "relevance": 0.728
  },
  {
    "codeTitle": "Using log in Liquid filter chains",
    "codeDescription": "Demonstrates how to use the log filter within a chain of filters in Liquid templates. The log filter will pass the value through to the next filter after logging it to the console.",
    "codeLanguage": "liquid",
    "codeTokens": 86,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/filters/log.md#2025-04-05_snippet_3",
    "pageTitle": "Log Universal Filter in 11ty",
    "codeList": [
      {
        "language": "liquid",
        "code": "{{ \"My Title\" | log | upcase }}\n\nThis is the same as:\n{% assign temp = \"My Title\" %}\n{{ temp | log }}\n{{ temp | upcase }}"
      }
    ],
    "relevance": 0.725
  },
  {
    "codeTitle": "Using Multiple Tags in Markdown Front Matter",
    "codeDescription": "Illustrates different ways to specify multiple tags for a piece of content using YAML syntax.",
    "codeLanguage": "yaml",
    "codeTokens": 41,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/collections.md#2025-04-05_snippet_2",
    "pageTitle": "Using Tags for Collections in Eleventy",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\ntags: [\"cat\", \"dog\"]\n---"
      },
      {
        "language": "yaml",
        "code": "---\ntags:\n  - cat\n  - dog\n---"
      }
    ],
    "relevance": 0.725
  },
  {
    "codeTitle": "Embedding YouTube Video in Eleventy Markdown",
    "codeDescription": "Uses an Eleventy shortcode to embed a YouTube video in the markdown content.",
    "codeLanguage": "markdown",
    "codeTokens": 43,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2023-03-03-five-million.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Milestone Announcement",
    "codeList": [
      {
        "language": "markdown",
        "code": "{% youtubeEmbed \"tjfmI1epOag\" %}"
      }
    ],
    "relevance": 0.725
  },
  {
    "codeTitle": "Skipping Template Compilation for Underscore-Prefixed Sass Files in Eleventy",
    "codeDescription": "This snippet demonstrates how to skip compilation for Sass files that start with an underscore, adhering to the Sass convention for partial files.",
    "codeLanguage": "javascript",
    "codeTokens": 99,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/custom.md#2025-04-05_snippet_4",
    "pageTitle": "Custom Template Languages in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "compile: async function (inputContent, inputPath) {\n  let parsed = path.parse(inputPath);\n  if(parsed.name.startsWith(\"_\")) {\n    return;\n  }\n\n  let result = sass.compileString(inputContent);\n\n  return async (data) => {\n    return result.css;\n  };\n}"
      }
    ],
    "relevance": 0.725
  },
  {
    "codeTitle": "Querying Generator Image API for Logo URL",
    "codeDescription": "This snippet demonstrates the URL format for querying the Generator Image API to retrieve the logo of the site generator used for a specific website. The URL parameter must be URI encoded.",
    "codeLanguage": "plaintext",
    "codeTokens": 57,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/services/generator.md#2025-04-05_snippet_0",
    "pageTitle": "Generator Image API Documentation",
    "codeList": [
      {
        "language": "plaintext",
        "code": "https://v1.generator.11ty.dev/image/:url/"
      }
    ],
    "relevance": 0.725
  },
  {
    "codeTitle": "Installing Directory Output Plugin in Eleventy",
    "codeDescription": "This snippet shows how to install the Directory Output plugin using npm and add it to the Eleventy configuration file. It requires Eleventy 1.0.0 or newer.",
    "codeLanguage": "javascript",
    "codeTokens": 62,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/directory-output.md#2025-04-05_snippet_0",
    "pageTitle": "Directory Output Plugin for Eleventy",
    "codeList": [
      {
        "language": "bash",
        "code": "npm install @11ty/eleventy-plugin-directory-output"
      },
      {
        "language": "javascript",
        "code": "import dirOutputPlugin from \"@11ty/eleventy-plugin-directory-output\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.setQuietMode(true);\n\televentyConfig.addPlugin(dirOutputPlugin);\n};"
      }
    ],
    "relevance": 0.725
  },
  {
    "codeTitle": "Initializing D3.js Chart for Hosting Services",
    "codeDescription": "Sets up a horizontal bar chart using D3.js to visualize hosting service usage statistics. Imports required dependencies and configures chart parameters.",
    "codeLanguage": "javascript",
    "codeTokens": 114,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2023-07-17-community-survey-results.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Community Survey Results Analysis 2023",
    "codeList": [
      {
        "language": "javascript",
        "code": "import \"https://d3js.org/d3.v7.min.js\";\nimport { HorizontalBar } from \"/static/artificial-chart.js\";\nnew HorizontalBar(\"result-host\", \"result-host-table\", {\n\tshowLegend: false,\n\tshowInlineBarValues: \"outside\",\n\tvalueType: [\"float\"],\n\tmargin: {\n\t\tleft: 170\n\t}\n});"
      }
    ],
    "relevance": 0.725
  },
  {
    "codeTitle": "Using inputPathToUrl Filter in Liquid Templates",
    "codeDescription": "Maps a markdown file path to its output URL in a Liquid template. This allows creating robust links that don't break when output URL patterns change.",
    "codeLanguage": "liquid",
    "codeTokens": 60,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/filters/inputpath-to-url.md#2025-04-05_snippet_0",
    "pageTitle": "inputPathToUrl Universal Filter Documentation",
    "codeList": [
      {
        "language": "liquid",
        "code": "<a href=\"{{ \"index.md\" | inputPathToUrl }}\">Home</a>"
      }
    ],
    "relevance": 0.722
  },
  {
    "codeTitle": "Embedding YouTube Video using Liquid Template",
    "codeDescription": "Liquid template syntax to embed a YouTube video using a custom youtubeEmbed shortcode.",
    "codeLanguage": "liquid",
    "codeTokens": 42,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2021-10-08-state-of-eleventy-2021.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Website Blog Post Configuration",
    "codeList": [
      {
        "language": "liquid",
        "code": "{% youtubeEmbed \"kcRtANKWCLQ\" %}"
      }
    ],
    "relevance": 0.722
  },
  {
    "codeTitle": "Installing Eleventy Fetch Plugin",
    "codeDescription": "Command to install the Eleventy Fetch plugin using npm.",
    "codeLanguage": "bash",
    "codeTokens": 34,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/fetch.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Fetch Plugin Documentation",
    "codeList": [
      {
        "language": "bash",
        "code": "npm install @11ty/eleventy-fetch"
      }
    ],
    "relevance": 0.722
  },
  {
    "codeTitle": "Mixed Approach Redirects Configuration (_redirects file)",
    "codeDescription": "Netlify _redirects configuration for using content negotiation on the homepage while using distinct URLs for other pages.",
    "codeLanguage": "bash",
    "codeTokens": 85,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/i18n.md#2025-04-05_snippet_6",
    "pageTitle": "Eleventy Internationalization (I18n) Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "/   /es/        200   Language=es\n/   /en/        200\n/*  /es/:splat  302   Language=es\n/*  /en/:splat  302"
      }
    ],
    "relevance": 0.72
  },
  {
    "codeTitle": "Registering JavaScript Template Functions in Configuration",
    "codeDescription": "Shows how to register custom JavaScript template functions in the Eleventy configuration file. These functions become available in JavaScript templates.",
    "codeLanguage": "javascript",
    "codeTokens": 69,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/javascript.md#2025-04-05_snippet_14",
    "pageTitle": "JavaScript Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n  eleventyConfig.addJavaScriptFunction(\"myFunction\", function(a, b) { /* … */ });\n};"
      }
    ],
    "relevance": 0.72
  },
  {
    "codeTitle": "Configuring Eleventy Blog Post Metadata in Markdown",
    "codeDescription": "This snippet defines the metadata for an Eleventy blog post, including the news title and navigation parent. It uses YAML front matter to set these properties.",
    "codeLanguage": "markdown",
    "codeTokens": 67,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2021-09-03-2million.md#2025-04-05_snippet_0",
    "pageTitle": "Two Million npm Downloads Announcement for Eleventy",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\nnewstitle: Two Million npm Downloads!\neleventyNavigation:\n  parent: Blog\n---"
      }
    ],
    "relevance": 0.719
  },
  {
    "codeTitle": "Configuring Leaderboards Page Navigation in YAML for 11ty",
    "codeDescription": "This YAML configuration sets up the Leaderboards page in the 11ty website navigation. It specifies the parent page, navigation key, external URL, and order. The permalink is set to false, likely to prevent generating a separate page.",
    "codeLanguage": "yaml",
    "codeTokens": 96,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/speedlify/link-leaderboards.md#2025-04-05_snippet_0",
    "pageTitle": "Leaderboards Configuration for 11ty Website",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\neleventyNavigation:\n  parent: Community\n  key: Leaderboards\n  url: \"/speedlify/\"\n  order: 3\npermalink: false\n---"
      }
    ],
    "relevance": 0.718
  },
  {
    "codeTitle": "Basic Business URL Configuration in Eleventy Author JSON",
    "codeDescription": "Example JSON configuration showing the minimum required business_url property to list a freelancer in the Eleventy business network",
    "codeLanguage": "json",
    "codeTokens": 88,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2021-02-26-espbn.md#2025-04-05_snippet_0",
    "pageTitle": "Adding Business Information to Eleventy Author Profiles",
    "codeList": [
      {
        "language": "json",
        "code": "{\n\t\"url\": \"https://www.zachleat.com/\",\n\t\"name\": \"Zach Leatherman\",\n\t\"twitter\": \"zachleat\",\n\t\"business_url\": \"https://www.zachleat.com/hire-me/\"\n}"
      }
    ],
    "relevance": 0.716
  },
  {
    "codeTitle": "Netlify Configuration for Cache Persistence",
    "codeDescription": "TOML configuration for Netlify that uses netlify-plugin-cache to persist the .cache directory between builds, improving performance for subsequent deployments.",
    "codeLanguage": "toml",
    "codeTokens": 64,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/deployment.md#2025-04-05_snippet_2",
    "pageTitle": "Eleventy Deployment & Hosting Guide",
    "codeList": [
      {
        "language": "toml",
        "code": "[[plugins]]\npackage = \"netlify-plugin-cache\"\n\n  [plugins.inputs]\n  paths = [ \".cache\" ]"
      }
    ],
    "relevance": 0.715
  },
  {
    "codeTitle": "Including Current Page in Breadcrumbs for Eleventy Navigation (Liquid)",
    "codeDescription": "Demonstrates how to include the current page in breadcrumb results using the includeSelf option in Liquid templates.",
    "codeLanguage": "liquid",
    "codeTokens": 71,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_24",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "liquid",
        "code": "---\nnavOptions:\n  includeSelf: true\n---\n{% assign navPages = collections.all | eleventyNavigationBreadcrumb: \"Mammals\", navOptions %}\n{{ navPages | json }}"
      }
    ],
    "relevance": 0.715
  },
  {
    "codeTitle": "Adding the HAML plugin to Eleventy configuration",
    "codeDescription": "Basic configuration code to add the HAML plugin to your Eleventy setup, enabling support for .haml template files.",
    "codeLanguage": "javascript",
    "codeTokens": 78,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/haml.md#2025-04-05_snippet_1",
    "pageTitle": "HAML Template Language Configuration for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import hamlPlugin from \"@11ty/eleventy-plugin-haml\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addPlugin(hamlPlugin);\n}"
      }
    ],
    "relevance": 0.715
  },
  {
    "codeTitle": "Sample Output of Directory Output Plugin in Eleventy",
    "codeDescription": "This snippet shows a sample console output when using the Directory Output plugin. It displays grouped and sorted output by directory, including file sizes and benchmarks.",
    "codeLanguage": "bash",
    "codeTokens": 561,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/directory-output.md#2025-04-05_snippet_2",
    "pageTitle": "Directory Output Plugin for Eleventy",
    "codeList": [
      {
        "language": "bash",
        "code": "> eleventy-base-blog@6.0.0 build\n> eleventy\n\n↘ _site/                               --                           --       --\n  → about/index.html                   about/index.md            1.8kB    2.7ms\n  ↘ feed/                              --                           --       --\n    • .htaccess                        feed/htaccess.njk         0.1kB    0.2ms\n    • feed.json                        feed/json.njk           106.8kB   17.3ms\n    • feed.xml                         feed/feed.njk           109.8kB    9.8ms\n  → page-list/index.html               page-list.njk             3.2kB    1.1ms\n  ↘ posts/                             --                           --       --\n    → firstpost/index.html             posts/firstpost.md        3.5kB    1.0ms\n    → fourthpost/index.html            posts/fourthpost.md     101.0kB   27.2ms\n    → secondpost/index.html            posts/secondpost.md       3.2kB    5.6ms\n    → thirdpost/index.html             posts/thirdpost.md        4.5kB    7.5ms\n    • index.html                       archive.njk               3.0kB   13.7ms\n  ↘ tags/                              --                           --       --\n    → another-tag/index.html           tags.njk                  2.1kB    0.9ms\n    → number-2/index.html              tags.njk                  2.1kB    0.4ms\n    → posts-with-two-tags/index.html   tags.njk                  2.3kB    0.2ms\n    → second-tag/index.html            tags.njk                  2.5kB    0.5ms\n    • index.html                       tags-list.njk             2.0kB    0.4ms\n  • 404.html                           404.md                    1.9kB    0.4ms\n  • index.html                         index.njk                 2.8kB    1.7ms\n  • sitemap.xml                        sitemap.xml.njk           1.4kB    1.3ms\n[11ty] Copied 3 files / Wrote 18 files in 0.16 seconds (8.9ms each, v1.0.1)"
      }
    ],
    "relevance": 0.715
  },
  {
    "codeTitle": "Using the locale_url Filter in Templates",
    "codeDescription": "Shows how to use the locale_url filter to transform URLs to the current page's locale. This filter helps maintain correct language paths in shared templates.",
    "codeLanguage": "njk",
    "codeTokens": 69,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/i18n.md#2025-04-05_snippet_2",
    "pageTitle": "Eleventy Internationalization Plugin (i18n) Guide",
    "codeList": [
      {
        "language": "njk",
        "code": "{% raw %}\n<a href=\"{{ '/blog/' | locale_url }}\">Blog</a>\n{% endraw %}"
      }
    ],
    "relevance": 0.715
  },
  {
    "codeTitle": "Configuring Eleventy Navigation and Layout in Markdown Frontmatter",
    "codeDescription": "This snippet sets up the page metadata, navigation, and layout configuration for the Eleventy blog page using YAML frontmatter in a Markdown file.",
    "codeLanguage": "markdown",
    "codeTokens": 105,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/blog.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Community Blog",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\nheaderTitle: Eleventy Community\neleventyNavigation:\n  key: Blog\n  parent: Community\n  order: 1\nexcludeFromSidebar: false\nlayout: \"layouts/docs.njk\"\npermalink: \"/blog/\"\noverride:tags:\neleventyImport:\n  collections: [\"blog\"]\n---"
      }
    ],
    "relevance": 0.713
  },
  {
    "codeTitle": "Creating a Community Resources List with HTML and Nunjucks Templates",
    "codeDescription": "This snippet creates an unordered list of community-contributed Eleventy resources using a combination of HTML and Nunjucks template tags. It includes links to external resources with proper attribution to their creators, followed by an included template component.",
    "codeLanguage": "HTML",
    "codeTokens": 177,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/deployment.md#2025-04-05_snippet_3",
    "pageTitle": "Eleventy Deployment & Hosting Guide",
    "codeList": [
      {
        "language": "HTML",
        "code": "<ul class=\"list-bare\">\n\t<li>{% indieweblink \"GitLab Pages Sample Project\", \"https://gitlab.com/bkmgit/11ty\" %} by Benson Muite</li>\n\t<li>{%indieweblink \"GitHub Action for Eleventy\", \"https://github.com/marketplace/actions/eleventy-action\" %} by {% communityavatar \"TartanLlama\", \"Sy Brand\" %}@TartanLlama</li>\n</ul>\n\n{% include \"11tybundle.njk\" %}"
      }
    ],
    "relevance": 0.712
  },
  {
    "codeTitle": "YAML Front Matter Configuration for Eleventy Blog Post",
    "codeDescription": "YAML front matter configuration defining the news title and navigation parent for an Eleventy blog post.",
    "codeLanguage": "yaml",
    "codeTokens": 59,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2023-07-25-cloudcannon.md#2025-04-05_snippet_0",
    "pageTitle": "CloudCannon Partnership Announcement for Eleventy",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\nnewstitle: \"Eleventy and CloudCannon!\"\neleventyNavigation:\n  parent: Blog\n---"
      }
    ],
    "relevance": 0.712
  },
  {
    "codeTitle": "Rendering Navigation to Markdown in WebC",
    "codeDescription": "WebC template code to render the navigation structure as Markdown using the @html attribute.",
    "codeLanguage": "html",
    "codeTokens": 54,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_14",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<nav\n\t@html=\"eleventyNavigationToMarkdown(eleventyNavigation($data.collections.all))\"\n></nav>"
      }
    ],
    "relevance": 0.71
  },
  {
    "codeTitle": "Configuring 11ty Navigation for Runtime APIs Page",
    "codeDescription": "YAML front matter configuration for the Runtime APIs documentation page, setting up navigation hierarchy and page title.",
    "codeLanguage": "yaml",
    "codeTokens": 60,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/api-services.md#2025-04-05_snippet_0",
    "pageTitle": "11ty Runtime APIs Documentation",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\neleventyNavigation:\n  parent: Services\n  key: Runtime APIs\n  order: 3\npageTitle: Runtime APIs\n---"
      }
    ],
    "relevance": 0.71
  },
  {
    "codeTitle": "Running Eleventy with JSX and TSX Support",
    "codeDescription": "This command line instruction shows how to run Eleventy with support for processing .11ty.jsx and .11ty.tsx files.",
    "codeLanguage": "bash",
    "codeTokens": 61,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/jsx.md#2025-04-05_snippet_1",
    "pageTitle": "JSX Template Language Configuration for Eleventy",
    "codeList": [
      {
        "language": "bash",
        "code": "npx @11ty/eleventy --formats=11ty.jsx,11ty.tsx"
      }
    ],
    "relevance": 0.71
  },
  {
    "codeTitle": "Enabling Debug Mode on macOS/Linux",
    "codeDescription": "Command to enable debug mode for Eleventy on macOS or Linux systems using the DEBUG environment variable",
    "codeLanguage": "sh",
    "codeTokens": 46,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/debugging.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Debug Mode Documentation",
    "codeList": [
      {
        "language": "sh",
        "code": "DEBUG=Eleventy* npx @11ty/eleventy"
      }
    ],
    "relevance": 0.708
  },
  {
    "codeTitle": "URL Canonicalization with Twitter Filter",
    "codeDescription": "A Liquid template snippet that applies a canonicalTwitterUrl filter to a Twitter URL. This helps ensure Twitter links follow a standardized format for consistency throughout the site.",
    "codeLanguage": "liquid",
    "codeTokens": 67,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2023-10-23-seven-million.md#2025-04-05_snippet_2",
    "pageTitle": "Seven Million npm Downloads Announcement",
    "codeList": [
      {
        "language": "liquid",
        "code": "{{ \"https://twitter.com/eleven_ty/status/1338210611797389312\" | canonicalTwitterUrl }}"
      }
    ],
    "relevance": 0.708
  },
  {
    "codeTitle": "Configuring Ecosystem Page Navigation in YAML for 11ty",
    "codeDescription": "This YAML snippet configures the navigation properties for the Ecosystem page in an 11ty website. It sets the navigation key, order, and disables the URL. Additionally, it disables the default permalink generation.",
    "codeLanguage": "yaml",
    "codeTokens": 84,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/sidebar-ecosystem.md#2025-04-05_snippet_0",
    "pageTitle": "Ecosystem Configuration for 11ty Website",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\neleventyNavigation:\n  key: Ecosystem\n  order: 2\n  url: false\npermalink: false\n---"
      }
    ],
    "relevance": 0.707
  },
  {
    "codeTitle": "Running Eleventy Without Initial Build",
    "codeDescription": "Commands to run Eleventy in watch or serve mode without performing an initial build. Can be combined with incremental builds for optimized performance.",
    "codeLanguage": "bash",
    "codeTokens": 110,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/usage.md#2025-04-05_snippet_8",
    "pageTitle": "Eleventy Command Line Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "# Don't build when Eleventy starts, only build on file changes\nnpx @11ty/eleventy --watch --ignore-initial\nnpx @11ty/eleventy --serve --ignore-initial\n\n# Works great with Incremental\nnpx @11ty/eleventy --serve --incremental --ignore-initial"
      }
    ],
    "relevance": 0.705
  },
  {
    "codeTitle": "Preact Component for <is-land>",
    "codeDescription": "Example Preact component code that uses htm instead of JSX, showing how to export a function that renders into the <is-land> element.",
    "codeLanguage": "js",
    "codeTokens": 120,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/is-land.md#2025-04-05_snippet_14",
    "pageTitle": "Using <is-land> for Islands Architecture in 11ty",
    "codeList": [
      {
        "language": "js",
        "code": "import { html, render } from \"https://unpkg.com/htm/preact/index.mjs?module\";\n\nfunction App(props) {\n\treturn html`<p><strong>Hello ${props.name}!</strong></p>`;\n}\n\nexport default function (el) {\n\trender(html`<${App} name=\"from Preact\" />`, el);\n}"
      }
    ],
    "relevance": 0.705
  },
  {
    "codeTitle": "Adding a Shortcode in Eleventy for Handlebars Templates",
    "codeDescription": "Configuration showing how to add a shortcode named 'user' that can be used in Handlebars templates to generate user information HTML.",
    "codeLanguage": "javascript",
    "codeTokens": 102,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/handlebars.md#2025-04-05_snippet_3",
    "pageTitle": "Handlebars Template Language in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n  eleventyConfig.addShortcode(\"user\", function(name, twitterUsername) {\n    return `<div class=\"user\">\n<div class=\"user_name\">${name}</div>\n<div class=\"user_twitter\">@${twitterUsername}</div>\n</div>`;\n  });\n};"
      }
    ],
    "relevance": 0.705
  },
  {
    "codeTitle": "Ordering Navigation Items with 'order' Property",
    "codeDescription": "YAML front matter showing how to control the order of navigation items using the order property.",
    "codeLanguage": "yaml",
    "codeTokens": 54,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_6",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\neleventyNavigation:\n  key: Humans\n  parent: Mammals\n  order: 1\n---"
      }
    ],
    "relevance": 0.705
  },
  {
    "codeTitle": "Initializing D3.js Chart for Paid Hosting Types",
    "codeDescription": "Creates a horizontal bar chart to display paid hosting tier distribution. Uses the same chart configuration pattern with different data source.",
    "codeLanguage": "javascript",
    "codeTokens": 111,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2023-07-17-community-survey-results.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Community Survey Results Analysis 2023",
    "codeList": [
      {
        "language": "javascript",
        "code": "import \"https://d3js.org/d3.v7.min.js\";\nimport { HorizontalBar } from \"/static/artificial-chart.js\";\nnew HorizontalBar(\"result-paid\", \"result-paid-table\", {\n\tshowLegend: false,\n\tshowInlineBarValues: \"outside\",\n\tvalueType: [\"float\"],\n\tmargin: {\n\t\tleft: 170\n\t}\n});"
      }
    ],
    "relevance": 0.705
  },
  {
    "codeTitle": "Embedding YouTube Videos in Markdown",
    "codeDescription": "Demonstrates how to embed multiple YouTube videos related to Eleventy performance topics using a custom Markdown shortcode.",
    "codeLanguage": "markdown",
    "codeTokens": 98,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/performance.md#2025-04-05_snippet_0",
    "pageTitle": "Performance Documentation for Eleventy",
    "codeList": [
      {
        "language": "markdown",
        "code": "<div class=\"youtube-related\">\n  {%- youtubeEmbed \"b4frtsT4Cgo\", \"Full Control over HTML\" -%}\n  {%- youtubeEmbed \"dIa2Y4zesnw\", \"Add your site to the Leaderboards (Weekly №6)\" -%}\n</div>"
      }
    ],
    "relevance": 0.704
  },
  {
    "codeTitle": "Embedding YouTube Video with Liquid Template",
    "codeDescription": "Liquid template tag for embedding a YouTube video using a custom shortcode.",
    "codeLanguage": "liquid",
    "codeTokens": 40,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2020-10-15-state-of-eleventy-2020.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Blog Post Template",
    "codeList": [
      {
        "language": "liquid",
        "code": "{% youtubeEmbed \"ix5mPa6D7ZA\" %}"
      }
    ],
    "relevance": 0.702
  },
  {
    "codeTitle": "Opting Out of node_modules Ignore in Eleventy Configuration",
    "codeDescription": "Shows how to opt-out of the default behavior of ignoring node_modules folders in Eleventy 1.0 and 2.0.",
    "codeLanguage": "javascript",
    "codeTokens": 104,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/ignores.md#2025-04-05_snippet_2",
    "pageTitle": "Ignoring Template Files in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\t// in Eleventy 2.0\n\televentyConfig.ignores.delete(\"**/node_modules/**\");\n\n\t// in Eleventy 1.0\n\televentyConfig.ignores.delete(\"node_modules/**\");\n};"
      }
    ],
    "relevance": 0.702
  },
  {
    "codeTitle": "Embedding Related YouTube Video with Eleventy Shortcode",
    "codeDescription": "This snippet embeds a YouTube video using a custom Eleventy shortcode called 'youtubeEmbed'. It passes a video ID and title to display a related video about migrating from WordPress to Eleventy.",
    "codeLanguage": "liquid",
    "codeTokens": 99,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/migrate.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Project Content Import Documentation",
    "codeList": [
      {
        "language": "liquid",
        "code": "<div class=\"youtube-related\">\n  {%- youtubeEmbed \"WuH5QYCdh6w\", \"Start Your Escape from WordPress Using 11ty (in 3 minutes!)\" -%}\n</div>"
      }
    ],
    "relevance": 0.701
  },
  {
    "codeTitle": "Fetching Navigation Data in Nunjucks",
    "codeDescription": "Nunjucks template code to fetch navigation data into a variable and output for inspection using dump.",
    "codeLanguage": "jinja2",
    "codeTokens": 52,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_16",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "jinja2",
        "code": "{% set navPages = collections.all | eleventyNavigation %}\n{{ navPages | dump | safe }}"
      }
    ],
    "relevance": 0.7
  },
  {
    "codeTitle": "Adding YAML Support in Eleventy Configuration",
    "codeDescription": "Demonstrates how to add support for YAML files using the js-yaml package in Eleventy's configuration.",
    "codeLanguage": "javascript",
    "codeTokens": 73,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-custom.md#2025-04-05_snippet_2",
    "pageTitle": "Custom Data File Formats in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import yaml from \"js-yaml\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addDataExtension(\"yaml\", (contents) => yaml.load(contents));\n};"
      }
    ],
    "relevance": 0.7
  },
  {
    "codeTitle": "Installing Eleventy v1.0.0 via npm",
    "codeDescription": "Command to install Eleventy v1.0.0 as a local project dependency using npm.",
    "codeLanguage": "bash",
    "codeTokens": 46,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2022-01-09-eleventy-one-point-oh.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy v1.0.0 Release Notes",
    "codeList": [
      {
        "language": "bash",
        "code": "npm install @11ty/eleventy"
      }
    ],
    "relevance": 0.698
  },
  {
    "codeTitle": "Generating Plugin List with Nunjucks in Markdown",
    "codeDescription": "This snippet uses Nunjucks templating within a Markdown file to generate a list of Eleventy plugins. It iterates over a 'plugins' object, shuffling the order, and outputs each plugin's name, URL, description, and author information.",
    "codeLanguage": "markdown",
    "codeTokens": 193,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/community.md#2025-04-05_snippet_1",
    "pageTitle": "Community Contributed Plugins for Eleventy",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{%- for name, plugin in plugins | shuffle %}\n{%- set url = plugin.url or \"https://www.npmjs.com/package/\" + plugin.npm %}\n- [{% if plugin.deprecated %}~~{% endif %}{{ plugin.npm }}{% if plugin.deprecated %}~~{% endif %}]({{ url }}){% if plugin.description %} {% if plugin.deprecated %}~~{% endif %}{{ plugin.description }}{% if plugin.deprecated %}~~{% endif %}{% endif %} {{ plugin.deprecated }} {% authorLink authors, plugin.author %}\n{%- endfor %}"
      }
    ],
    "relevance": 0.698
  },
  {
    "codeTitle": "Configuring Blog Post Frontmatter in YAML",
    "codeDescription": "YAML frontmatter configuration for the blog post, setting the news title and navigation parent",
    "codeLanguage": "yaml",
    "codeTokens": 54,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2024-02-16-register-for-11ty-conf.md#2025-04-05_snippet_0",
    "pageTitle": "11ty Conference Registration Announcement",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\nnewstitle: \"Register now for the 11ty Conference!\"\neleventyNavigation:\n  parent: Blog\n---"
      }
    ],
    "relevance": 0.698
  },
  {
    "codeTitle": "Configuring Front Matter in Markdown",
    "codeDescription": "YAML front matter block defining the news title and navigation parent for the blog post",
    "codeLanguage": "yaml",
    "codeTokens": 55,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2023-02-10-product-hunt.md#2025-04-05_snippet_0",
    "pageTitle": "Product Hunt Announcement for Eleventy 2.0",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\nnewstitle: We're on Product Hunt Today!\neleventyNavigation:\n  parent: Blog\n---"
      }
    ],
    "relevance": 0.695
  },
  {
    "codeTitle": "Defining Tags in Markdown Front Matter",
    "codeDescription": "Demonstrates how to add a single tag to a Markdown file's front matter to include it in a collection.",
    "codeLanguage": "yaml",
    "codeTokens": 55,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/collections.md#2025-04-05_snippet_0",
    "pageTitle": "Using Tags for Collections in Eleventy",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\ntags: post\ntitle: Hot Take—Social Media is Considered Harmful\n---"
      }
    ],
    "relevance": 0.695
  },
  {
    "codeTitle": "Rendering Supporter Benefits in Nunjucks",
    "codeDescription": "Includes a template file that lists the benefits for Eleventy supporters.",
    "codeLanguage": "nunjucks",
    "codeTokens": 39,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/community.md#2025-04-05_snippet_4",
    "pageTitle": "Eleventy Community Contribution Guide",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{% include \"supporter-benefits.njk\" %}"
      }
    ],
    "relevance": 0.695
  },
  {
    "codeTitle": "Layout Front Matter Example",
    "codeDescription": "YAML front matter example for a layout file showing how metadata can be defined at the layout level for inheritance.",
    "codeLanguage": "yaml",
    "codeTokens": 67,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-deep-merge.md#2025-04-05_snippet_2",
    "pageTitle": "Data Deep Merge Configuration in Eleventy",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\ntitle: This is a Very Good Blog Post\nauthor: Zach\ntags:\n  - JavaScript\neleventyNavigation:\n  parent: test\n---"
      }
    ],
    "relevance": 0.695
  },
  {
    "codeTitle": "Adding External URL to Navigation",
    "codeDescription": "YAML front matter for adding an external link to the navigation menu with permalink:false to avoid creating a page.",
    "codeLanguage": "yaml",
    "codeTokens": 63,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_8",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\neleventyNavigation:\n  key: Zach's site\n  url: https://www.zachleat.com/\npermalink: false\n---"
      }
    ],
    "relevance": 0.695
  },
  {
    "codeTitle": "Excluding Content from Collections in Markdown",
    "codeDescription": "Shows how to use the eleventyExcludeFromCollections flag in front matter to exclude content from all collections.",
    "codeLanguage": "markdown",
    "codeTokens": 66,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/collections.md#2025-04-05_snippet_1",
    "pageTitle": "Using Tags for Collections in Eleventy",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\neleventyExcludeFromCollections: true\ntags: post\n---\n\nThis will not be available in `collections.all` or `collections.post`."
      }
    ],
    "relevance": 0.695
  },
  {
    "codeTitle": "Configuring Front Matter for Eleventy Blog Post",
    "codeDescription": "YAML front matter for an Eleventy blog post, setting the news title and navigation parent.",
    "codeLanguage": "yaml",
    "codeTokens": 52,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2023-03-03-five-million.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Milestone Announcement",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\nnewstitle: Five Million npm Downloads!\neleventyNavigation:\n  parent: Blog\n---"
      }
    ],
    "relevance": 0.692
  },
  {
    "codeTitle": "Including Supporters List in Nunjucks",
    "codeDescription": "Includes a template file that renders a list of Eleventy supporters.",
    "codeLanguage": "nunjucks",
    "codeTokens": 36,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/community.md#2025-04-05_snippet_5",
    "pageTitle": "Eleventy Community Contribution Guide",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{% include \"supporters.njk\" %}"
      }
    ],
    "relevance": 0.692
  },
  {
    "codeTitle": "Template Data Definition in YAML",
    "codeDescription": "Example of front matter data definition in a markdown template file, showing how to specify title, tags, and layout.",
    "codeLanguage": "yaml",
    "codeTokens": 63,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-cascade.md#2025-04-05_snippet_0",
    "pageTitle": "Data Cascade in Eleventy",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\ntitle: This is a Good Blog Post\ntags:\n  - CSS\n  - HTML\nlayout: my-layout.njk\n---"
      }
    ],
    "relevance": 0.692
  },
  {
    "codeTitle": "Implementing Init Function in Eleventy Custom Template",
    "codeDescription": "This snippet shows how to implement an init function for a custom template language in Eleventy. The init function runs once for setup before any compilation or rendering.",
    "codeLanguage": "javascript",
    "codeTokens": 75,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/custom.md#2025-04-05_snippet_9",
    "pageTitle": "Custom Template Languages in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "\t// some configuration truncated …\n  init: async function() {\n    // has access to current configuration settings in `this.config`\n  },"
      }
    ],
    "relevance": 0.69
  },
  {
    "codeTitle": "Non-Deep Merge Data Structure",
    "codeDescription": "JSON example showing the resulting data structure when deep merge is disabled, demonstrating basic object assignment behavior.",
    "codeLanguage": "json",
    "codeTokens": 83,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-deep-merge.md#2025-04-05_snippet_3",
    "pageTitle": "Data Deep Merge Configuration in Eleventy",
    "codeList": [
      {
        "language": "json",
        "code": "{\n\t\"title\": \"This is a Good Blog Post\",\n\t\"author\": \"Zach\",\n\t\"tags\": [\"CSS\", \"HTML\"],\n\t\"eleventyNavigation\": {\n\t\t\"key\": \"my-key\"\n\t}\n}"
      }
    ],
    "relevance": 0.69
  },
  {
    "codeTitle": "Listing Featured Sites Built with Eleventy in Nunjucks",
    "codeDescription": "This code iterates through a list of sites built with Eleventy, displaying a generator avatar and URL for each featured site.",
    "codeLanguage": "nunjucks",
    "codeTokens": 91,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/admin.md#2025-04-05_snippet_5",
    "pageTitle": "Eleventy Not-So-Private Admin Dashboard",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{% for key, site in builtwith -%}{% if site.url and site.featured -%}\n{% generatoravatar site.url %} [`{{ site.url }}`]({{site.url}})\n{% endif %}{%- endfor %}"
      }
    ],
    "relevance": 0.689
  },
  {
    "codeTitle": "Initializing D3.js Chart for Plugin Usage",
    "codeDescription": "Creates a horizontal bar chart for visualizing plugin usage data. Maintains consistent chart configuration across all survey result visualizations.",
    "codeLanguage": "javascript",
    "codeTokens": 112,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2023-07-17-community-survey-results.md#2025-04-05_snippet_3",
    "pageTitle": "Eleventy Community Survey Results Analysis 2023",
    "codeList": [
      {
        "language": "javascript",
        "code": "import \"https://d3js.org/d3.v7.min.js\";\nimport { HorizontalBar } from \"/static/artificial-chart.js\";\nnew HorizontalBar(\"result-plugins\", \"result-plugins-table\", {\n\tshowLegend: false,\n\tshowInlineBarValues: \"outside\",\n\tvalueType: [\"float\"],\n\tmargin: {\n\t\tleft: 170\n\t}\n});"
      }
    ],
    "relevance": 0.688
  },
  {
    "codeTitle": "Layout Data Definition in YAML",
    "codeDescription": "Example of front matter data definition in a layout file, demonstrating how to specify shared data properties like title, author, and tags.",
    "codeLanguage": "yaml",
    "codeTokens": 60,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-cascade.md#2025-04-05_snippet_1",
    "pageTitle": "Data Cascade in Eleventy",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\ntitle: This is a Very Good Blog Post\nauthor: Zach\ntags:\n  - JavaScript\n---"
      }
    ],
    "relevance": 0.688
  },
  {
    "codeTitle": "Refreshing Eleventy Supporters Data",
    "codeDescription": "Command to update the supporters data for the Eleventy website.",
    "codeLanguage": "bash",
    "codeTokens": 31,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/README.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Website Setup Documentation",
    "codeList": [
      {
        "language": "bash",
        "code": "npm run get-new-supporters"
      }
    ],
    "relevance": 0.686
  },
  {
    "codeTitle": "Rendering Conference Registration Link with OpenGraph Card",
    "codeDescription": "HTML markup for displaying a registration link with an OpenGraph preview image card for the conference website",
    "codeLanguage": "html",
    "codeTokens": 128,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2024-02-16-register-for-11ty-conf.md#2025-04-05_snippet_1",
    "pageTitle": "11ty Conference Registration Announcement",
    "codeList": [
      {
        "language": "html",
        "code": "<a href=\"https://conf.11ty.dev/#register\" class=\"elv-externalexempt opengraph-card\">\n  <img src=\"https://v1.opengraph.11ty.dev/https%3A%2F%2Fconf.11ty.dev%2F/medium/\" alt=\"The 11ty International Symposium on Making Web Sites Real Good\" loading=\"lazy\" decoding=\"async\" width=\"650\" height=\"341\">\n</a>"
      }
    ],
    "relevance": 0.685
  },
  {
    "codeTitle": "Allowing Missing File Extensions in Eleventy Front Matter",
    "codeDescription": "Configuration to allow permalinks without file extensions, overriding the default error behavior introduced in Eleventy 3.0.",
    "codeLanguage": "yaml",
    "codeTokens": 50,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/permalinks.md#2025-04-05_snippet_6",
    "pageTitle": "Eleventy Permalinks Configuration Guide",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\neleventyAllowMissingExtension: true\n---"
      }
    ],
    "relevance": 0.685
  },
  {
    "codeTitle": "Advanced JavaScript Front Matter in Eleventy",
    "codeDescription": "Shows advanced examples of JavaScript front matter in Eleventy, including async operations and dynamic imports.",
    "codeLanguage": "javascript",
    "codeTokens": 136,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-frontmatter.md#2025-04-05_snippet_4",
    "pageTitle": "Front Matter Data Configuration in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "---js\n// async-friendly\nconst myAsyncString = await Promise.resolve(\"HELLO FROM THE OTHER SIDE\");\n\n// export via destructuring assignment\nconst { myKey } = { myKey: \"myValue\" };\nconst [ first, second ] = [ \"first\", \"second\" ];\n\n// export via dynamic import\nconst { noop } = await import(\"@zachleat/noop\");\n\n// access Node.js globals like console.log\nconsole.log({ noop });\n---\n<!-- The template content goes here -->"
      }
    ],
    "relevance": 0.685
  },
  {
    "codeTitle": "Rendering Navigation with Excerpts in Liquid for Eleventy",
    "codeDescription": "Shows how to render navigation items with excerpts using the eleventyNavigationToHtml filter with the showExcerpt option in Liquid templates.",
    "codeLanguage": "liquid",
    "codeTokens": 72,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_31",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "liquid",
        "code": "---\nnavToHtmlOptions:\n  showExcerpt: true\n---\n{{ collections.all | eleventyNavigation: \"Humans\", navToHtmlOptions | json }}"
      }
    ],
    "relevance": 0.685
  },
  {
    "codeTitle": "Adding Another Child Page to Navigation",
    "codeDescription": "YAML front matter for adding another child page to the same parent in the navigation hierarchy.",
    "codeLanguage": "yaml",
    "codeTokens": 49,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_4",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\neleventyNavigation:\n  key: Bats\n  parent: Mammals\n---"
      }
    ],
    "relevance": 0.685
  },
  {
    "codeTitle": "Defining Page Metadata in Eleventy Front Matter",
    "codeDescription": "Sets the news title and navigation parent for the Eleventy page using YAML front matter.",
    "codeLanguage": "yaml",
    "codeTokens": 55,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2024-02-23-eight-million.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Milestone: Eight Million npm Downloads",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\nnewstitle: Eight Million npm Downloads!\neleventyNavigation:\n  parent: Blog\n---"
      }
    ],
    "relevance": 0.683
  },
  {
    "codeTitle": "Displaying Dynamic Download Count in Nunjucks",
    "codeDescription": "Conditionally renders the current download count using Nunjucks templating, including date formatting.",
    "codeLanguage": "nunjucks",
    "codeTokens": 76,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2024-02-23-eight-million.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Milestone: Eight Million npm Downloads",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{%- if npm and npm.downloads %} _That download count is now {{ npm.downloads | humanReadableNum }} (as of {{ config.now | newsDate }})._\n{%- endif %}"
      }
    ],
    "relevance": 0.682
  },
  {
    "codeTitle": "Sample Global Data File Structure",
    "codeDescription": "Example of a JSON data file structure that can be used for pagination in 11ty templates.",
    "codeLanguage": "json",
    "codeTokens": 56,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/pagination.md#2025-04-05_snippet_1",
    "pageTitle": "Pagination in 11ty Static Site Generator",
    "codeList": [
      {
        "language": "json",
        "code": "{\n\t\"myData\": [\"item1\", \"item2\", \"item3\", \"item4\"]\n}"
      }
    ],
    "relevance": 0.682
  },
  {
    "codeTitle": "Lit Integration with <is-land>",
    "codeDescription": "Using Lit with <is-land> by importing a custom element that provides both pre-JS and post-JS content.",
    "codeLanguage": "html",
    "codeTokens": 85,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/is-land.md#2025-04-05_snippet_15",
    "pageTitle": "Using <is-land> for Islands Architecture in 11ty",
    "codeList": [
      {
        "language": "html",
        "code": "<is-land on:visible import=\"./lib/lit/lit-component.js\">\n  <lit-component name=\"Post-JS\">Pre-JS Content</lit-web-component>\n</is-land>"
      }
    ],
    "relevance": 0.68
  },
  {
    "codeTitle": "Installing Eleventy Mustache Plugin via npm",
    "codeDescription": "Command to install the Eleventy Mustache plugin package which is required since Eleventy v3 moved template languages out of core.",
    "codeLanguage": "shell",
    "codeTokens": 54,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/languages/mustache.md#2025-04-05_snippet_0",
    "pageTitle": "Mustache Template Language in Eleventy",
    "codeList": [
      {
        "language": "shell",
        "code": "npm install @11ty/eleventy-plugin-mustache"
      }
    ],
    "relevance": 0.68
  },
  {
    "codeTitle": "Configuring Browsersync for Eleventy Dev Server",
    "codeDescription": "Demonstrates how to switch back to using Browsersync as the server module for Eleventy, including setting various Browsersync options.",
    "codeLanguage": "javascript",
    "codeTokens": 136,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/dev-server.md#2025-04-05_snippet_4",
    "pageTitle": "Configuring Eleventy Dev Server",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\televentyConfig.setServerOptions({\n\t\tmodule: \"@11ty/eleventy-server-browsersync\",\n\n\t\t// Default Browsersync options shown:\n\t\tport: 8080,\n\t\topen: false,\n\t\tnotify: false,\n\t\tui: false,\n\t\tghostMode: false,\n\n\t\t// Opt-out of the Browsersync snippet\n\t\t// snippet: false,\n\t});\n};"
      }
    ],
    "relevance": 0.68
  },
  {
    "codeTitle": "Creating OpenGraph Card with HTML and Liquid",
    "codeDescription": "Builds an OpenGraph card for the external link using HTML and Liquid. It includes an image generated from a screenshot service, with the URL encoded using a Liquid filter.",
    "codeLanguage": "html",
    "codeTokens": 139,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2024-05-22-sustainability-fundraising.md#2025-04-05_snippet_3",
    "pageTitle": "11ty Sustainability Campaign Announcement",
    "codeList": [
      {
        "language": "html",
        "code": "<a href=\"{{ external_url }}\" class=\"elv-externalexempt opengraph-card\" style=\"max-width: 25em\">\n  <img src=\"https://v1.screenshot.11ty.dev/{{ external_url | urlencode }}/opengraph/\" alt=\"So you want to speak at the 11ty International Symposium on Making Web Sites Real Good\" loading=\"lazy\" decoding=\"async\" width=\"650\" height=\"341\">\n</a>"
      }
    ],
    "relevance": 0.678
  },
  {
    "codeTitle": "Template File Pattern Example",
    "codeDescription": "Example patterns showing how Eleventy identifies template files in the input directory.",
    "codeLanguage": "text",
    "codeTokens": 39,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/advanced-order.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Build Process Documentation",
    "codeList": [
      {
        "language": "text",
        "code": "./src/**.njk\n./docs/**.md"
      }
    ],
    "relevance": 0.678
  },
  {
    "codeTitle": "Configuring Eleventy Navigation in Markdown Frontmatter",
    "codeDescription": "This snippet demonstrates how to set up Eleventy navigation in the frontmatter of a Markdown file. It specifies the parent navigation item for the current page.",
    "codeLanguage": "markdown",
    "codeTokens": 109,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2024-07-31-three-point-oh-beta-one.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy v3.0.0-beta.1 Release Announcement",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\nnewstitle: \"Eleventy v3.0.0-beta.1 now available\"\neleventyNavigation:\n  parent: Blog\nexternal_url: https://github.com/11ty/eleventy/releases/tag/v3.0.0-beta.1\n---"
      }
    ],
    "relevance": 0.675
  },
  {
    "codeTitle": "Engine-Specific Shortcode Configuration",
    "codeDescription": "Shows how to configure shortcodes specifically for different template engines like Liquid, Nunjucks, and JavaScript.",
    "codeLanguage": "JavaScript",
    "codeTokens": 198,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/shortcodes.md#2025-04-05_snippet_3",
    "pageTitle": "Eleventy Template Shortcodes Documentation",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "export default function (eleventyConfig) {\n  // Liquid\n  eleventyConfig.addLiquidShortcode(\"user\", function(firstName, lastName) {});\n  eleventyConfig.addPairedLiquidShortcode(\"user\", function(content, firstName, lastName) {});\n\n  // Nunjucks\n  eleventyConfig.addNunjucksShortcode(\"user\", function(firstName, lastName) {});\n  eleventyConfig.addPairedNunjucksShortcode(\"user\", function(content, firstName, lastName) {});\n\n  // JavaScript Template Function (New in 0.7.0)\n  eleventyConfig.addJavaScriptFunction(\"user\", function(firstName, lastName) {});\n  eleventyConfig.addJavaScriptFunction(\"user\", function(content, firstName, lastName) {}); // Faux-paired shortcode\n};"
      }
    ],
    "relevance": 0.675
  },
  {
    "codeTitle": "Dynamic Import Configuration for Eleventy v3",
    "codeDescription": "Shows the new recommended way to import Eleventy plugins in v3 using dynamic imports with async/await pattern in CommonJS.",
    "codeLanguage": "javascript",
    "codeTokens": 85,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/cjs-esm.md#2025-04-05_snippet_1",
    "pageTitle": "CommonJS and ESM Module Systems in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "module.exports = async function (eleventyConfig) {\n\tconst { I18nPlugin, RenderPlugin, HtmlBasePlugin } = await import(\"@11ty/eleventy\");\n\t// …\n};"
      }
    ],
    "relevance": 0.675
  },
  {
    "codeTitle": "Configuring CSS Minification Filter in Eleventy",
    "codeDescription": "This snippet shows how to configure a 'cssmin' filter in Eleventy using the clean-css package. It creates a function that minifies CSS code.",
    "codeLanguage": "javascript",
    "codeTokens": 96,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/quicktips/inline-css.md#2025-04-05_snippet_0",
    "pageTitle": "Inline Minified CSS in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import CleanCSS from \"clean-css\";\n\nexport default function (eleventyConfig) {\n\televentyConfig.addFilter(\"cssmin\", function (code) {\n\t\treturn new CleanCSS({}).minify(code).styles;\n\t});\n};"
      }
    ],
    "relevance": 0.675
  },
  {
    "codeTitle": "Configuring Eleventy Navigation and Page Metadata",
    "codeDescription": "Sets up the page's position in the Eleventy navigation structure and configures page metadata. It sets the parent page, navigation key, and excludes the page from the sidebar.",
    "codeLanguage": "yaml",
    "codeTokens": 77,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/testimonials.md#2025-04-05_snippet_0",
    "pageTitle": "Testimonials Page for Eleventy",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\neleventyNavigation:\n  parent: Why Eleventy?\n  key: Testmonials\nexcludeFromSidebar: true\n---"
      }
    ],
    "relevance": 0.675
  },
  {
    "codeTitle": "HTML Image Card with Dynamic URL",
    "codeDescription": "HTML markup for displaying an OpenGraph card with a dynamically generated screenshot using template variables and URL encoding.",
    "codeLanguage": "html",
    "codeTokens": 126,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2024-10-02-eleventy-v3.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy v3.0.0 Release Announcement",
    "codeList": [
      {
        "language": "html",
        "code": "<a href=\"{{ external_url }}\" class=\"elv-externalexempt opengraph-card\">\n  <img src=\"https://v1.screenshot.11ty.dev/{{ external_url | urlencode }}/opengraph/\" alt=\"Eleventy v3.0.0: ESM like a Phoenix (the mythical bird, not Arizona)\" loading=\"lazy\" decoding=\"async\" width=\"650\" height=\"341\">\n</a>"
      }
    ],
    "relevance": 0.672
  },
  {
    "codeTitle": "Configuring Eleventy Navigation for 11ty Conference Page",
    "codeDescription": "YAML frontmatter that defines the navigation settings for the 11ty Conference page. It places the page under the Community parent section with a specific order, sets the destination URL, and disables permalink generation.",
    "codeLanguage": "yaml",
    "codeTokens": 93,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/sidebar-conference.md#2025-04-05_snippet_0",
    "pageTitle": "11ty Conference Navigation Configuration",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\neleventyNavigation:\n  key: 11ty Conference\n  parent: Community\n  order: 5\n  url: https://conf.11ty.dev/\npermalink: false\n---"
      }
    ],
    "relevance": 0.672
  },
  {
    "codeTitle": "Rendering Markdown Navigation with Options in Nunjucks",
    "codeDescription": "This snippet shows how to use the eleventyNavigationToMarkdown filter with custom options in Nunjucks syntax. It demonstrates setting navigation options including showing excerpts.",
    "codeLanguage": "jinja2",
    "codeTokens": 104,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_34",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "jinja2",
        "code": "---js\n{\n  navToMdOptions: {\n    // Show excerpts (if they exist in data, read more above)\n    showExcerpt: false\n  }\n}\n---\n{{ collections.all | eleventyNavigation | eleventyNavigationToMarkdown(navToMdOptions) | safe }}"
      }
    ],
    "relevance": 0.67
  },
  {
    "codeTitle": "Setting Environment Variables in Windows Powershell",
    "codeDescription": "Command to set environment variables when running Eleventy in Windows Powershell",
    "codeLanguage": "bash",
    "codeTokens": 45,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/environment-vars.md#2025-04-05_snippet_2",
    "pageTitle": "Environment Variables Guide for Eleventy",
    "codeList": [
      {
        "language": "bash",
        "code": "$env:MY_ENVIRONMENT=\"production\"; npx @11ty/eleventy"
      }
    ],
    "relevance": 0.67
  },
  {
    "codeTitle": "Displaying Year-over-Year Comparative Metrics Table in HTML",
    "codeDescription": "HTML table showing annual performance metrics comparing 2023 to 2024 for npm downloads, GitHub issues closed, and GitHub pull requests closed, highlighting significant improvements in project activity.",
    "codeLanguage": "html",
    "codeTokens": 302,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2025-01-08-review-2024.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy 2024 in Review Blog Post",
    "codeList": [
      {
        "language": "html",
        "code": "<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Year over Year Metric</th>\n\t\t\t<th class=\"numeric\">2023</th>\n\t\t\t<th class=\"numeric\">2024</th>\n\t\t\t<th class=\"numeric\">Change</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>npm Downloads</td>\n\t\t\t<td class=\"numeric\">2,915,939</td>\n\t\t\t<td class=\"numeric\">3,125,404</td>\n\t\t\t<td class=\"numeric numeric-up\">7.18%</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>GitHub Issues Closed</td>\n\t\t\t<td class=\"numeric\">519</td>\n\t\t\t<td class=\"numeric\">695</td>\n\t\t\t<td class=\"numeric numeric-up\">33.91%</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>GitHub Pull Requests Closed</td>\n\t\t\t<td class=\"numeric\">197</td>\n\t\t\t<td class=\"numeric\">326</td>\n\t\t\t<td class=\"numeric numeric-up\">65.48%</td>\n\t\t</tr>\n\t</tbody>\n</table>"
      }
    ],
    "relevance": 0.668
  },
  {
    "codeTitle": "Configuring Eleventy Navigation and Metadata in Markdown Frontmatter",
    "codeDescription": "This snippet demonstrates how to set up Eleventy navigation and metadata for a blog post using YAML frontmatter in a Markdown file. It includes settings for the news title, navigation parent, blog highlight, external URL, and custom OG image.",
    "codeLanguage": "markdown",
    "codeTokens": 112,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2024-09-12-eleventy-font-awesome.md#2025-04-05_snippet_0",
    "pageTitle": "11ty Joins Font Awesome Announcement",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\nnewstitle: \"11ty is joining Font Awesome\"\neleventyNavigation:\n  parent: Blog\nblogHighlight: true\nexternal_url: https://blog.fontawesome.com/\nogimageOverride: /blog/fa-2.png\n---"
      }
    ],
    "relevance": 0.668
  },
  {
    "codeTitle": "Configuring 11ty Navigation in Front Matter",
    "codeDescription": "Front matter configuration for the Services page that defines its navigation structure within the 11ty website. It sets the parent category as Ecosystem, the navigation key as Services, and defines the display order.",
    "codeLanguage": "yaml",
    "codeTokens": 75,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/services.md#2025-04-05_snippet_0",
    "pageTitle": "11ty Services Documentation",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\neleventyNavigation:\n  parent: Ecosystem\n  key: Services\n  order: 5\n---"
      }
    ],
    "relevance": 0.665
  },
  {
    "codeTitle": "Creating Tag Pages with Pagination in Eleventy (Nunjucks)",
    "codeDescription": "This snippet shows how to set up a pagination template that automatically generates a page for each tag in your collections. It loops through all posts with a specific tag and displays them in reverse chronological order.",
    "codeLanguage": "markdown",
    "codeTokens": 140,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/quicktips/tag-pages.md#2025-04-05_snippet_0",
    "pageTitle": "Automatic Tag Pages Generation in Eleventy",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\npagination:\n  data: collections\n  size: 1\n  alias: tag\npermalink: /tags/{{ tag }}/\n---\n\n<h1>Tagged \"{{ tag }}\"</h1>\n\n<ol>\n{% set taglist = collections[ tag ] %}\n{% for post in taglist | reverse %}\n  <li><a href=\"{{ post.url }}\">{{ post.data.title }}</a></li>\n{% endfor %}\n</ol>"
      }
    ],
    "relevance": 0.665
  },
  {
    "codeTitle": "Cross-Platform Environment Variable Configuration",
    "codeDescription": "Package.json script configuration using cross-env for cross-platform environment variable support",
    "codeLanguage": "javascript",
    "codeTokens": 59,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/environment-vars.md#2025-04-05_snippet_4",
    "pageTitle": "Environment Variables Guide for Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "{\n  \"scripts\": {\n    \"build:prod\": \"cross-env MY_ENVIRONMENT=production npx @11ty/eleventy\"\n  }\n}"
      }
    ],
    "relevance": 0.665
  },
  {
    "codeTitle": "Capturing and Minifying CSS in Nunjucks Template",
    "codeDescription": "This HTML snippet demonstrates how to capture CSS content, minify it using the cssmin filter, and inline it within a style tag.",
    "codeLanguage": "html",
    "codeTokens": 96,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/quicktips/inline-css.md#2025-04-05_snippet_2",
    "pageTitle": "Inline Minified CSS in Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "<!-- capture the CSS content as a Nunjucks variable -->\n{% set css %} {% include \"sample.css\" %} {% endset %}\n<!-- feed it through our cssmin filter to minify -->\n<style>\n\t{{ css | cssmin | safe }}\n</style>"
      }
    ],
    "relevance": 0.665
  },
  {
    "codeTitle": "Defining Eleventy Navigation in Markdown Frontmatter",
    "codeDescription": "This snippet defines the navigation structure for the 'Community Plugins' page using Eleventy's built-in navigation plugin. It sets the key, order, and parent for the page in the site's navigation hierarchy.",
    "codeLanguage": "markdown",
    "codeTokens": 80,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/community.md#2025-04-05_snippet_0",
    "pageTitle": "Community Contributed Plugins for Eleventy",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\neleventyNavigation:\n  key: Community Plugins\n  order: 99\n  parent: Plugins\n---"
      }
    ],
    "relevance": 0.665
  },
  {
    "codeTitle": "Rendering 11ty Navigation Table of Contents using Nunjucks",
    "codeDescription": "A Nunjucks template code snippet that generates a table of contents for the Services section. It uses the 'nav' filter on 'Services', pipes it through the eleventyNavigationToHtml function with the showExcerpt option enabled, and marks the output as safe HTML.",
    "codeLanguage": "nunjucks",
    "codeTokens": 90,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/services.md#2025-04-05_snippet_1",
    "pageTitle": "11ty Services Documentation",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{{ \"Services\" | nav | eleventyNavigationToHtml({ showExcerpt: true }) | safe }}"
      }
    ],
    "relevance": 0.662
  },
  {
    "codeTitle": "Sample JavaScript File",
    "codeDescription": "Example JavaScript file content to demonstrate minification process.",
    "codeLanguage": "javascript",
    "codeTokens": 32,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/quicktips/inline-js.md#2025-04-05_snippet_1",
    "pageTitle": "Inline JavaScript Minification with 11ty",
    "codeList": [
      {
        "language": "javascript",
        "code": "// Hi\nconsole.log(\"Hi\");"
      }
    ],
    "relevance": 0.662
  },
  {
    "codeTitle": "Adding and Deleting Ignores in Eleventy Configuration",
    "codeDescription": "Demonstrates how to programmatically add and delete ignores using the Eleventy configuration API. The ignores are stored in a JavaScript Set.",
    "codeLanguage": "javascript",
    "codeTokens": 78,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/ignores.md#2025-04-05_snippet_1",
    "pageTitle": "Ignoring Template Files in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\televentyConfig.ignores.add(\"README.md\");\n\televentyConfig.ignores.delete(\"README.md\");\n};"
      }
    ],
    "relevance": 0.66
  },
  {
    "codeTitle": "Converting a Title to a URL Slug in Eleventy",
    "codeDescription": "This example demonstrates how to use the `slug` filter in Eleventy to convert a page title into a URL-friendly slug for use in the permalink. The filter transforms \"My Title\" into \"my-title\" in the resulting URL path.",
    "codeLanguage": "yaml",
    "codeTokens": 88,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/filters/slug.md#2025-04-05_snippet_0",
    "pageTitle": "Using the slug Universal Filter in Eleventy",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\ntitle: \"My Title\"\npermalink: \"/{{ title | slug }}/\"\n---\nOutputs to `/my-title/`."
      }
    ],
    "relevance": 0.66
  },
  {
    "codeTitle": "YAML Frontmatter Configuration",
    "codeDescription": "Configuration block that excludes this page from search functionality",
    "codeLanguage": "yaml",
    "codeTokens": 32,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/sites.md#2025-04-05_snippet_0",
    "pageTitle": "Built with Eleventy Site Redirection Page",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\nexcludeFromSearch: true\n---"
      }
    ],
    "relevance": 0.658
  },
  {
    "codeTitle": "Configuring Eleventy Navigation for Credits Page",
    "codeDescription": "This YAML front matter sets up the navigation configuration for the Credits page in an Eleventy project. It assigns a key of 'Credits' to be used in the site's navigation structure.",
    "codeLanguage": "yaml",
    "codeTokens": 66,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/credits.md#2025-04-05_snippet_0",
    "pageTitle": "Credits and Acknowledgments for Eleventy Project",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\neleventyNavigation:\n  key: Credits\n---"
      }
    ],
    "relevance": 0.655
  },
  {
    "codeTitle": "Creating a 404 Not Found Page Template in HTML with Eleventy",
    "codeDescription": "This code snippet demonstrates how to create a 404 Not Found page template using HTML and Eleventy's front matter. The template includes basic HTML structure, meta tags, and placeholder content for the 404 page.",
    "codeLanguage": "html",
    "codeTokens": 192,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/quicktips/not-found.md#2025-04-05_snippet_0",
    "pageTitle": "Adding a 404 Not Found Page to a Static Site with Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "---\ntitle: Oops! Not Found\npermalink: 404.html\n---\n\n<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"utf-8\" />\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t\t<title>{{ title }}</title>\n\t</head>\n\t<body>\n\t\t<h1>{{ title }}</h1>\n\t\t<p>\n\t\t\tThis is where you should tell the user how to find their content. Maybe on\n\t\t\tthe <a href=\"/\">home page?</a>\n\t\t</p>\n\t</body>\n</html>"
      }
    ],
    "relevance": 0.655
  },
  {
    "codeTitle": "Alternative File Naming Convention for i18n",
    "codeDescription": "Shows a less popular approach to organizing multilingual content using language codes in filenames rather than directory structure.",
    "codeLanguage": "bash",
    "codeTokens": 58,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/i18n.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Internationalization (I18n) Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "📄 about.en.html\n📄 about.es.html\n📄 and so on…"
      }
    ],
    "relevance": 0.655
  },
  {
    "codeTitle": "Inlining Minified CSS using JavaScript Template in Eleventy",
    "codeDescription": "This JavaScript function demonstrates an alternative method to inline and minify CSS using an 11ty.js template. It reads a CSS file, minifies its content, and returns it wrapped in a style tag.",
    "codeLanguage": "javascript",
    "codeTokens": 131,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/quicktips/inline-css.md#2025-04-05_snippet_3",
    "pageTitle": "Inline Minified CSS in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "import fs from \"node:fs/promises\";\nimport path from \"node:path\";\nimport CleanCSS from \"clean-css\";\n\nexport default async function (data) {\n\treturn `<style>\n\t  ${await fs\n\t\t\t.readFile(path.resolve(__dirname, \"./sample.css\"))\n\t\t\t.then((data) => new CleanCSS().minify(data).styles)}\n\t</style>`;\n};"
      }
    ],
    "relevance": 0.655
  },
  {
    "codeTitle": "Rendering Table of Contents in Nunjucks",
    "codeDescription": "Uses a Nunjucks tag to generate a table of contents for the page.",
    "codeLanguage": "nunjucks",
    "codeTokens": 34,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/community.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Community Contribution Guide",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "{% tableofcontents %}"
      }
    ],
    "relevance": 0.652
  },
  {
    "codeTitle": "Displaying Image with Nunjucks in HTML",
    "codeDescription": "Uses Nunjucks templating to display an image of the new Eleventy mascot within a styled HTML div element.",
    "codeLanguage": "nunjucks",
    "codeTokens": 139,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2021-10-18-new-mascot-from-geri-coady.md#2025-04-05_snippet_1",
    "pageTitle": "New Eleventy Mascot Announcement",
    "codeList": [
      {
        "language": "nunjucks",
        "code": "<div style=\"display: inline-block; border-radius: 1em; background-color: hsl(229deg 40% 38%); border: .75em solid hsl(229deg 40% 28%); box-shadow: -10px 10px 80px rgb(0 0 0 / 10%);\">\n  {% image \"./src/img/possum-geri.png\", \"3 possums suspended from a red balloon\" %}\n</div>"
      }
    ],
    "relevance": 0.65
  },
  {
    "codeTitle": "Configuring Language URL Redirects - Plain Format",
    "codeDescription": "Defines URL redirect rules for handling language-specific paths, including redirecting URLs with language codes and handling browser language preferences. Includes redirects for English (en) and Spanish (es) with appropriate HTTP status codes.",
    "codeLanguage": "plaintext",
    "codeTokens": 133,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/i18n.md#2025-04-05_snippet_8",
    "pageTitle": "Eleventy Internationalization (I18n) Guide",
    "codeList": [
      {
        "language": "plaintext",
        "code": "/en/*   /:splat     301!\n\n# Important: Per shadowing rules, URLs for the\n# _non-default_ language-specific content files\n# are served without redirects.\n\n# Redirect for end-user's browser preference override\n/*      /es/:splat  302   Language=es\n/*      /en/:splat  200"
      }
    ],
    "relevance": 0.65
  },
  {
    "codeTitle": "Embedding YouTube Video in Eleventy Markdown",
    "codeDescription": "Uses a custom Eleventy shortcode to embed a YouTube video within the markdown content.",
    "codeLanguage": "markdown",
    "codeTokens": 42,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2022-09-30-four-million.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Website Blog Post",
    "codeList": [
      {
        "language": "markdown",
        "code": "{% youtubeEmbed \"xlBXAHqjlec\" %}"
      }
    ],
    "relevance": 0.645
  },
  {
    "codeTitle": "Installing and Running Eleventy Website Locally",
    "codeDescription": "Commands to set up and run the Eleventy documentation website on a local development environment. Includes package installation, data fetching, and local server startup.",
    "codeLanguage": "bash",
    "codeTokens": 62,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/README.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Website Setup Documentation",
    "codeList": [
      {
        "language": "bash",
        "code": "npm install\nnpm run get-new-data\nnpx @11ty/eleventy --serve"
      }
    ],
    "relevance": 0.645
  },
  {
    "codeTitle": "Fetching Navigation Data in Liquid",
    "codeDescription": "Liquid template code to fetch navigation data into a variable and output as JSON for inspection.",
    "codeLanguage": "liquid",
    "codeTokens": 48,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/navigation.md#2025-04-05_snippet_15",
    "pageTitle": "Navigation Plugin for Eleventy",
    "codeList": [
      {
        "language": "liquid",
        "code": "{% assign navPages = collections.all | eleventyNavigation %}\n{{ navPages | json }}"
      }
    ],
    "relevance": 0.64
  },
  {
    "codeTitle": "Changing Global Plugin Concurrency in Eleventy Image",
    "codeDescription": "This code demonstrates how to change the global concurrency setting for the Eleventy Image plugin.",
    "codeLanguage": "javascript",
    "codeTokens": 65,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/image.md#2025-04-05_snippet_9",
    "pageTitle": "Eleventy Image Utility Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "import Image from \"@11ty/eleventy-img\";\nImage.concurrency = 4; // default is between 8 and 16 based on os.availableParallelism()"
      }
    ],
    "relevance": 0.64
  },
  {
    "codeTitle": "Installing an Eleventy Plugin with npm",
    "codeDescription": "Shows how to install an Eleventy plugin using npm. This example installs the official Eleventy RSS plugin as a project dependency.",
    "codeLanguage": "bash",
    "codeTokens": 54,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/create-plugin.md#2025-04-05_snippet_5",
    "pageTitle": "Creating and Using Eleventy Plugins",
    "codeList": [
      {
        "language": "bash",
        "code": "npm install @11ty/eleventy-plugin-rss --save"
      }
    ],
    "relevance": 0.635
  },
  {
    "codeTitle": "Configuring Eleventy for Resource.html Style URLs Without Trailing Slashes",
    "codeDescription": "JavaScript configuration to change the permalink structure globally for a project, removing trailing slashes and .html extensions from URLs for better compatibility with various hosting providers.",
    "codeLanguage": "javascript",
    "codeTokens": 158,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/permalinks.md#2025-04-05_snippet_8",
    "pageTitle": "Eleventy Permalinks Configuration Guide",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function(eleventyConfig) {\n\t// Set global permalinks to resource.html style\n\televentyConfig.addGlobalData(\"permalink\", () => {\n\t\treturn (data) =>\n\t\t\t`${data.page.filePathStem}.${data.page.outputFileExtension}`;\n\t});\n\n\t// Remove .html from `page.url` entries\n\televentyConfig.addUrlTransform((page) => {\n\t\tif (page.url.endsWith(\".html\")) {\n\t\t\treturn page.url.slice(0, -1 * \".html\".length);\n\t\t}\n\t});\n};"
      }
    ],
    "relevance": 0.635
  },
  {
    "codeTitle": "11ty Navigation Configuration in YAML",
    "codeDescription": "Front matter configuration for 11ty navigation, defining the page's position and metadata in the site hierarchy.",
    "codeLanguage": "yaml",
    "codeTokens": 73,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data.md#2025-04-05_snippet_0",
    "pageTitle": "Data Management Guide for 11ty Templates",
    "codeList": [
      {
        "language": "yaml",
        "code": "eleventyNavigation:\n  parent: Eleventy Projects\n  key: Using Data\n  title: Using Data in Templates\n  order: 2\ncommunityLinksKey: data"
      }
    ],
    "relevance": 0.635
  },
  {
    "codeTitle": "Distinct URLs Redirects Configuration (_redirects file)",
    "codeDescription": "Netlify _redirects configuration for implementing distinct URLs with language codes while respecting user language preferences.",
    "codeLanguage": "bash",
    "codeTokens": 96,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/i18n.md#2025-04-05_snippet_4",
    "pageTitle": "Eleventy Internationalization (I18n) Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "# Important: Per shadowing rules, URLs for the language-specific\n# content files are served without redirects.\n\n# Redirect for end-user's browser preference override\n/*  /es/:splat  302   Language=es\n\n# Default\n/*  /en/:splat  302"
      }
    ],
    "relevance": 0.63
  },
  {
    "codeTitle": "Generating Dynamic Permalinks for Recipes in Eleventy",
    "codeDescription": "This code snippet shows how to create dynamic permalinks for recipe pages in Eleventy using a directory data file. It slugifies the title of each recipe to create a URL-friendly permalink.",
    "codeLanguage": "javascript",
    "codeTokens": 78,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/permalinks.md#2025-04-05_snippet_10",
    "pageTitle": "Eleventy Permalinks Configuration Guide",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default {\n\tpermalink: function ({ title }) {\n\t\treturn `/recipes/${this.slugify(title)}`;\n\t},\n};"
      }
    ],
    "relevance": 0.63
  },
  {
    "codeTitle": "Installing Eleventy and Upgrade Helper with npm",
    "codeDescription": "Commands for upgrading Eleventy to a new major version and installing the corresponding Upgrade Helper plugin using npm.",
    "codeLanguage": "bash",
    "codeTokens": 110,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/plugins/upgrade-help.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Major Version Upgrade Helper",
    "codeList": [
      {
        "language": "bash",
        "code": "# Upgrading from Eleventy v0 to v1\nnpm install @11ty/eleventy@1\n\n# Or, upgrading from Eleventy v1 to v2\nnpm install @11ty/eleventy@2\n\n# Or, upgrading from Eleventy v2 to v3\nnpm install @11ty/eleventy@3"
      },
      {
        "language": "bash",
        "code": "# Upgrading from Eleventy v0 to v1\nnpm install @11ty/eleventy-upgrade-help@1\n\n# Or, upgrading from Eleventy v1 to v2\nnpm install @11ty/eleventy-upgrade-help@2\n\n# Or, upgrading from Eleventy v2 to v3\nnpm install @11ty/eleventy-upgrade-help@3"
      }
    ],
    "relevance": 0.625
  },
  {
    "codeTitle": "Installing eleventy-plugin-vite via npm",
    "codeDescription": "Command to install the eleventy-plugin-vite plugin using npm.",
    "codeLanguage": "bash",
    "codeTokens": 40,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/server-vite.md#2025-04-05_snippet_0",
    "pageTitle": "Integrating Vite with Eleventy",
    "codeList": [
      {
        "language": "bash",
        "code": "npm install @11ty/eleventy-plugin-vite"
      }
    ],
    "relevance": 0.625
  },
  {
    "codeTitle": "Template Include Statement",
    "codeDescription": "Liquid template syntax for including an external markdown file named 'datasources.md'.",
    "codeLanguage": "liquid",
    "codeTokens": 38,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data.md#2025-04-05_snippet_1",
    "pageTitle": "Data Management Guide for 11ty Templates",
    "codeList": [
      {
        "language": "liquid",
        "code": "{% include \"datasources.md\" %}"
      }
    ],
    "relevance": 0.625
  },
  {
    "codeTitle": "Using getAll() Method in Eleventy Collections",
    "codeDescription": "Shows how to retrieve all content items in their original order using the getAll() method. This creates an 'allMyContent' collection that includes all content items without any specific sorting.",
    "codeLanguage": "javascript",
    "codeTokens": 98,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/collections-api.md#2025-04-05_snippet_1",
    "pageTitle": "Eleventy Collections API Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "export default function (eleventyConfig) {\n\t// Unsorted items (in whatever order they were added)\n\televentyConfig.addCollection(\"allMyContent\", function (collectionsApi) {\n\t\treturn collectionsApi.getAll();\n\t});\n};"
      }
    ],
    "relevance": 0.62
  },
  {
    "codeTitle": "OpenGraph Image Example for a11yproject.com",
    "codeDescription": "HTML code for embedding an OpenGraph image from a11yproject.com with small size specification and proper loading attributes.",
    "codeLanguage": "html",
    "codeTokens": 108,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/services/opengraph.md#2025-04-05_snippet_2",
    "pageTitle": "Using OpenGraph Image Service with 11ty",
    "codeList": [
      {
        "language": "html",
        "code": "<img\n\tsrc=\"https://v1.opengraph.11ty.dev/https%3A%2F%2Fwww.a11yproject.com%2F/small/\"\n\talt=\"OpenGraph image for a11yproject.com\"\n\tloading=\"lazy\"\n\tdecoding=\"async\"\n\twidth=\"375\"\n\theight=\"197\"\n/>"
      }
    ],
    "relevance": 0.62
  },
  {
    "codeTitle": "CommonJS Configuration with Plugin Imports in Eleventy",
    "codeDescription": "Shows the traditional CommonJS approach for importing Eleventy plugins, which is no longer supported directly in v3. This demonstrates the old method using require().",
    "codeLanguage": "javascript",
    "codeTokens": 94,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/cjs-esm.md#2025-04-05_snippet_0",
    "pageTitle": "CommonJS and ESM Module Systems in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "// Any combination of these\nconst { I18nPlugin, RenderPlugin, HtmlBasePlugin } = require(\"@11ty/eleventy\");\n\nmodule.exports = function (eleventyConfig) {\n\t// …\n};"
      }
    ],
    "relevance": 0.615
  },
  {
    "codeTitle": "Setting Custom Timeout for Screenshot Generation",
    "codeDescription": "Shows how to set a custom timeout for the screenshot generation process. The timeout is specified in seconds and has a range of 3 to 9 seconds.",
    "codeLanguage": "plaintext",
    "codeTokens": 60,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/services/screenshots.md#2025-04-05_snippet_3",
    "pageTitle": "Screenshots API Documentation for Eleventy",
    "codeList": [
      {
        "language": "plaintext",
        "code": "/:url/_timeout:3/\n/:url/_timeout:9/"
      }
    ],
    "relevance": 0.615
  },
  {
    "codeTitle": "Accessing Global Data in Eleventy Templates",
    "codeDescription": "Example showing how data from a JSON file becomes available in templates as a JavaScript object. This demonstrates the data structure when accessing the userList data.",
    "codeLanguage": "javascript",
    "codeTokens": 55,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-global.md#2025-04-05_snippet_1",
    "pageTitle": "Using Global Data Files in Eleventy",
    "codeList": [
      {
        "language": "javascript",
        "code": "{\n\tuserList: [\"user1\", \"user2\"];\n}"
      }
    ],
    "relevance": 0.615
  },
  {
    "codeTitle": "Configuring Eleventy Navigation and Blog Post Metadata in Markdown",
    "codeDescription": "This snippet sets up the front matter for an Eleventy blog post, including the news title and navigation configuration. It demonstrates how to structure metadata for an Eleventy-powered blog.",
    "codeLanguage": "markdown",
    "codeTokens": 78,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/blog/2022-11-29-jamstack-survey-2022.md#2025-04-05_snippet_0",
    "pageTitle": "Jamstack Community Survey 2022 Results Announcement",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\nnewstitle: \"Jamstack Community Survey 2022 Results\"\neleventyNavigation:\n  parent: Blog\n---"
      }
    ],
    "relevance": 0.61
  },
  {
    "codeTitle": "URL Format for Eleventy Sparklines API",
    "codeDescription": "The URL structure for accessing the Sparklines API service. It shows the two supported formats - one with just dimensions and values, and another that also includes a color parameter.",
    "codeLanguage": "plaintext",
    "codeTokens": 79,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/services/sparklines.md#2025-04-05_snippet_0",
    "pageTitle": "Eleventy Sparklines API Documentation",
    "codeList": [
      {
        "language": "plaintext",
        "code": "https://v1.sparkline.11ty.dev/:dimensions/:values/\nhttps://v1.sparkline.11ty.dev/:dimensions/:values/:color/"
      }
    ],
    "relevance": 0.61
  },
  {
    "codeTitle": "Using JavaScript Object Front Matter in Nunjucks with Eleventy",
    "codeDescription": "Illustrates how to use a JavaScript object for front matter in a Nunjucks template, including a function for current date.",
    "codeLanguage": "nunjucks",
    "codeTokens": 98,
    "codeId": "https://github.com/11ty/11ty-website/blob/unknown_branch/src/docs/data-frontmatter.md#2025-04-05_snippet_5",
    "pageTitle": "Front Matter Data Configuration in Eleventy",
    "codeList": [
      {
        "language": "html",
        "code": "---js\n{\n  title: \"My page title\",\n  currentDate: function() {\n    // You can have a JavaScript function here!\n    return (new Date()).toLocaleString();\n  }\n}\n---\n\n<h1>{{ title }}</h1>\n<p>Published on {{ currentDate() }}</p>"
      }
    ],
    "relevance": 0.605
  }
]