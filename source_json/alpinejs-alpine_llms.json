[
  {
    "codeTitle": "Building a Counter Component with Alpine.js",
    "codeDescription": "A simple counter implementation using Alpine.js that demonstrates state management with x-data, event handling with x-on, and reactive UI updates with x-text.",
    "codeLanguage": "alpine",
    "codeTokens": 79,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/start-here.md#2025-04-11_snippet_1",
    "pageTitle": "Getting Started with Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ count: 0 }\">\n    <button x-on:click=\"count++\">Increment</button>\n\n    <span x-text=\"count\"></span>\n</div>"
      }
    ],
    "relevance": 0.995
  },
  {
    "codeTitle": "Creating a Toggle Dropdown with Alpine.js",
    "codeDescription": "A dropdown component that uses x-show to toggle visibility and implements a click-outside handler to close the dropdown when clicking elsewhere on the page.",
    "codeLanguage": "alpine",
    "codeTokens": 88,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/start-here.md#2025-04-11_snippet_2",
    "pageTitle": "Getting Started with Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ open: false }\">\n    <button @click=\"open = ! open\">Toggle</button>\n\n    <div x-show=\"open\" @click.outside=\"open = false\">Contents...</div>\n</div>"
      }
    ],
    "relevance": 0.99
  },
  {
    "codeTitle": "Converting a Multi-element Component to a Single-element Component",
    "codeDescription": "Demonstrates how to refactor a component with a wrapper div to a single-element component by moving x-data directly to the element that needs it.",
    "codeLanguage": "alpine",
    "codeTokens": 73,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/data.md#2025-04-11_snippet_6",
    "pageTitle": "Alpine.js x-data Directive Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ open: true }\">\n    <button @click=\"open = false\" x-show=\"open\">Hide Me</button>\n</div>"
      },
      {
        "language": "alpine",
        "code": "<button x-data=\"{ open: true }\" @click=\"open = false\" x-show=\"open\">\n    Hide Me\n</button>"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "Initializing a Basic Alpine.js Component with x-data",
    "codeDescription": "Creates a simple dropdown component using Alpine.js's x-data directive to define the component and its reactive state. The example demonstrates toggling content visibility based on a boolean state.",
    "codeLanguage": "alpine",
    "codeTokens": 90,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/data.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js x-data Directive Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ open: false }\">\n    <button @click=\"open = ! open\">Toggle Content</button>\n\n    <div x-show=\"open\">\n        Content...\n    </div>\n</div>"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "Accessing Global Store from Alpine.js Components",
    "codeDescription": "Shows how to access and modify data from a global store using the $store magic property. This enables different parts of the application to share and interact with the same state.",
    "codeLanguage": "alpine",
    "codeTokens": 135,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/state.md#2025-04-11_snippet_7",
    "pageTitle": "Alpine.js State Management",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data>\n    <template x-for=\"tab in $store.tabs.items\">\n        ...\n    </template>\n</div>\n\n<div x-data>\n    <button @click=\"$store.tabs.current = 'first'\">First Tab</button>\n    <button @click=\"$store.tabs.current = 'second'\">Second Tab</button>\n    <button @click=\"$store.tabs.current = 'third'\">Third Tab</button>\n</div>"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "Including Alpine.js via CDN Script Tag",
    "codeDescription": "Shows how to include Alpine.js in an HTML page using a script tag with a CDN link. The script tag should be placed in the head section with the 'defer' attribute.",
    "codeLanguage": "html",
    "codeTokens": 91,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/installation.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js Installation Guide",
    "codeList": [
      {
        "language": "html",
        "code": "<html>\n    <head>\n        ...\n\n        <script defer src=\"https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js\"></script>\n    </head>\n    ...\n</html>"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "Setting Up Alpine.js Basic HTML Template",
    "codeDescription": "A minimal HTML setup needed to start using Alpine.js, loading the library from CDN and displaying a simple message using the x-data and x-text directives.",
    "codeLanguage": "alpine",
    "codeTokens": 109,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/start-here.md#2025-04-11_snippet_0",
    "pageTitle": "Getting Started with Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<html>\n<head>\n    <script defer src=\"https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js\"></script>\n</head>\n<body>\n    <h1 x-data=\"{ message: 'I ❤️ Alpine' }\" x-text=\"message\"></h1>\n</body>\n</html>"
      }
    ],
    "relevance": 0.984
  },
  {
    "codeTitle": "Reactive Data Modification Example",
    "codeDescription": "Shows how reactive data behaves when getting and setting values, demonstrating the synchronization between original and reactive objects.",
    "codeLanguage": "javascript",
    "codeTokens": 80,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/reactivity.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js Reactivity Guide",
    "codeList": [
      {
        "language": "javascript",
        "code": "console.log(data.count) // 1\nconsole.log(reactiveData.count) // 1\n\nreactiveData.count = 2\n\nconsole.log(data.count) // 2\nconsole.log(reactiveData.count) // 2"
      }
    ],
    "relevance": 0.98
  },
  {
    "codeTitle": "Implementing Computed Properties with Getters in Alpine.js",
    "codeDescription": "This snippet demonstrates how to create computed properties using getters in Alpine.js. It shows a basic data structure with an items array and a filteredItems getter that filters the items based on a search string.",
    "codeLanguage": "javascript",
    "codeTokens": 90,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/start-here.md#2025-04-11_snippet_4",
    "pageTitle": "Getting Started with Alpine.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "{\n    ...\n    items: ['foo', 'bar', 'baz'],\n\n    get filteredItems() {\n        return this.items.filter(\n            i => i.startsWith(this.search)\n        )\n    }\n}"
      }
    ],
    "relevance": 0.98
  },
  {
    "codeTitle": "Creating a Global Store with Alpine.store()",
    "codeDescription": "Demonstrates how to create a global store using Alpine.store(). This creates state that can be accessed from any Alpine component on the page, enabling application-wide state management.",
    "codeLanguage": "js",
    "codeTokens": 68,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/state.md#2025-04-11_snippet_6",
    "pageTitle": "Alpine.js State Management",
    "codeList": [
      {
        "language": "js",
        "code": "Alpine.store('tabs', {\n    current: 'first',\n\n    items: ['first', 'second', 'third'],\n})"
      }
    ],
    "relevance": 0.98
  },
  {
    "codeTitle": "Installing Alpine.js via NPM",
    "codeDescription": "Command to install Alpine.js using NPM package manager. This is the first step when using Alpine.js as a module in a JavaScript bundle.",
    "codeLanguage": "shell",
    "codeTokens": 43,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/installation.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js Installation Guide",
    "codeList": [
      {
        "language": "shell",
        "code": "npm install alpinejs"
      }
    ],
    "relevance": 0.98
  },
  {
    "codeTitle": "Conditional Rendering with x-if in Alpine.js",
    "codeDescription": "Demonstrates how to use the x-if directive to conditionally render elements by adding or removing them from the DOM.",
    "codeLanguage": "alpine",
    "codeTokens": 85,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/templating.md#2025-04-11_snippet_3",
    "pageTitle": "Templating in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ open: false }\">\n    <button @click=\"open = ! open\">Expand</button>\n\n    <template x-if=\"open\">\n        <div>\n            Content...\n        </div>\n    </template>\n</div>"
      }
    ],
    "relevance": 0.975
  },
  {
    "codeTitle": "Creating a Reusable Dropdown Component with Alpine.data",
    "codeDescription": "This snippet demonstrates how to create a reusable dropdown component using Alpine.data. It defines a component with an open state and toggle method, which can be used across multiple elements.",
    "codeLanguage": "alpine",
    "codeTokens": 123,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/globals/alpine-data.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.data Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"dropdown\">\n    <button @click=\"toggle\">...</button>\n\n    <div x-show=\"open\">...</div>\n</div>\n\n<script>\n    document.addEventListener('alpine:init', () => {\n        Alpine.data('dropdown', () => ({\n            open: false,\n\n            toggle() {\n                this.open = ! this.open\n            }\n        }))\n    })\n</script>"
      }
    ],
    "relevance": 0.975
  },
  {
    "codeTitle": "Implementing a Filtered Search with Alpine.js",
    "codeDescription": "A searchable list that filters items based on user input, demonstrating x-model for two-way data binding, computed properties with getters, and x-for for iterating over filtered results.",
    "codeLanguage": "alpine",
    "codeTokens": 152,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/start-here.md#2025-04-11_snippet_3",
    "pageTitle": "Getting Started with Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div\n    x-data=\"{\n        search: '',\n\n        items: ['foo', 'bar', 'baz'],\n\n        get filteredItems() {\n            return this.items.filter(\n                i => i.startsWith(this.search)\n            )\n        }\n    }\"\n>\n    <input x-model=\"search\" placeholder=\"Search...\">\n\n    <ul>\n        <template x-for=\"item in filteredItems\" :key=\"item\">\n            <li x-text=\"item\"></li>\n        </template>\n    </ul>\n</div>"
      }
    ],
    "relevance": 0.975
  },
  {
    "codeTitle": "Registering an Alpine Store using script tag",
    "codeDescription": "Shows how to define an Alpine store inside an 'alpine:init' listener when including Alpine via a script tag. The example creates a 'darkMode' store with an 'on' property and a toggle method.",
    "codeLanguage": "alpine",
    "codeTokens": 103,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/globals/alpine-store.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.store: Global State Management",
    "codeList": [
      {
        "language": "alpine",
        "code": "<script>\n    document.addEventListener('alpine:init', () => {\n        Alpine.store('darkMode', {\n            on: false,\n\n            toggle() {\n                this.on = ! this.on\n            }\n        })\n    })\n</script>"
      }
    ],
    "relevance": 0.975
  },
  {
    "codeTitle": "Looping Elements with x-for in Alpine.js",
    "codeDescription": "Illustrates how to iterate over arrays and create repeated elements using the x-for directive.",
    "codeLanguage": "alpine",
    "codeTokens": 74,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/templating.md#2025-04-11_snippet_11",
    "pageTitle": "Templating in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ statuses: ['open', 'closed', 'archived'] }\">\n    <template x-for=\"status in statuses\">\n        <div x-text=\"status\"></div>\n    </template>\n</div>"
      }
    ],
    "relevance": 0.975
  },
  {
    "codeTitle": "Basic Text Input Binding with x-model in Alpine.js",
    "codeDescription": "A simple example showing how to bind a text input to Alpine data using x-model, creating a two-way binding that updates the data when typing and displays it in a span element.",
    "codeLanguage": "alpine",
    "codeTokens": 84,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/model.md#2025-04-11_snippet_0",
    "pageTitle": "Understanding x-model Directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ message: '' }\">\n    <input type=\"text\" x-model=\"message\">\n\n    <span x-text=\"message\"></span>\n</div>"
      }
    ],
    "relevance": 0.97
  },
  {
    "codeTitle": "Async Data Fetching with x-init in Alpine.js",
    "codeDescription": "Shows how to use x-init to fetch JSON data asynchronously and store it in x-data before component processing.",
    "codeLanguage": "alpine",
    "codeTokens": 64,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/init.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js x-init Directive Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div\n    x-data=\"{ posts: [] }\"\n    x-init=\"posts = await (await fetch('/posts')).json()\"\n>...</div>"
      }
    ],
    "relevance": 0.97
  },
  {
    "codeTitle": "Using Alpine.js Data on a Single Element",
    "codeDescription": "Demonstrates using Alpine.js data within a single element, where both the data declaration and the usage of that data occur on the same HTML element.",
    "codeLanguage": "alpine",
    "codeTokens": 59,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/state.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js State Management",
    "codeList": [
      {
        "language": "alpine",
        "code": "<button x-data=\"{ label: 'Click Here' }\" x-text=\"label\"></button>"
      }
    ],
    "relevance": 0.97
  },
  {
    "codeTitle": "Basic Click Event Handling in Alpine.js",
    "codeDescription": "Simple example of handling a click event using x-on directive to show an alert.",
    "codeLanguage": "alpine",
    "codeTokens": 45,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/on.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js Event Handling Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<button x-on:click=\"alert('Hello World!')\">Say Hi</button>"
      }
    ],
    "relevance": 0.97
  },
  {
    "codeTitle": "Declaring Local State with x-data in Alpine.js",
    "codeDescription": "Demonstrates how to declare local state using the x-data directive in Alpine.js. This creates a reactive data object that can be accessed by other Alpine directives within the same element.",
    "codeLanguage": "alpine",
    "codeTokens": 60,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/state.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js State Management",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ open: false }\">\n    ...\n</div>"
      }
    ],
    "relevance": 0.967
  },
  {
    "codeTitle": "Using x-if directive with template tag in Alpine.js",
    "codeDescription": "This snippet demonstrates how to properly use the x-if directive with a template tag to conditionally render content. The element will be completely added or removed from the DOM based on the 'open' variable's truthiness. Note that x-if requires a parent element with x-data defined.",
    "codeLanguage": "html",
    "codeTokens": 86,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/if.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js x-if Directive Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<template x-if=\"open\">\n    <div>Contents...</div>\n</template>"
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Registering an Alpine Store from a bundle",
    "codeDescription": "Demonstrates how to define an Alpine store when importing Alpine into a build before calling Alpine.start(). Creates the same 'darkMode' store with toggle functionality.",
    "codeLanguage": "js",
    "codeTokens": 83,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/globals/alpine-store.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.store: Global State Management",
    "codeList": [
      {
        "language": "js",
        "code": "import Alpine from 'alpinejs'\n\nAlpine.store('darkMode', {\n    on: false,\n\n    toggle() {\n        this.on = ! this.on\n    }\n})\n\nAlpine.start()"
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Iterating Through Arrays with x-for in Alpine.js",
    "codeDescription": "Demonstrates how to use the x-for directive to iterate through an array of colors and create a list item for each one. This example shows the basic usage pattern of x-for with a template element.",
    "codeLanguage": "alpine",
    "codeTokens": 98,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/for.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js x-for Directive Usage Guide",
    "codeList": [
      {
        "language": "alpine",
        "code": "<ul x-data=\"{ colors: ['Red', 'Orange', 'Yellow'] }\">\n    <template x-for=\"color in colors\">\n        <li x-text=\"color\"></li>\n    </template>\n</ul>"
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Event Handling with Shorthand Syntax in Alpine.js",
    "codeDescription": "Using the @ shorthand syntax for x-on directive to handle click events.",
    "codeLanguage": "alpine",
    "codeTokens": 41,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/on.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js Event Handling Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<button @click=\"alert('Hello World!')\">Say Hi</button>"
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Basic x-bind Usage in Alpine.js",
    "codeDescription": "Demonstrates how to use x-bind to set a placeholder attribute on an input element based on a JavaScript expression.",
    "codeLanguage": "html",
    "codeTokens": 65,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/bind.md#2025-04-11_snippet_0",
    "pageTitle": "Using x-bind Directive in Alpine.js",
    "codeList": [
      {
        "language": "html",
        "code": "<div x-data=\"{ placeholder: 'Type here...' }\">\n    <input type=\"text\" x-bind:placeholder=\"placeholder\">\n</div>"
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Basic Click Event Handling in Alpine.js",
    "codeDescription": "Demonstrates the basic syntax for handling click events using x-on directive in Alpine.js.",
    "codeLanguage": "alpine",
    "codeTokens": 43,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/events.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js Event Handling Guide",
    "codeList": [
      {
        "language": "alpine",
        "code": "<button x-on:click=\"console.log('clicked')\">...</button>"
      }
    ],
    "relevance": 0.963
  },
  {
    "codeTitle": "Event Shorthand Syntax in Alpine.js",
    "codeDescription": "Shows the shorthand @ syntax for event handling in Alpine.js.",
    "codeLanguage": "alpine",
    "codeTokens": 33,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/events.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js Event Handling Guide",
    "codeList": [
      {
        "language": "alpine",
        "code": "<button @click=\"...\">...</button>"
      }
    ],
    "relevance": 0.96
  },
  {
    "codeTitle": "Reusable Attribute Binding with Alpine.bind()",
    "codeDescription": "Demonstrates how to create a reusable button binding object using Alpine.bind() that bundles multiple attributes and their behaviors together.",
    "codeLanguage": "alpine",
    "codeTokens": 107,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/globals/alpine-bind.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js bind() Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<button x-bind=\"SomeButton\"></button>\n\n<script>\n    document.addEventListener('alpine:init', () => {\n        Alpine.bind('SomeButton', () => ({\n            type: 'button',\n\n            '@click'() {\n                this.doSomething()\n            },\n\n            ':disabled'() {\n                return this.shouldDisable\n            },\n        }))\n    })\n</script>"
      }
    ],
    "relevance": 0.96
  },
  {
    "codeTitle": "Basic x-show Usage in Alpine.js",
    "codeDescription": "Demonstrates basic toggle functionality using x-show directive to show/hide a dropdown menu based on a boolean state.",
    "codeLanguage": "alpine",
    "codeTokens": 81,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/show.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js x-show Directive Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ open: false }\">\n    <button x-on:click=\"open = ! open\">Toggle Dropdown</button>\n\n    <div x-show=\"open\">\n        Dropdown Contents...\n    </div>\n</div>"
      }
    ],
    "relevance": 0.96
  },
  {
    "codeTitle": "Using x-ref and $refs to Access DOM Elements in Alpine.js",
    "codeDescription": "This snippet demonstrates how to use the x-ref directive to mark elements and then access them through the $refs object. In this example, a button click removes a text element by accessing it via $refs.text.remove().",
    "codeLanguage": "alpine",
    "codeTokens": 80,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/ref.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js x-ref Directive",
    "codeList": [
      {
        "language": "alpine",
        "code": "<button @click=\"$refs.text.remove()\">Remove Text</button>\n\n<span x-ref=\"text\">Hello 👋</span>"
      }
    ],
    "relevance": 0.96
  },
  {
    "codeTitle": "Toggling Elements with x-show in Alpine.js",
    "codeDescription": "Illustrates how to use the x-show directive to toggle the visibility of an element based on a boolean data property.",
    "codeLanguage": "alpine",
    "codeTokens": 77,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/templating.md#2025-04-11_snippet_2",
    "pageTitle": "Templating in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ open: false }\">\n    <button @click=\"open = ! open\">Expand</button>\n\n    <div x-show=\"open\">\n        Content...\n    </div>\n</div>"
      }
    ],
    "relevance": 0.96
  },
  {
    "codeTitle": "Promise-based $nextTick Usage in Alpine.js",
    "codeDescription": "Shows how to use $nextTick as a promise with async/await syntax to pause execution until after DOM updates are complete. This approach provides a cleaner way to handle sequential operations after DOM updates.",
    "codeLanguage": "alpine",
    "codeTokens": 106,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/nextTick.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js $nextTick Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ title: 'Hello' }\">\n    <button\n        @click=\"\n            title = 'Hello World!';\n            await $nextTick();\n            console.log($el.innerText);\n        \"\n        x-text=\"title\"\n    ></button>\n</div>"
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Watching a Component Property with $watch in Alpine.js",
    "codeDescription": "Demonstrates how to use the $watch magic method to observe changes to a component property. When the 'open' property changes, the callback logs the new value to the console.",
    "codeLanguage": "html",
    "codeTokens": 91,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/watch.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js $watch Magic Method",
    "codeList": [
      {
        "language": "html",
        "code": "<div x-data=\"{ open: false }\" x-init=\"$watch('open', value => console.log(value))\">\n    <button @click=\"open = ! open\">Toggle Open</button>\n</div>"
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Class Object Syntax in Alpine.js",
    "codeDescription": "Shows how to use the object syntax for binding multiple classes conditionally in Alpine.js.",
    "codeLanguage": "html",
    "codeTokens": 42,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/bind.md#2025-04-11_snippet_4",
    "pageTitle": "Using x-bind Directive in Alpine.js",
    "codeList": [
      {
        "language": "html",
        "code": "<div :class=\"{ 'hidden': ! show }\">"
      },
      {
        "language": "html",
        "code": "<div class=\"hidden\" :class=\"{ 'hidden': ! show }\">"
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Accessing Alpine store data in components",
    "codeDescription": "Shows how to access data from a store within Alpine expressions using the $store magic property. The example conditionally applies a class based on the darkMode store state.",
    "codeLanguage": "alpine",
    "codeTokens": 65,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/globals/alpine-store.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.store: Global State Management",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data :class=\"$store.darkMode.on && 'bg-black'\">...</div>"
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Defining init() Method in Alpine.data for Component Initialization",
    "codeDescription": "Shows how to use the init() method within an Alpine.data component definition. This method automatically runs before the element using this data initializes.",
    "codeLanguage": "js",
    "codeTokens": 65,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/lifecycle.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js Lifecycle Documentation",
    "codeList": [
      {
        "language": "js",
        "code": "Alpine.data('dropdown', () => ({\n    init() {\n        // I get called before the element using this data initializes.\n    }\n}))"
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Adding Methods to Alpine.js Components with x-data",
    "codeDescription": "Demonstrates how to add methods to an Alpine.js component by defining functions within the x-data object. The example extracts toggle functionality into a reusable method.",
    "codeLanguage": "alpine",
    "codeTokens": 94,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/data.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js x-data Directive Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ open: false, toggle() { this.open = ! this.open } }\">\n    <button @click=\"toggle()\">Toggle Content</button>\n\n    <div x-show=\"open\">\n        Content...\n    </div>\n</div>"
      }
    ],
    "relevance": 0.952
  },
  {
    "codeTitle": "Text Input Binding with x-model in Alpine.js",
    "codeDescription": "Example of binding a text input to Alpine data with x-model, showing real-time updates of the bound data in a span element.",
    "codeLanguage": "alpine",
    "codeTokens": 58,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/model.md#2025-04-11_snippet_2",
    "pageTitle": "Understanding x-model Directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<input type=\"text\" x-model=\"message\">\n\n<span x-text=\"message\"></span>"
      }
    ],
    "relevance": 0.952
  },
  {
    "codeTitle": "Using x-effect to Monitor Property Changes in Alpine.js",
    "codeDescription": "This example demonstrates how x-effect automatically detects and responds to property changes. When the button is clicked, the label property is modified, causing the x-effect expression to re-run and log the updated value to the console.",
    "codeLanguage": "alpine",
    "codeTokens": 93,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/effect.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js x-effect Directive",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ label: 'Hello' }\" x-effect=\"console.log(label)\">\n    <button @click=\"label += ' World!'\">Change Message</button>\n</div>"
      }
    ],
    "relevance": 0.95
  },
  {
    "codeTitle": "Radio Input Binding in Alpine.js",
    "codeDescription": "Shows how to bind radio inputs to an Alpine.js data property, where the selected radio button's value is stored in the bound property.",
    "codeLanguage": "alpine",
    "codeTokens": 80,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/model.md#2025-04-11_snippet_6",
    "pageTitle": "Understanding x-model Directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<input type=\"radio\" value=\"yes\" x-model=\"answer\">\n<input type=\"radio\" value=\"no\" x-model=\"answer\">\n\nAnswer: <span x-text=\"answer\"></span>"
      }
    ],
    "relevance": 0.95
  },
  {
    "codeTitle": "Custom Event Handling in Alpine.js",
    "codeDescription": "Dispatching and listening for custom DOM events using native CustomEvent.",
    "codeLanguage": "alpine",
    "codeTokens": 67,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/on.md#2025-04-11_snippet_8",
    "pageTitle": "Alpine.js Event Handling Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data @foo=\"alert('Button Was Clicked!')\">\n    <button @click=\"$event.target.dispatchEvent(new CustomEvent('foo', { bubbles: true }))\">...</button>\n</div>"
      }
    ],
    "relevance": 0.95
  },
  {
    "codeTitle": "Custom Event Dispatching in Alpine.js",
    "codeDescription": "Example of dispatching and listening for custom events using $dispatch.",
    "codeLanguage": "alpine",
    "codeTokens": 53,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/events.md#2025-04-11_snippet_6",
    "pageTitle": "Alpine.js Event Handling Guide",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div @foo=\"console.log('foo was dispatched')\">\n    <button @click=\"$dispatch('foo')\"></button>\n</div>"
      }
    ],
    "relevance": 0.95
  },
  {
    "codeTitle": "Using x-effect Directive for Reactive State Tracking in Alpine.js",
    "codeDescription": "Shows how to use the x-effect directive to automatically run code when any Alpine data used within the expression changes. Unlike $watch, this runs immediately and re-runs whenever dependencies change.",
    "codeLanguage": "alpine",
    "codeTokens": 64,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/lifecycle.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.js Lifecycle Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ open: false }\" x-effect=\"console.log(open)\">"
      }
    ],
    "relevance": 0.95
  },
  {
    "codeTitle": "Complete Counter Component Implementation",
    "codeDescription": "Full example showing how to create a reactive counter component using Alpine.reactive() and Alpine.effect() without Alpine's template syntax.",
    "codeLanguage": "javascript",
    "codeTokens": 50,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/reactivity.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.js Reactivity Guide",
    "codeList": [
      {
        "language": "html",
        "code": "<button>Increment</button>\n\nCount: <span></span>"
      },
      {
        "language": "javascript",
        "code": "let button = document.querySelector('button')\nlet span = document.querySelector('span')\n\nlet data = Alpine.reactive({ count: 1 })\n\nAlpine.effect(() => {\n    span.textContent = data.count\n})\n\nbutton.addEventListener('click', () => {\n    data.count = data.count + 1\n})"
      }
    ],
    "relevance": 0.95
  },
  {
    "codeTitle": "Defining a Dropdown Component in a Separate File",
    "codeDescription": "Example of a dropdown component defined in its own JavaScript file for import in a bundled Alpine.js application. It exports a function that returns an object with state and methods.",
    "codeLanguage": "js",
    "codeTokens": 67,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/globals/alpine-data.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.data Documentation",
    "codeList": [
      {
        "language": "js",
        "code": "export default () => ({\n    open: false,\n\n    toggle() {\n        this.open = ! this.open\n    }\n})"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "x-show with Transitions in Alpine.js",
    "codeDescription": "Shows how to combine x-show with x-transition directive to create smooth show/hide animations for elements.",
    "codeLanguage": "alpine",
    "codeTokens": 82,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/show.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js x-show Directive Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ open: false }\">\n    <button x-on:click=\"open = ! open\">Toggle Dropdown</button>\n\n    <div x-show=\"open\" x-transition>\n        Dropdown Contents...\n    </div>\n</div>"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Nesting Modals with x-teleport in Alpine.js",
    "codeDescription": "Illustrates how to nest one modal within another using x-teleport. Both modals are teleported to the body, allowing them to be rendered as siblings in the DOM rather than nested, which is useful for managing z-index and styling.",
    "codeLanguage": "alpine",
    "codeTokens": 185,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/teleport.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js x-teleport Directive Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ open: false }\">\n    <button @click=\"open = ! open\">Toggle Modal</button>\n\n    <template x-teleport=\"body\">\n        <div x-show=\"open\">\n            Modal contents...\n\n            <div x-data=\"{ open: false }\">\n                <button @click=\"open = ! open\">Toggle Nested Modal</button>\n\n                <template x-teleport=\"body\">\n                    <div x-show=\"open\">\n                        Nested modal contents...\n                    </div>\n                </template>\n            </div>\n        </div>\n    </template>\n</div>"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Creating Reusable Components with Alpine.data()",
    "codeDescription": "Demonstrates how to create reusable data components using Alpine.data(). This allows defining a component's data and methods once and reusing them throughout the application.",
    "codeLanguage": "js",
    "codeTokens": 68,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/state.md#2025-04-11_snippet_4",
    "pageTitle": "Alpine.js State Management",
    "codeList": [
      {
        "language": "js",
        "code": "Alpine.data('dropdown', () => ({\n    open: false,\n\n    toggle() {\n        this.open = ! this.open\n    }\n}))"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Using JavaScript Expressions with x-text in Alpine.js",
    "codeDescription": "Shows how to use JavaScript expressions within the x-text directive to compute dynamic text content.",
    "codeLanguage": "alpine",
    "codeTokens": 40,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/templating.md#2025-04-11_snippet_1",
    "pageTitle": "Templating in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<span x-text=\"1 + 2\"></span>"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Using $watch Magic to Monitor Data Changes in Alpine.js",
    "codeDescription": "Demonstrates how to use the $watch magic method to execute code when a specific piece of state changes. The callback receives both the new value and previous value of the watched property.",
    "codeLanguage": "alpine",
    "codeTokens": 70,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/lifecycle.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js Lifecycle Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ open: false }\" x-init=\"$watch('open', value => console.log(value))\">"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Looping Elements with x-for in Alpine.js",
    "codeDescription": "This HTML snippet demonstrates how to use the x-for directive in Alpine.js to loop through filtered items and display them in a list. It uses a template element to wrap the repeating content.",
    "codeLanguage": "html",
    "codeTokens": 79,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/start-here.md#2025-04-11_snippet_6",
    "pageTitle": "Getting Started with Alpine.js",
    "codeList": [
      {
        "language": "html",
        "code": "<ul>\n    <template x-for=\"item in filteredItems\">\n        <li x-text=\"item\"></li>\n    </template>\n</ul>"
      }
    ],
    "relevance": 0.942
  },
  {
    "codeTitle": "Cross-Component Communication with $dispatch in Alpine.js",
    "codeDescription": "Shows how to use $dispatch to facilitate communication between different Alpine.js components. The example updates a title in one component when a button in another component is clicked.",
    "codeLanguage": "alpine",
    "codeTokens": 131,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/dispatch.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.js $dispatch Method",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div\n    x-data=\"{ title: 'Hello' }\"\n    @set-title.window=\"title = $event.detail\"\n>\n    <h1 x-text=\"title\"></h1>\n</div>\n\n<div x-data>\n    <button @click=\"$dispatch('set-title', 'Hello World!')\">Click me</button>\n</div>\n<!-- When clicked, the content of the h1 will set to \"Hello World!\". -->"
      }
    ],
    "relevance": 0.942
  },
  {
    "codeTitle": "Event Propagation Example with Alpine.js",
    "codeDescription": "Demonstrates event propagation issues and the proper approach to capture events across different elements. Shows both a non-working approach and the correct implementation using the .window modifier.",
    "codeLanguage": "alpine",
    "codeTokens": 126,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/dispatch.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js $dispatch Method",
    "codeList": [
      {
        "language": "alpine",
        "code": "<!-- 🚫 Won't work -->\n<div x-data>\n    <span @notify=\"...\"></span>\n    <button @click=\"$dispatch('notify')\">Notify</button>\n</div>\n\n<!-- ✅ Will work (because of .window) -->\n<div x-data>\n    <span @notify.window=\"...\"></span>\n    <button @click=\"$dispatch('notify')\">Notify</button>\n</div>"
      }
    ],
    "relevance": 0.94
  },
  {
    "codeTitle": "Basic x-teleport Usage for Modal in Alpine.js",
    "codeDescription": "Demonstrates the basic usage of x-teleport to create a modal that is appended to the body element. The modal's visibility is toggled using x-show, controlled by a boolean variable in the Alpine.js component.",
    "codeLanguage": "alpine",
    "codeTokens": 142,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/teleport.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js x-teleport Directive Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<body>\n    <div x-data=\"{ open: false }\">\n        <button @click=\"open = ! open\">Toggle Modal</button>\n\n        <template x-teleport=\"body\">\n            <div x-show=\"open\">\n                Modal contents...\n            </div>\n        </template>\n    </div>\n\n    <div>Some other content placed AFTER the modal markup.</div>\n\n    ...\n\n</body>"
      }
    ],
    "relevance": 0.94
  },
  {
    "codeTitle": "Dynamically Populated Select Options in Alpine.js",
    "codeDescription": "Shows how to dynamically generate select options using x-for and bind the select element to an Alpine.js data property with x-model.",
    "codeLanguage": "alpine",
    "codeTokens": 91,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/model.md#2025-04-11_snippet_10",
    "pageTitle": "Understanding x-model Directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<select x-model=\"color\">\n    <template x-for=\"color in ['Red', 'Orange', 'Yellow']\">\n        <option x-text=\"color\"></option>\n    </template>\n</select>\n\nColor: <span x-text=\"color\"></span>"
      }
    ],
    "relevance": 0.94
  },
  {
    "codeTitle": "Dispatching Basic Events in Alpine.js",
    "codeDescription": "A simple example showing how to dispatch a custom event that triggers an alert when a button is clicked. The $dispatch method creates a custom 'notify' event that bubbles up to the parent div.",
    "codeLanguage": "alpine",
    "codeTokens": 83,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/dispatch.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js $dispatch Method",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div @notify=\"alert('Hello World!')\">\n    <button @click=\"$dispatch('notify')\">\n        Notify\n    </button>\n</div>"
      }
    ],
    "relevance": 0.94
  },
  {
    "codeTitle": "Alpine.effect() Basic Usage",
    "codeDescription": "Demonstrates how Alpine.effect() tracks and responds to changes in reactive data by re-running the callback function when dependencies change.",
    "codeLanguage": "javascript",
    "codeTokens": 60,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/reactivity.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js Reactivity Guide",
    "codeList": [
      {
        "language": "javascript",
        "code": "let data = Alpine.reactive({ count: 1 })\n\nAlpine.effect(() => {\n    console.log(data.count)\n})"
      }
    ],
    "relevance": 0.94
  },
  {
    "codeTitle": "Using Object-Based Store with $store for Dark Mode Toggle in Alpine.js",
    "codeDescription": "This example demonstrates how to create and use an object-based Alpine.js store. It shows a button that toggles a dark mode state stored in a global store, and a div that reactively changes its background based on that state. The store is registered with Alpine.store() during initialization.",
    "codeLanguage": "alpine",
    "codeTokens": 156,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/store.md#2025-04-11_snippet_0",
    "pageTitle": "Using $store in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<button x-data @click=\"$store.darkMode.toggle()\">Toggle Dark Mode</button>\n\n...\n\n<div x-data :class=\"$store.darkMode.on && 'bg-black'\">\n    ...\n</div>\n\n\n<script>\n    document.addEventListener('alpine:init', () => {\n        Alpine.store('darkMode', {\n            on: false,\n\n            toggle() {\n                this.on = ! this.on\n            }\n        })\n    })\n</script>"
      }
    ],
    "relevance": 0.939
  },
  {
    "codeTitle": "Two-way Data Binding with Button Update in Alpine.js",
    "codeDescription": "Demonstrates how x-model's two-way binding works by adding a button that changes the data value, which automatically updates the input field.",
    "codeLanguage": "alpine",
    "codeTokens": 84,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/model.md#2025-04-11_snippet_1",
    "pageTitle": "Understanding x-model Directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ message: '' }\">\n    <input type=\"text\" x-model=\"message\">\n\n    <button x-on:click=\"message = 'changed'\">Change Message</button>\n</div>"
      }
    ],
    "relevance": 0.936
  },
  {
    "codeTitle": "Using x-init Directive for Element Initialization in Alpine.js",
    "codeDescription": "Demonstrates how to use the x-init directive to execute JavaScript code when Alpine begins initializing an element. This is useful for running setup code specific to an element.",
    "codeLanguage": "alpine",
    "codeTokens": 54,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/lifecycle.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js Lifecycle Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<button x-init=\"console.log('Im initing')\">"
      }
    ],
    "relevance": 0.935
  },
  {
    "codeTitle": "Using Keys with x-for in Alpine.js",
    "codeDescription": "Demonstrates how to specify unique keys for x-for iterations to ensure proper tracking during reordering. Using the :key attribute with a unique identifier helps Alpine maintain the correct DOM element state.",
    "codeLanguage": "alpine",
    "codeTokens": 133,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/for.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js x-for Directive Usage Guide",
    "codeList": [
      {
        "language": "alpine",
        "code": "<ul x-data=\"{ colors: [\n    { id: 1, label: 'Red' },\n    { id: 2, label: 'Orange' },\n    { id: 3, label: 'Yellow' },\n]}\">\n    <template x-for=\"color in colors\" :key=\"color.id\">\n        <li x-text=\"color.label\"></li>\n    </template>\n</ul>"
      }
    ],
    "relevance": 0.935
  },
  {
    "codeTitle": "Multiple Checkboxes Bound to Array in Alpine.js",
    "codeDescription": "Demonstrates binding multiple checkboxes to a single array in Alpine.js, where each checked box adds its value to the array.",
    "codeLanguage": "alpine",
    "codeTokens": 91,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/model.md#2025-04-11_snippet_5",
    "pageTitle": "Understanding x-model Directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<input type=\"checkbox\" value=\"red\" x-model=\"colors\">\n<input type=\"checkbox\" value=\"orange\" x-model=\"colors\">\n<input type=\"checkbox\" value=\"yellow\" x-model=\"colors\">\n\nColors: <span x-text=\"colors\"></span>"
      }
    ],
    "relevance": 0.935
  },
  {
    "codeTitle": "Number Modifier with x-model in Alpine.js",
    "codeDescription": "Shows how to use the .number modifier with x-model to force Alpine.js to store the input value as a JavaScript number rather than a string.",
    "codeLanguage": "alpine",
    "codeTokens": 63,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/model.md#2025-04-11_snippet_13",
    "pageTitle": "Understanding x-model Directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<input type=\"text\" x-model.number=\"age\">\n<span x-text=\"typeof age\"></span>"
      }
    ],
    "relevance": 0.935
  },
  {
    "codeTitle": "Filtering Items in Alpine.js Computed Property",
    "codeDescription": "This code snippet shows the implementation of the filteredItems getter. It filters the items array based on whether each item starts with the search string.",
    "codeLanguage": "javascript",
    "codeTokens": 53,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/start-here.md#2025-04-11_snippet_5",
    "pageTitle": "Getting Started with Alpine.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "return this.items.filter(\n    i => i.startsWith(this.search)\n)"
      }
    ],
    "relevance": 0.935
  },
  {
    "codeTitle": "Shorthand Syntax for x-bind in Alpine.js",
    "codeDescription": "Shows the shorthand syntax for x-bind using the colon (:) prefix instead of the full x-bind directive.",
    "codeLanguage": "html",
    "codeTokens": 45,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/bind.md#2025-04-11_snippet_1",
    "pageTitle": "Using x-bind Directive in Alpine.js",
    "codeList": [
      {
        "language": "html",
        "code": "<input type=\"text\" :placeholder=\"placeholder\">"
      }
    ],
    "relevance": 0.933
  },
  {
    "codeTitle": "Accessing Old Values in $watch Callback in Alpine.js",
    "codeDescription": "Illustrates how to access both the new and old values in the $watch callback. The callback receives two arguments: the new value and the old value of the watched property.",
    "codeLanguage": "html",
    "codeTokens": 96,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/watch.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js $watch Magic Method",
    "codeList": [
      {
        "language": "html",
        "code": "<div x-data=\"{ open: false }\" x-init=\"$watch('open', (value, oldValue) => console.log(value, oldValue))\">\n    <button @click=\"open = ! open\">Toggle Open</button>\n</div>"
      }
    ],
    "relevance": 0.93
  },
  {
    "codeTitle": "Accessing Indexes in x-for Iterations in Alpine.js",
    "codeDescription": "Shows how to access the index of each item during iteration using the (item, index) syntax. This technique allows you to reference both the current item and its position in the collection.",
    "codeLanguage": "alpine",
    "codeTokens": 119,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/for.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.js x-for Directive Usage Guide",
    "codeList": [
      {
        "language": "alpine",
        "code": "<ul x-data=\"{ colors: ['Red', 'Orange', 'Yellow'] }\">\n    <template x-for=\"(color, index) in colors\">\n        <li>\n            <span x-text=\"index + ': '\"></span>\n            <span x-text=\"color\"></span>\n        </li>\n    </template>\n</ul>"
      }
    ],
    "relevance": 0.93
  },
  {
    "codeTitle": "Using Reusable Alpine.js Components",
    "codeDescription": "Shows how to implement reusable Alpine.js components by referencing registered data components in multiple places. Each instance maintains its own separate state.",
    "codeLanguage": "alpine",
    "codeTokens": 104,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/state.md#2025-04-11_snippet_5",
    "pageTitle": "Alpine.js State Management",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"dropdown\">\n    <button @click=\"toggle\">Expand</button>\n\n    <span x-show=\"open\">Content...</span>\n</div>\n\n<div x-data=\"dropdown\">\n    <button @click=\"toggle\">Expand</button>\n\n    <span x-show=\"open\">Some Other Content...</span>\n</div>"
      }
    ],
    "relevance": 0.93
  },
  {
    "codeTitle": "Passing Data with $dispatch in Alpine.js",
    "codeDescription": "This example demonstrates passing data with the dispatched event. The data is accessible via the $event.detail property in the event handler, allowing for more complex interactions between components.",
    "codeLanguage": "alpine",
    "codeTokens": 84,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/dispatch.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js $dispatch Method",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div @notify=\"alert($event.detail.message)\">\n    <button @click=\"$dispatch('notify', { message: 'Hello World!' })\">\n        Notify\n    </button>\n</div>"
      }
    ],
    "relevance": 0.93
  },
  {
    "codeTitle": "Event Handler Method in Alpine.js",
    "codeDescription": "Example of using a separate method to handle click events with event object access.",
    "codeLanguage": "alpine",
    "codeTokens": 64,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/on.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.js Event Handling Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<button @click=\"handleClick\">...</button>\n\n<script>\n    function handleClick(e) {\n        // Now you can access the event object (e) directly\n    }\n</script>"
      }
    ],
    "relevance": 0.93
  },
  {
    "codeTitle": "Accessing Root Element Data with $root in Alpine.js",
    "codeDescription": "This example demonstrates how to use the $root magic property to access data attributes on the root Alpine component. When the button is clicked, it alerts the message stored in the data-message attribute of the root element.",
    "codeLanguage": "alpine",
    "codeTokens": 85,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/root.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js $root Magic Property",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data data-message=\"Hello World!\">\n    <button @click=\"alert($root.dataset.message)\">Say Hi</button>\n</div>"
      }
    ],
    "relevance": 0.93
  },
  {
    "codeTitle": "Textarea Binding with x-model in Alpine.js",
    "codeDescription": "Demonstration of binding a textarea element to Alpine data using x-model for real-time updates as the user types.",
    "codeLanguage": "alpine",
    "codeTokens": 52,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/model.md#2025-04-11_snippet_3",
    "pageTitle": "Understanding x-model Directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<textarea x-model=\"message\"></textarea>\n\n<span x-text=\"message\"></span>"
      }
    ],
    "relevance": 0.927
  },
  {
    "codeTitle": "Accessing Event Object in Alpine.js",
    "codeDescription": "Demonstrating how to access the native event object using $event magic property.",
    "codeLanguage": "alpine",
    "codeTokens": 50,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/on.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js Event Handling Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<button @click=\"alert($event.target.getAttribute('message'))\" message=\"Hello World\">Say Hi</button>"
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "Using Single-Value Store with $store for Dark Mode Toggle in Alpine.js",
    "codeDescription": "This example shows how to create and use a simpler single-value Alpine.js store. Instead of using an object with methods, it uses a boolean value directly. The toggle functionality is implemented inline, and the div's background still changes reactively based on the store value.",
    "codeLanguage": "alpine",
    "codeTokens": 136,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/store.md#2025-04-11_snippet_1",
    "pageTitle": "Using $store in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<button x-data @click=\"$store.darkMode = ! $store.darkMode\">Toggle Dark Mode</button>\n\n...\n\n<div x-data :class=\"$store.darkMode && 'bg-black'\">\n    ...\n</div>\n\n\n<script>\n    document.addEventListener('alpine:init', () => {\n        Alpine.store('darkMode', false)\n    })\n</script>"
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "Using $el to Modify DOM Content in Alpine.js",
    "codeDescription": "This snippet demonstrates how to use the $el magic property in Alpine.js to replace the content of a button element when clicked. The $el property refers to the current DOM node, allowing direct manipulation of its innerHTML.",
    "codeLanguage": "alpine",
    "codeTokens": 79,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/el.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js $el Property Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<button @click=\"$el.innerHTML = 'Hello World!'\">Replace me with \"Hello World!\"</button>"
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "Binding Styles with x-bind in Alpine.js",
    "codeDescription": "Demonstrates how to use x-bind to apply inline styles using object syntax in Alpine.js.",
    "codeLanguage": "html",
    "codeTokens": 48,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/bind.md#2025-04-11_snippet_5",
    "pageTitle": "Using x-bind Directive in Alpine.js",
    "codeList": [
      {
        "language": "html",
        "code": "<div :style=\"{ color: 'red', display: 'flex' }\">"
      },
      {
        "language": "html",
        "code": "<div x-bind:style=\"true && { color: 'red' }\">"
      },
      {
        "language": "html",
        "code": "<div style=\"padding: 1rem;\" :style=\"{ color: 'red', display: 'flex' }\">"
      },
      {
        "language": "html",
        "code": "<div x-data=\"{ styles: { color: 'red', display: 'flex' }}\">\n    <div :style=\"styles\">\n</div>"
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "Keyboard Event Handling in Alpine.js",
    "codeDescription": "Handling keyboard events with specific key modifiers like Enter.",
    "codeLanguage": "alpine",
    "codeTokens": 36,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/on.md#2025-04-11_snippet_4",
    "pageTitle": "Alpine.js Event Handling Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<input type=\"text\" @keyup.enter=\"alert('Submitted!')\">"
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "Binding Classes with x-bind in Alpine.js",
    "codeDescription": "Illustrates how to use x-bind to conditionally apply CSS classes based on the component's state.",
    "codeLanguage": "html",
    "codeTokens": 86,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/bind.md#2025-04-11_snippet_2",
    "pageTitle": "Using x-bind Directive in Alpine.js",
    "codeList": [
      {
        "language": "html",
        "code": "<div x-data=\"{ open: false }\">\n    <button x-on:click=\"open = ! open\">Toggle Dropdown</button>\n\n    <div :class=\"open ? '' : 'hidden'\">\n        Dropdown Contents...\n    </div>\n</div>"
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "Basic x-init Usage in Alpine.js",
    "codeDescription": "Demonstrates the basic usage of x-init directive to execute code during element initialization.",
    "codeLanguage": "alpine",
    "codeTokens": 46,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/init.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js x-init Directive Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-init=\"console.log('I\\'m being initialized!')\"></div>"
      }
    ],
    "relevance": 0.924
  },
  {
    "codeTitle": "Accessing Alpine.js Data Scope with $data",
    "codeDescription": "This snippet demonstrates how to use the $data magic property to access and pass Alpine.js data scopes to external functions. It shows a nested data structure and a button that triggers a function with the combined data scope.",
    "codeLanguage": "html",
    "codeTokens": 132,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/data.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js $data Magic Property",
    "codeList": [
      {
        "language": "html",
        "code": "<div x-data=\"{ greeting: 'Hello' }\">\n    <div x-data=\"{ name: 'Caleb' }\">\n        <button @click=\"sayHello($data)\">Say Hello</button>\n    </div>\n</div>\n\n<script>\n    function sayHello({ greeting, name }) {\n        alert(greeting + ' ' + name + '!')\n    }\n</script>"
      }
    ],
    "relevance": 0.921
  },
  {
    "codeTitle": "Event Forwarding with x-teleport in Alpine.js",
    "codeDescription": "Shows how to forward events from a teleported element back to the original component scope. This example demonstrates closing the modal by clicking anywhere inside it, using an event listener on the teleport template.",
    "codeLanguage": "alpine",
    "codeTokens": 124,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/teleport.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js x-teleport Directive Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ open: false }\">\n    <button @click=\"open = ! open\">Toggle Modal</button>\n\n    <template x-teleport=\"body\" @click=\"open = false\">\n        <div x-show=\"open\">\n            Modal contents...\n            (click to close)\n        </div>\n    </template>\n</div>"
      }
    ],
    "relevance": 0.92
  },
  {
    "codeTitle": "Demonstrating Scope Inheritance in Alpine.js Components",
    "codeDescription": "Shows how properties defined in an x-data directive are available to child elements, including nested x-data components, demonstrating Alpine.js's scope inheritance behavior.",
    "codeLanguage": "alpine",
    "codeTokens": 144,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/data.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js x-data Directive Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ foo: 'bar' }\">\n    <span x-text=\"foo\"><!-- Will output: \"bar\" --></span>\n\n    <div x-data=\"{ bar: 'baz' }\">\n        <span x-text=\"foo\"><!-- Will output: \"bar\" --></span>\n\n        <div x-data=\"{ foo: 'bob' }\">\n            <span x-text=\"foo\"><!-- Will output: \"bob\" --></span>\n        </div>\n    </div>\n</div>"
      }
    ],
    "relevance": 0.92
  },
  {
    "codeTitle": "Iterating Through Objects with x-for in Alpine.js",
    "codeDescription": "Shows how to use x-for to iterate through key-value pairs in an object. This example demonstrates accessing both the value and the index (key) during iteration through an object's properties.",
    "codeLanguage": "alpine",
    "codeTokens": 125,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/for.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js x-for Directive Usage Guide",
    "codeList": [
      {
        "language": "alpine",
        "code": "<ul x-data=\"{ car: { make: 'Jeep', model: 'Grand Cherokee', color: 'Black' } }\">\n    <template x-for=\"(value, index) in car\">\n        <li>\n            <span x-text=\"index\"></span>: <span x-text=\"value\"></span>\n        </li>\n    </template>\n</ul>"
      }
    ],
    "relevance": 0.92
  },
  {
    "codeTitle": "Iterating Over a Numeric Range with x-for in Alpine.js",
    "codeDescription": "Shows how to use x-for to iterate a specific number of times rather than through a collection. This technique allows for simple counting loops when you need to repeat an element n times.",
    "codeLanguage": "alpine",
    "codeTokens": 80,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/for.md#2025-04-11_snippet_5",
    "pageTitle": "Alpine.js x-for Directive Usage Guide",
    "codeList": [
      {
        "language": "alpine",
        "code": "<ul>\n    <template x-for=\"i in 10\">\n        <li x-text=\"i\"></li>\n    </template>\n</ul>"
      }
    ],
    "relevance": 0.92
  },
  {
    "codeTitle": "Basic Usage of x-collapse Directive in Alpine.js",
    "codeDescription": "Example demonstrating the basic usage of the x-collapse directive with x-show to toggle element visibility with smooth animation.",
    "codeLanguage": "alpine",
    "codeTokens": 78,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/collapse.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.js Collapse Plugin Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ expanded: false }\">\n    <button @click=\"expanded = ! expanded\">Toggle Content</button>\n\n    <p x-show=\"expanded\" x-collapse>\n        ...\n    </p>\n</div>"
      }
    ],
    "relevance": 0.92
  },
  {
    "codeTitle": "Basic x-transition Usage with Alpine.js",
    "codeDescription": "A simple example showing how to add a transition effect to an element with x-show using the x-transition directive. This applies default fade and scale transitions when toggling the element's visibility.",
    "codeLanguage": "alpine",
    "codeTokens": 96,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/transition.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js x-transition Directive",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ open: false }\">\n    <button @click=\"open = ! open\">Toggle</button>\n\n    <div x-show=\"open\" x-transition>\n        Hello 👋\n    </div>\n</div>"
      }
    ],
    "relevance": 0.918
  },
  {
    "codeTitle": "Alpine.js Morph Basic Usage Example",
    "codeDescription": "Example showing how to use Alpine.morph() to update an Alpine component with new HTML while preserving state",
    "codeLanguage": "html",
    "codeTokens": 201,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/morph.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.js Morph Plugin Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ message: 'Change me, then press the button!' }\">\n    <input type=\"text\" x-model=\"message\">\n    <span x-text=\"message\"></span>\n</div>\n\n<button>Run Morph</button>\n\n<script>\n    document.querySelector('button').addEventListener('click', () => {\n        let el = document.querySelector('div')\n\n        Alpine.morph(el, `\n            <div x-data=\"{ message: 'Change me, then press the button!' }\">\n                <h2>See how new elements have been added</h2>\n\n                <input type=\"text\" x-model=\"message\">\n                <span x-text=\"message\"></span>\n\n                <h2>but the state of this component hasn't changed? Magical.</h2>\n            </div>\n        `)\n    })\n</script>"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Basic Alpine.reactive() Usage",
    "codeDescription": "Demonstrates creating a reactive data object using Alpine.reactive(). Shows how the reactive proxy maintains synchronization with the original data object.",
    "codeLanguage": "javascript",
    "codeTokens": 54,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/reactivity.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js Reactivity Guide",
    "codeList": [
      {
        "language": "javascript",
        "code": "let data = { count: 1 }\n\nlet reactiveData = Alpine.reactive(data)"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Binding Attributes with x-bind in Alpine.js",
    "codeDescription": "Shows how to dynamically bind HTML attributes using x-bind, including the shorthand : syntax for class binding.",
    "codeLanguage": "alpine",
    "codeTokens": 74,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/templating.md#2025-04-11_snippet_9",
    "pageTitle": "Templating in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<button\n    x-data=\"{ red: false }\"\n    x-bind:class=\"red ? 'bg-red' : ''\"\n    @click=\"red = ! red\"\n>\n    Toggle Red\n</button>"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Basic Alpine.js Attribute Binding",
    "codeDescription": "Shows the basic way of binding attributes directly in Alpine.js using individual directives.",
    "codeLanguage": "alpine",
    "codeTokens": 46,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/globals/alpine-bind.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js bind() Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<button type=\"button\" @click=\"doSomething()\" :disabled=\"shouldDisable\"></button>"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Basic $nextTick Usage with Callback in Alpine.js",
    "codeDescription": "Demonstrates how to use $nextTick with a callback function to execute code after Alpine.js has updated the DOM. In this example, it logs the button's text content after updating the title.",
    "codeLanguage": "alpine",
    "codeTokens": 107,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/nextTick.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js $nextTick Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ title: 'Hello' }\">\n    <button\n        @click=\"\n            title = 'Hello World!';\n            $nextTick(() => { console.log($el.innerText) });\n        \"\n        x-text=\"title\"\n    ></button>\n</div>"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Preventing Default Event Behavior in Alpine.js",
    "codeDescription": "Demonstrates using .prevent modifier to prevent default event behavior.",
    "codeLanguage": "alpine",
    "codeTokens": 34,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/events.md#2025-04-11_snippet_4",
    "pageTitle": "Alpine.js Event Handling Guide",
    "codeList": [
      {
        "language": "alpine",
        "code": "<form @submit.prevent=\"...\">...</form>"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Valid Template Structure in Alpine.js x-for",
    "codeDescription": "Shows the correct way to structure an x-for template with multiple elements by wrapping them in a single parent element. This example properly contains all content within a single root <p> element.",
    "codeLanguage": "alpine",
    "codeTokens": 86,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/for.md#2025-04-11_snippet_7",
    "pageTitle": "Alpine.js x-for Directive Usage Guide",
    "codeList": [
      {
        "language": "alpine",
        "code": "<template x-for=\"color in colors\">\n    <p>\n        <span>The next color is </span><span x-text=\"color\">\n    </p>\n</template>"
      }
    ],
    "relevance": 0.912
  },
  {
    "codeTitle": "Binding Alpine Directives Directly in Alpine.js",
    "codeDescription": "Shows how to use x-bind to apply multiple Alpine directives and attributes to an element using an object syntax.",
    "codeLanguage": "html",
    "codeTokens": 171,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/bind.md#2025-04-11_snippet_6",
    "pageTitle": "Using x-bind Directive in Alpine.js",
    "codeList": [
      {
        "language": "html",
        "code": "<div x-data=\"dropdown\">\n    <button x-bind=\"trigger\">Open Dropdown</button>\n\n    <span x-bind=\"dialogue\">Dropdown Contents</span>\n</div>\n\n<script>\n    document.addEventListener('alpine:init', () => {\n        Alpine.data('dropdown', () => ({\n            open: false,\n\n            trigger: {\n                ['x-ref']: 'trigger',\n                ['@click']() {\n                    this.open = true\n                },\n            },\n\n            dialogue: {\n                ['x-show']() {\n                    return this.open\n                },\n                ['@click.outside']() {\n                    this.open = false\n                },\n            },\n        }))\n    })\n</script>"
      }
    ],
    "relevance": 0.91
  },
  {
    "codeTitle": "Single Select Dropdown Binding in Alpine.js",
    "codeDescription": "Example of binding a standard select dropdown to an Alpine.js data property, displaying the selected option in real-time.",
    "codeLanguage": "alpine",
    "codeTokens": 80,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/model.md#2025-04-11_snippet_7",
    "pageTitle": "Understanding x-model Directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<select x-model=\"color\">\n    <option>Red</option>\n    <option>Orange</option>\n    <option>Yellow</option>\n</select>\n\nColor: <span x-text=\"color\"></span>"
      }
    ],
    "relevance": 0.91
  },
  {
    "codeTitle": "Using x-resize Directive in Alpine.js",
    "codeDescription": "This example shows how to use the x-resize directive to display the width and height of an element as it changes size. The $width and $height magic properties are available within the x-resize expression.",
    "codeLanguage": "html",
    "codeTokens": 126,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/resize.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js Resize Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<div\n    x-data=\"{ width: 0, height: 0 }\"\n    x-resize=\"width = $width; height = $height\"\n>\n    <p x-text=\"'Width: ' + width + 'px'\"></p>\n    <p x-text=\"'Height: ' + height + 'px'\"></p>\n</div>"
      }
    ],
    "relevance": 0.91
  },
  {
    "codeTitle": "Outside Click Handler in Alpine.js",
    "codeDescription": "Implementation of a dropdown with outside click detection using .outside modifier.",
    "codeLanguage": "alpine",
    "codeTokens": 76,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/on.md#2025-04-11_snippet_12",
    "pageTitle": "Alpine.js Event Handling Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ open: false }\">\n    <button @click=\"open = ! open\">Toggle</button>\n\n    <div x-show=\"open\" @click.outside=\"open = false\">\n        Contents...\n    </div>\n</div>"
      }
    ],
    "relevance": 0.91
  },
  {
    "codeTitle": "Event Prevention in Alpine.js",
    "codeDescription": "Using .prevent modifier to prevent default event behavior.",
    "codeLanguage": "alpine",
    "codeTokens": 47,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/on.md#2025-04-11_snippet_10",
    "pageTitle": "Alpine.js Event Handling Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<form @submit.prevent=\"console.log('submitted')\" action=\"/foo\">\n    <button>Submit</button>\n</form>"
      }
    ],
    "relevance": 0.91
  },
  {
    "codeTitle": "Single Checkbox with Boolean Binding in Alpine.js",
    "codeDescription": "Shows how to bind a single checkbox to a boolean value in Alpine.js, displaying the current state of the checkbox in a label.",
    "codeLanguage": "alpine",
    "codeTokens": 66,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/model.md#2025-04-11_snippet_4",
    "pageTitle": "Understanding x-model Directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<input type=\"checkbox\" id=\"checkbox\" x-model=\"show\">\n\n<label for=\"checkbox\" x-text=\"show\"></label>"
      }
    ],
    "relevance": 0.909
  },
  {
    "codeTitle": "Mouse Event Handling with Modifiers in Alpine.js",
    "codeDescription": "Complex mouse event handling with multiple event listeners and shift key modifier.",
    "codeLanguage": "alpine",
    "codeTokens": 80,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/on.md#2025-04-11_snippet_7",
    "pageTitle": "Alpine.js Event Handling Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<button type=\"button\"\n    @click=\"message = 'selected'\"\n    @click.shift=\"message = 'added to selection'\"\n    @mousemove.shift=\"message = 'add to selection'\"\n    @mouseout=\"message = 'select'\"\n    x-text=\"message\"></button>"
      }
    ],
    "relevance": 0.906
  },
  {
    "codeTitle": "Using .passive Modifier in Alpine.js",
    "codeDescription": "Shows how to use the .passive modifier for touch events to improve scrolling performance. This prevents event listeners from blocking the browser's scroll optimization.",
    "codeLanguage": "alpine",
    "codeTokens": 53,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/on.md#2025-04-11_snippet_20",
    "pageTitle": "Alpine.js Event Handling Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div @touchstart.passive=\"...\">...</div>"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "Lazy Modifier with x-model in Alpine.js",
    "codeDescription": "Demonstrates using the .lazy modifier with x-model to only update the data property when the user focuses away from the input, useful for validation.",
    "codeLanguage": "alpine",
    "codeTokens": 72,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/model.md#2025-04-11_snippet_12",
    "pageTitle": "Understanding x-model Directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<input type=\"text\" x-model.lazy=\"username\">\n<span x-show=\"username.length > 20\">The username is too long.</span>"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "Customizing Transition Duration in Alpine.js",
    "codeDescription": "Example showing how to customize the transition duration using the .duration modifier. This sets the transition to last 500ms for both entering and leaving phases.",
    "codeLanguage": "alpine",
    "codeTokens": 51,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/transition.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js x-transition Directive",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div ... x-transition.duration.500ms>"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "Modifying Alpine store properties with reactive updates",
    "codeDescription": "Demonstrates how to modify store properties using a click event. Changes to the store will automatically update any dependent components.",
    "codeLanguage": "alpine",
    "codeTokens": 53,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/globals/alpine-store.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.store: Global State Management",
    "codeList": [
      {
        "language": "alpine",
        "code": "<button x-data @click=\"$store.darkMode.toggle()\">Toggle Dark Mode</button>"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "Range Input Binding in Alpine.js",
    "codeDescription": "Example of binding a range input slider to an Alpine.js data property, showing real-time updates of the slider value.",
    "codeLanguage": "alpine",
    "codeTokens": 69,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/model.md#2025-04-11_snippet_11",
    "pageTitle": "Understanding x-model Directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<input type=\"range\" x-model=\"range\" min=\"0\" max=\"1\" step=\"0.1\">\n\n<span x-text=\"range\"></span>"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "Nesting Data Objects in Alpine.js",
    "codeDescription": "Shows how to nest Alpine.js data objects. Child elements can access data from parent elements, similar to JavaScript scoping rules, with child properties taking precedence over parent properties with the same name.",
    "codeLanguage": "alpine",
    "codeTokens": 98,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/state.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js State Management",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ open: false }\">\n    <div x-data=\"{ label: 'Content:' }\">\n        <span x-text=\"label\"></span>\n        <span x-show=\"open\"></span>\n    </div>\n</div>"
      }
    ],
    "relevance": 0.903
  },
  {
    "codeTitle": "Window-Level Event Listening in Alpine.js",
    "codeDescription": "Demonstrates how to listen for events at the window level using .window modifier.",
    "codeLanguage": "alpine",
    "codeTokens": 65,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/events.md#2025-04-11_snippet_7",
    "pageTitle": "Alpine.js Event Handling Guide",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data>\n    <button @click=\"$dispatch('foo')\"></button>\n</div>\n\n<div x-data @foo.window=\"console.log('foo was dispatched')\">...</div>"
      }
    ],
    "relevance": 0.9
  },
  {
    "codeTitle": "Setting Text Content with x-text in Alpine.js",
    "codeDescription": "Demonstrates how to use the x-text directive to dynamically set an element's text content based on a data property.",
    "codeLanguage": "alpine",
    "codeTokens": 62,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/templating.md#2025-04-11_snippet_0",
    "pageTitle": "Templating in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ title: 'Start Here' }\">\n    <h1 x-text=\"title\"></h1>\n</div>"
      }
    ],
    "relevance": 0.9
  },
  {
    "codeTitle": "Adding Transitions with x-transition in Alpine.js",
    "codeDescription": "Shows how to use the x-transition directive to add smooth transitions when toggling element visibility.",
    "codeLanguage": "alpine",
    "codeTokens": 76,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/templating.md#2025-04-11_snippet_4",
    "pageTitle": "Templating in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ open: false }\">\n    <button @click=\"open = ! open\">Expands</button>\n\n    <div x-show=\"open\" x-transition>\n        Content...\n    </div>\n</div>"
      }
    ],
    "relevance": 0.9
  },
  {
    "codeTitle": "Binding Variables with x-modelable in Alpine.js",
    "codeDescription": "This snippet demonstrates how to use x-modelable to expose a variable for binding with x-model. It shows how to bind an outer scope property 'number' to an inner scope property 'count', allowing them to stay in sync when the inner property is updated.",
    "codeLanguage": "alpine",
    "codeTokens": 131,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/modelable.md#2025-04-11_snippet_0",
    "pageTitle": "Using x-modelable in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ number: 5 }\">\n    <div x-data=\"{ count: 0 }\" x-modelable=\"count\" x-model=\"number\">\n        <button @click=\"count++\">Increment</button>\n    </div>\n\n    Number: <span x-text=\"number\"></span>\n</div>"
      }
    ],
    "relevance": 0.9
  },
  {
    "codeTitle": "Grouping IDs with x-id Directive in Alpine.js",
    "codeDescription": "Demonstrates a more flexible approach using the x-id directive to create an ID scope. This allows multiple elements to share the same generated ID within a component while ensuring uniqueness between components.",
    "codeLanguage": "alpine",
    "codeTokens": 156,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/id.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js $id Utility",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-id=\"['text-input']\">\n    <label :for=\"$id('text-input')\"> <!-- \"text-input-1\" -->\n    <input type=\"text\" :id=\"$id('text-input')\"> <!-- \"text-input-1\" -->\n</div>\n\n<div x-id=\"['text-input']\">\n    <label :for=\"$id('text-input')\"> <!-- \"text-input-2\" -->\n    <input type=\"text\" :id=\"$id('text-input')\"> <!-- \"text-input-2\" -->\n</div>"
      }
    ],
    "relevance": 0.9
  },
  {
    "codeTitle": "Using x-intersect:enter and x-intersect:leave in Alpine.js",
    "codeDescription": "Examples of using x-intersect:enter (alias for x-intersect) and x-intersect:leave to react when an element enters or leaves the viewport.",
    "codeLanguage": "alpine",
    "codeTokens": 59,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/intersect.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.js Intersect Plugin Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-intersect:enter=\"shown = true\">...</div>"
      },
      {
        "language": "alpine",
        "code": "<div x-intersect:leave=\"shown = true\">...</div>"
      }
    ],
    "relevance": 0.897
  },
  {
    "codeTitle": "Setting Different Enter and Leave Durations in Alpine.js",
    "codeDescription": "Demonstrates how to set different durations for entering (500ms) and leaving (400ms) transitions using separate x-transition directives with duration modifiers.",
    "codeLanguage": "alpine",
    "codeTokens": 64,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/transition.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js x-transition Directive",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div ...\n    x-transition:enter.duration.500ms\n    x-transition:leave.duration.400ms\n>"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Shorthand Conditionals for Class Binding in Alpine.js",
    "codeDescription": "Demonstrates how to use JavaScript short-circuit evaluation for more concise class binding expressions.",
    "codeLanguage": "html",
    "codeTokens": 41,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/bind.md#2025-04-11_snippet_3",
    "pageTitle": "Using x-bind Directive in Alpine.js",
    "codeList": [
      {
        "language": "html",
        "code": "<div :class=\"show || 'hidden'\">"
      },
      {
        "language": "html",
        "code": "<div :class=\"closed && 'hidden'\">"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Using .self Modifier in Alpine.js",
    "codeDescription": "Demonstrates the .self modifier which ensures that the event handler is only called when the event originates from the element itself, not from any of its children.",
    "codeLanguage": "alpine",
    "codeTokens": 64,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/on.md#2025-04-11_snippet_17",
    "pageTitle": "Alpine.js Event Handling Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<button @click.self=\"handleClick\">\n    Click Me\n\n    <img src=\"...\">\n</button>"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Nesting ID Scopes with x-id in Alpine.js",
    "codeDescription": "Shows how x-id scopes can be nested within each other. Each nested scope creates its own unique ID sequence, allowing organized grouping of related elements.",
    "codeLanguage": "alpine",
    "codeTokens": 152,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/id.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.js $id Utility",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-id=\"['text-input']\">\n    <label :for=\"$id('text-input')\"> <!-- \"text-input-1\" -->\n    <input type=\"text\" :id=\"$id('text-input')\"> <!-- \"text-input-1\" -->\n\n    <div x-id=\"['text-input']\">\n        <label :for=\"$id('text-input')\"> <!-- \"text-input-2\" -->\n        <input type=\"text\" :id=\"$id('text-input')\"> <!-- \"text-input-2\" -->\n    </div>\n</div>"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Importing and Initializing Alpine.js as a Module",
    "codeDescription": "JavaScript code to import Alpine.js into a bundle and initialize it. Optionally assigns Alpine to window for global access, then calls Alpine.start() to initialize the framework.",
    "codeLanguage": "javascript",
    "codeTokens": 60,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/installation.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.js Installation Guide",
    "codeList": [
      {
        "language": "javascript",
        "code": "import Alpine from 'alpinejs'\n\nwindow.Alpine = Alpine\n\nAlpine.start()"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Multiple Select Binding in Alpine.js",
    "codeDescription": "Demonstrates binding a multiple select dropdown to an Alpine.js data property, allowing the user to select multiple options.",
    "codeLanguage": "alpine",
    "codeTokens": 82,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/model.md#2025-04-11_snippet_9",
    "pageTitle": "Understanding x-model Directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<select x-model=\"color\" multiple>\n    <option>Red</option>\n    <option>Orange</option>\n    <option>Yellow</option>\n</select>\n\nColors: <span x-text=\"color\"></span>"
      }
    ],
    "relevance": 0.894
  },
  {
    "codeTitle": "Passing Parameters to Alpine.data Components",
    "codeDescription": "Demonstrates how to pass initial parameters to Alpine.data components by calling them as functions in x-data. This allows for customizing component instances with different initial states.",
    "codeLanguage": "alpine",
    "codeTokens": 49,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/globals/alpine-data.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.data Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"dropdown(true)\">"
      },
      {
        "language": "js",
        "code": "Alpine.data('dropdown', (initialOpenState = false) => ({\n    open: initialOpenState\n}))"
      }
    ],
    "relevance": 0.891
  },
  {
    "codeTitle": "Combined Key Modifiers in Alpine.js",
    "codeDescription": "Shows how to combine multiple key modifiers for complex key combinations.",
    "codeLanguage": "alpine",
    "codeTokens": 32,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/events.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.js Event Handling Guide",
    "codeList": [
      {
        "language": "alpine",
        "code": "<input @keyup.shift.enter=\"...\">"
      }
    ],
    "relevance": 0.89
  },
  {
    "codeTitle": "Custom Event with $dispatch Helper in Alpine.js",
    "codeDescription": "Simplified custom event handling using Alpine's $dispatch helper method.",
    "codeLanguage": "alpine",
    "codeTokens": 56,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/on.md#2025-04-11_snippet_9",
    "pageTitle": "Alpine.js Event Handling Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data @foo=\"alert('Button Was Clicked!')\">\n    <button @click=\"$dispatch('foo')\">...</button>\n</div>"
      }
    ],
    "relevance": 0.89
  },
  {
    "codeTitle": "Creating Reusable Components with Alpine.data",
    "codeDescription": "Shows how to extract component logic into reusable components using Alpine.data. This approach helps avoid duplication and keeps component definitions organized in JavaScript.",
    "codeLanguage": "alpine",
    "codeTokens": 124,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/data.md#2025-04-11_snippet_7",
    "pageTitle": "Alpine.js x-data Directive Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"dropdown\">\n    <button @click=\"toggle\">Toggle Content</button>\n\n    <div x-show=\"open\">\n        Content...\n    </div>\n</div>\n\n<script>\n    document.addEventListener('alpine:init', () => {\n        Alpine.data('dropdown', () => ({\n            open: false,\n\n            toggle() {\n                this.open = ! this.open\n            },\n        }))\n    })\n</script>"
      }
    ],
    "relevance": 0.89
  },
  {
    "codeTitle": "Initializing Alpine stores with the init() method",
    "codeDescription": "Demonstrates how to use the init() method in an Alpine store to set initial values. This example initializes the darkMode store based on the browser's color scheme preference.",
    "codeLanguage": "alpine",
    "codeTokens": 118,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/globals/alpine-store.md#2025-04-11_snippet_5",
    "pageTitle": "Alpine.store: Global State Management",
    "codeList": [
      {
        "language": "alpine",
        "code": "<script>\n    document.addEventListener('alpine:init', () => {\n        Alpine.store('darkMode', {\n            init() {\n                this.on = window.matchMedia('(prefers-color-scheme: dark)').matches\n            },\n\n            on: false,\n\n            toggle() {\n                this.on = ! this.on\n            }\n        })\n    })\n</script>"
      }
    ],
    "relevance": 0.89
  },
  {
    "codeTitle": "Adding Transition Delay in Alpine.js",
    "codeDescription": "Shows how to add a delay before starting a transition using the .delay modifier. This example delays both entering and leaving transitions by 50ms.",
    "codeLanguage": "alpine",
    "codeTokens": 50,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/transition.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.js x-transition Directive",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div ... x-transition.delay.50ms>"
      }
    ],
    "relevance": 0.89
  },
  {
    "codeTitle": "Using x-cloak with x-text binding",
    "codeDescription": "Example demonstrating x-cloak usage with x-text directive to prevent content flickering",
    "codeLanguage": "alpine",
    "codeTokens": 44,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/cloak.md#2025-04-11_snippet_2",
    "pageTitle": "Using x-cloak directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<span x-cloak x-text=\"message\"></span>"
      }
    ],
    "relevance": 0.888
  },
  {
    "codeTitle": "Using Index as Key in x-for in Alpine.js",
    "codeDescription": "Demonstrates how to use the index as a key in x-for iterations. This approach can be used when no other unique identifier is available, though using truly unique IDs is preferred when possible.",
    "codeLanguage": "alpine",
    "codeTokens": 68,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/for.md#2025-04-11_snippet_4",
    "pageTitle": "Alpine.js x-for Directive Usage Guide",
    "codeList": [
      {
        "language": "alpine",
        "code": "<template x-for=\"(color, index) in colors\" :key=\"index\">"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Advanced Focus Control with Custom Triggers in Alpine.js",
    "codeDescription": "Demonstrates scoped focus management using the within() method. Includes buttons to directly focus the first or last element in a group, plus arrow key navigation with wrap-around behavior.",
    "codeLanguage": "alpine",
    "codeTokens": 140,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/focus.md#2025-04-11_snippet_9",
    "pageTitle": "Alpine.js Focus Plugin Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<button @click=\"$focus.within($refs.buttons).first()\">Focus \"First\"</button>\n<button @click=\"$focus.within($refs.buttons).last()\">Focus \"Last\"</button>\n\n<div\n    x-ref=\"buttons\"\n    @keydown.right=\"$focus.wrap().next()\"\n    @keydown.left=\"$focus.wrap().previous()\"\n>\n    <button>First</button>\n    <button>Second</button>\n    <button>Third</button>\n</div>"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Using .debounce Modifier in Alpine.js",
    "codeDescription": "Demonstrates how to debounce an event handler to prevent it from firing on every keystroke. The handler will only be called after a period of inactivity (250ms by default).",
    "codeLanguage": "alpine",
    "codeTokens": 57,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/on.md#2025-04-11_snippet_13",
    "pageTitle": "Alpine.js Event Handling Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<input @input.debounce=\"fetchResults\">"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Using .debounce with Custom Duration in Alpine.js",
    "codeDescription": "Shows how to customize the debounce duration by specifying a time value after the .debounce modifier. In this example, the handler will be called after 500ms of inactivity.",
    "codeLanguage": "alpine",
    "codeTokens": 60,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/on.md#2025-04-11_snippet_14",
    "pageTitle": "Alpine.js Event Handling Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<input @input.debounce.500ms=\"fetchResults\">"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Watching Nested Properties with $watch in Alpine.js",
    "codeDescription": "Shows how to watch deeply nested properties using dot notation. When the nested 'foo.bar' property is changed, the new value is logged to the console.",
    "codeLanguage": "html",
    "codeTokens": 93,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/watch.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js $watch Magic Method",
    "codeList": [
      {
        "language": "html",
        "code": "<div x-data=\"{ foo: { bar: 'baz' }}\" x-init=\"$watch('foo.bar', value => console.log(value))\">\n    <button @click=\"foo.bar = 'bob'\">Toggle Open</button>\n</div>"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Creating Reactive Alpine.js Custom Directives",
    "codeDescription": "Example showing how to create a reactive 'x-log' directive that responds to data changes using evaluateLater and effect APIs.",
    "codeLanguage": "alpine",
    "codeTokens": 77,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/extending.md#2025-04-11_snippet_6",
    "pageTitle": "Extending Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ message: 'Hello World!' }\">\n    <div x-log=\"message\"></div>\n\n    <button @click=\"message = 'yolo'\">Change</button>\n</div>"
      },
      {
        "language": "js",
        "code": "Alpine.directive('log', (el, { expression }, { evaluateLater, effect }) => {\n    let getThingToLog = evaluateLater(expression)\n\n    effect(() => {\n        getThingToLog(thingToLog => {\n            console.log(thingToLog)\n        })\n    })\n})"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Using .throttle Modifier in Alpine.js",
    "codeDescription": "Demonstrates the throttle modifier which limits how often an event handler is called during continuous events like scrolling. The handler will be called at most once every 250ms.",
    "codeLanguage": "alpine",
    "codeTokens": 58,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/on.md#2025-04-11_snippet_15",
    "pageTitle": "Alpine.js Event Handling Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div @scroll.window.throttle=\"handleScroll\">...</div>"
      }
    ],
    "relevance": 0.882
  },
  {
    "codeTitle": "Using x-trap Directive in Alpine.js",
    "codeDescription": "Illustrates how to use the x-trap directive to trap focus within an element based on a condition.",
    "codeLanguage": "html",
    "codeTokens": 127,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/focus.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js Focus Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<div x-data=\"{ open: false }\">\n    <button @click=\"open = true\">Open Dialog</button>\n\n    <span x-show=\"open\" x-trap=\"open\">\n        <p>...</p>\n\n        <input type=\"text\" placeholder=\"Some input...\">\n\n        <input type=\"text\" placeholder=\"Some other input...\">\n\n        <button @click=\"open = false\">Close Dialog</button>\n    </span>\n</div>"
      }
    ],
    "relevance": 0.88
  },
  {
    "codeTitle": "Implementing Sorting Groups in Alpine.js Sort Plugin",
    "codeDescription": "Demonstrates how to create sortable groups that allow dragging items between different lists.",
    "codeLanguage": "html",
    "codeTokens": 142,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/sort.md#2025-04-11_snippet_4",
    "pageTitle": "Alpine.js Sort Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<div>\n    <ul x-sort x-sort:group=\"todos\">\n        <li x-sort:item=\"1\">foo</li>\n        <li x-sort:item=\"2\">bar</li>\n        <li x-sort:item=\"3\">baz</li>\n    </ul>\n\n    <ol x-sort x-sort:group=\"todos\">\n        <li x-sort:item=\"4\">foo</li>\n        <li x-sort:item=\"5\">bar</li>\n        <li x-sort:item=\"6\">baz</li>\n    </ol>\n</div>"
      }
    ],
    "relevance": 0.88
  },
  {
    "codeTitle": "Auto-evaluated init() Method in Alpine.js Components",
    "codeDescription": "Demonstrates how to use the auto-evaluated init() method in x-data objects.",
    "codeLanguage": "alpine",
    "codeTokens": 57,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/init.md#2025-04-11_snippet_4",
    "pageTitle": "Alpine.js x-init Directive Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{\n    init() {\n        console.log('I am called automatically')\n    }\n}\">\n    ...\n</div>"
      }
    ],
    "relevance": 0.88
  },
  {
    "codeTitle": "Select Dropdown with Placeholder in Alpine.js",
    "codeDescription": "Shows how to create a select dropdown with a disabled placeholder option using x-model in Alpine.js.",
    "codeLanguage": "alpine",
    "codeTokens": 89,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/model.md#2025-04-11_snippet_8",
    "pageTitle": "Understanding x-model Directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<select x-model=\"color\">\n    <option value=\"\" disabled>Select A Color</option>\n    <option>Red</option>\n    <option>Orange</option>\n    <option>Yellow</option>\n</select>\n\nColor: <span x-text=\"color\"></span>"
      }
    ],
    "relevance": 0.88
  },
  {
    "codeTitle": "Extending Alpine.js via Script Tag",
    "codeDescription": "Example showing how to register a custom directive inside an 'alpine:init' event listener when using Alpine.js via a script tag.",
    "codeLanguage": "alpine",
    "codeTokens": 95,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/extending.md#2025-04-11_snippet_0",
    "pageTitle": "Extending Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<html>\n    <script src=\"/js/alpine.js\" defer></script>\n\n    <div x-data x-foo></div>\n\n    <script>\n        document.addEventListener('alpine:init', () => {\n            Alpine.directive('foo', ...)\n        })\n    </script>\n</html>"
      }
    ],
    "relevance": 0.88
  },
  {
    "codeTitle": "Basic Usage of $id in Alpine.js",
    "codeDescription": "Demonstrates how to use $id to generate unique IDs for input elements on a page. When $id is called with the same string multiple times, it automatically appends a unique numeric suffix.",
    "codeLanguage": "alpine",
    "codeTokens": 97,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/id.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js $id Utility",
    "codeList": [
      {
        "language": "alpine",
        "code": "<input type=\"text\" :id=\"$id('text-input')\">\n<!-- id=\"text-input-1\" -->\n\n<input type=\"text\" :id=\"$id('text-input')\">\n<!-- id=\"text-input-2\" -->"
      }
    ],
    "relevance": 0.879
  },
  {
    "codeTitle": "Basic Usage of Alpine.js Sort Plugin",
    "codeDescription": "Demonstrates the basic usage of the x-sort directive to make list items sortable.",
    "codeLanguage": "html",
    "codeTokens": 68,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/sort.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js Sort Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<ul x-sort>\n    <li x-sort:item>foo</li>\n    <li x-sort:item>bar</li>\n    <li x-sort:item>baz</li>\n</ul>"
      }
    ],
    "relevance": 0.876
  },
  {
    "codeTitle": "Installing Alpine.js Anchor Plugin via NPM",
    "codeDescription": "This snippet demonstrates how to install the Anchor plugin using NPM and initialize it in a JavaScript bundle.",
    "codeLanguage": "shell",
    "codeTokens": 39,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/anchor.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js Anchor Plugin Documentation",
    "codeList": [
      {
        "language": "shell",
        "code": "npm install @alpinejs/anchor"
      },
      {
        "language": "js",
        "code": "import Alpine from 'alpinejs'\nimport anchor from '@alpinejs/anchor'\n\nAlpine.plugin(anchor)\n\n..."
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "Using $refs to Remove an Element in Alpine.js",
    "codeDescription": "This snippet demonstrates how to use $refs to remove a DOM element in Alpine.js. The button's click event handler uses $refs.text.remove() to remove the span element marked with x-ref=\"text\".",
    "codeLanguage": "html",
    "codeTokens": 79,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/refs.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js $refs Magic Property",
    "codeList": [
      {
        "language": "html",
        "code": "<button @click=\"$refs.text.remove()\">Remove Text</button>\n\n<span x-ref=\"text\">Hello 👋</span>"
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "Using Drag Handles in Alpine.js Sort Plugin",
    "codeDescription": "Shows how to implement drag handles for more precise control over draggable areas within sortable items.",
    "codeLanguage": "html",
    "codeTokens": 111,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/sort.md#2025-04-11_snippet_5",
    "pageTitle": "Alpine.js Sort Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<ul x-sort>\n    <li x-sort:item>\n        <span x-sort:handle> - </span>foo\n    </li>\n\n    <li x-sort:item>\n        <span x-sort:handle> - </span>bar\n    </li>\n\n    <li x-sort:item>\n        <span x-sort:handle> - </span>baz\n    </li>\n</ul>"
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "Accessing Event Object in Alpine.js",
    "codeDescription": "Shows how to access the native event object using $event magic variable.",
    "codeLanguage": "alpine",
    "codeTokens": 39,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/events.md#2025-04-11_snippet_5",
    "pageTitle": "Alpine.js Event Handling Guide",
    "codeList": [
      {
        "language": "alpine",
        "code": "<button @click=\"$event.target.remove()\">Remove Me</button>"
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "Advanced Class-Based Transitions in Alpine.js",
    "codeDescription": "A comprehensive example using CSS classes to precisely control transitions with TailwindCSS. This approach provides fine-grained control over the entire transition process including timing, easing, and transformations.",
    "codeLanguage": "alpine",
    "codeTokens": 174,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/transition.md#2025-04-11_snippet_9",
    "pageTitle": "Alpine.js x-transition Directive",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ open: false }\">\n    <button @click=\"open = ! open\">Toggle</button>\n\n    <div\n        x-show=\"open\"\n        x-transition:enter=\"transition ease-out duration-300\"\n        x-transition:enter-start=\"opacity-0 scale-90\"\n        x-transition:enter-end=\"opacity-100 scale-100\"\n        x-transition:leave=\"transition ease-in duration-300\"\n        x-transition:leave-start=\"opacity-100 scale-100\"\n        x-transition:leave-end=\"opacity-0 scale-90\"\n    >Hello 👋</div>\n</div>"
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "Evaluating Expressions in Alpine.js Custom Directives",
    "codeDescription": "Example showing how to evaluate user-supplied JavaScript expressions in a custom 'x-log' directive using the evaluate API.",
    "codeLanguage": "alpine",
    "codeTokens": 59,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/extending.md#2025-04-11_snippet_5",
    "pageTitle": "Extending Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ message: 'Hello World!' }\">\n    <div x-log=\"message\"></div>\n</div>"
      },
      {
        "language": "js",
        "code": "Alpine.directive('log', (el, { expression }, { evaluate }) => {\n    // expression === 'message'\n\n    console.log(\n        evaluate(expression)\n    )\n})"
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "Using Magic Properties in Alpine.data Components",
    "codeDescription": "Demonstrates how to access Alpine's magic methods and properties from within a component object using the 'this' context. This example shows usage of the $watch magic method.",
    "codeLanguage": "js",
    "codeTokens": 74,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/globals/alpine-data.md#2025-04-11_snippet_7",
    "pageTitle": "Alpine.data Documentation",
    "codeList": [
      {
        "language": "js",
        "code": "Alpine.data('dropdown', () => ({\n    open: false,\n\n    init() {\n        this.$watch('open', () => {...})\n    }\n}))"
      }
    ],
    "relevance": 0.873
  },
  {
    "codeTitle": "Using Keyed IDs for Looping in Alpine.js",
    "codeDescription": "Demonstrates how to use the optional second parameter of $id to add a custom suffix to generated IDs, particularly useful in loops. This example shows a listbox implementation with aria-activedescendant attribute.",
    "codeLanguage": "alpine",
    "codeTokens": 124,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/id.md#2025-04-11_snippet_4",
    "pageTitle": "Alpine.js $id Utility",
    "codeList": [
      {
        "language": "alpine",
        "code": "<ul\n    x-id=\"['list-item']\"\n    :aria-activedescendant=\"$id('list-item', activeItem.id)\"\n>\n    <template x-for=\"item in items\" :key=\"item.id\">\n        <li :id=\"$id('list-item', item.id)\">...</li>\n    </template>\n</ul>"
      }
    ],
    "relevance": 0.87
  },
  {
    "codeTitle": "Dynamic Credit Card Input Masking",
    "codeDescription": "Implementation of dynamic masking for credit card numbers that changes format based on card type.",
    "codeLanguage": "html",
    "codeTokens": 75,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/mask.md#2025-04-11_snippet_4",
    "pageTitle": "Alpine.js Mask Plugin Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<input x-mask:dynamic=\"\n    $input.startsWith('34') || $input.startsWith('37')\n        ? '9999 999999 99999' : '9999 9999 9999 9999'\n\">"
      }
    ],
    "relevance": 0.87
  },
  {
    "codeTitle": "Using x-ignore Directive in Alpine.js",
    "codeDescription": "Demonstrates how to use x-ignore to prevent Alpine.js from processing a specific section of HTML, even when it contains Alpine directives. In this example, the x-text directive within the ignored div will not be processed, so the span will not display 'From Alpine'.",
    "codeLanguage": "alpine",
    "codeTokens": 101,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/ignore.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js x-ignore Directive Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ label: 'From Alpine' }\">\n    <div x-ignore>\n        <span x-text=\"label\"></span>\n    </div>\n</div>"
      }
    ],
    "relevance": 0.87
  },
  {
    "codeTitle": "Debounce Modifier with x-model in Alpine.js",
    "codeDescription": "Shows how to use the .debounce modifier to delay updating the bound property until the user stops typing, useful for search inputs.",
    "codeLanguage": "alpine",
    "codeTokens": 52,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/model.md#2025-04-11_snippet_15",
    "pageTitle": "Understanding x-model Directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<input type=\"text\" x-model.debounce=\"search\">"
      }
    ],
    "relevance": 0.87
  },
  {
    "codeTitle": "Registering Alpine Components from a Bundle",
    "codeDescription": "Shows how to register Alpine.data components when using a build step. This approach imports components from separate files and registers them before starting Alpine.",
    "codeLanguage": "js",
    "codeTokens": 63,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/globals/alpine-data.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.data Documentation",
    "codeList": [
      {
        "language": "js",
        "code": "import Alpine from 'alpinejs'\nimport dropdown from './dropdown.js'\n\nAlpine.data('dropdown', dropdown)\n\nAlpine.start()"
      }
    ],
    "relevance": 0.87
  },
  {
    "codeTitle": "Using Alpine.js Without Data",
    "codeDescription": "Shows how to use Alpine.js functionality without defining reactive data. This approach is useful for simple interactions that don't require state tracking.",
    "codeLanguage": "alpine",
    "codeTokens": 57,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/state.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.js State Management",
    "codeList": [
      {
        "language": "alpine",
        "code": "<button x-data @click=\"alert('I\\'ve been clicked!')\">Click Me</button>"
      }
    ],
    "relevance": 0.87
  },
  {
    "codeTitle": "Different Scale Values for Enter and Leave in Alpine.js",
    "codeDescription": "Shows how to set different scale values for entering (80%) and leaving (90%) transitions using separate x-transition directives.",
    "codeLanguage": "alpine",
    "codeTokens": 57,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/transition.md#2025-04-11_snippet_7",
    "pageTitle": "Alpine.js x-transition Directive",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div ...\n    x-transition:enter.scale.80\n    x-transition:leave.scale.90\n>"
      }
    ],
    "relevance": 0.867
  },
  {
    "codeTitle": "Toggling Classes with Object Syntax in Alpine.js",
    "codeDescription": "Demonstrates how to toggle classes on and off using Alpine's class binding object syntax.",
    "codeLanguage": "alpine",
    "codeTokens": 57,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/templating.md#2025-04-11_snippet_10",
    "pageTitle": "Templating in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ open: true }\">\n    <span :class=\"{ 'hidden': ! open }\">...</span>\n</div>"
      }
    ],
    "relevance": 0.865
  },
  {
    "codeTitle": "Function-based Dynamic Credit Card Masking",
    "codeDescription": "Example of using a JavaScript function to handle dynamic credit card input masking.",
    "codeLanguage": "html",
    "codeTokens": 89,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/mask.md#2025-04-11_snippet_5",
    "pageTitle": "Alpine.js Mask Plugin Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<input x-mask:dynamic=\"creditCardMask\">\n\n<script>\nfunction creditCardMask(input) {\n    return input.startsWith('34') || input.startsWith('37')\n        ? '9999 999999 99999'\n        : '9999 9999 9999 9999'\n}\n</script>"
      }
    ],
    "relevance": 0.865
  },
  {
    "codeTitle": "Basic Focus Navigation with Arrow Keys in Alpine.js",
    "codeDescription": "Demonstrates how to implement basic keyboard navigation between focusable elements using the $focus magic. This example allows users to move focus between buttons using left and right arrow keys.",
    "codeLanguage": "alpine",
    "codeTokens": 92,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/focus.md#2025-04-11_snippet_7",
    "pageTitle": "Alpine.js Focus Plugin Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div\n    @keydown.right=\"$focus.next()\"\n    @keydown.left=\"$focus.previous()\"\n>\n    <button>First</button>\n    <button>Second</button>\n    <button>Third</button>\n</div>"
      }
    ],
    "relevance": 0.865
  },
  {
    "codeTitle": "Creating and using single-value Alpine stores",
    "codeDescription": "Shows how to use Alpine.store with simple values instead of objects. This example creates a boolean darkMode store and demonstrates toggling it and using it in a conditional class binding.",
    "codeLanguage": "alpine",
    "codeTokens": 118,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/globals/alpine-store.md#2025-04-11_snippet_6",
    "pageTitle": "Alpine.store: Global State Management",
    "codeList": [
      {
        "language": "alpine",
        "code": "<button x-data @click=\"$store.darkMode = ! $store.darkMode\">Toggle Dark Mode</button>\n\n...\n\n<div x-data :class=\"$store.darkMode && 'bg-black'\">\n    ...\n</div>\n\n\n<script>\n    document.addEventListener('alpine:init', () => {\n        Alpine.store('darkMode', false)\n    })\n</script>"
      }
    ],
    "relevance": 0.865
  },
  {
    "codeTitle": "Boolean Modifier with x-model in Alpine.js",
    "codeDescription": "Demonstrates using the .boolean modifier with x-model to store values as JavaScript booleans, working with both integers and strings.",
    "codeLanguage": "alpine",
    "codeTokens": 80,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/model.md#2025-04-11_snippet_14",
    "pageTitle": "Understanding x-model Directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<select x-model.boolean=\"isActive\">\n    <option value=\"true\">Yes</option>\n    <option value=\"false\">No</option>\n</select>\n<span x-text=\"typeof isActive\"></span>"
      }
    ],
    "relevance": 0.865
  },
  {
    "codeTitle": "Customizing Anchor Positioning with Modifiers in Alpine.js",
    "codeDescription": "This snippet demonstrates how to use the .bottom-start modifier with x-anchor to position a dropdown below and to the right of the reference element.",
    "codeLanguage": "html",
    "codeTokens": 96,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/anchor.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.js Anchor Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<div x-data=\"{ open: false }\">\n    <button x-ref=\"button\" @click=\"open = ! open\">Toggle</button>\n\n    <div x-show=\"open\" x-anchor.bottom-start=\"$refs.button\">\n        Dropdown content\n    </div>\n</div>"
      }
    ],
    "relevance": 0.864
  },
  {
    "codeTitle": "Standalone x-init Usage in Alpine.js",
    "codeDescription": "Shows how x-init can be used both inside and outside x-data blocks.",
    "codeLanguage": "alpine",
    "codeTokens": 66,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/init.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.js x-init Directive Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data>\n    <span x-init=\"console.log('I can initialize')\"></span>\n</div>\n\n<span x-init=\"console.log('I can initialize too')\"></span>"
      }
    ],
    "relevance": 0.861
  },
  {
    "codeTitle": "Configuring SortableJS Options in Alpine.js",
    "codeDescription": "This snippet shows how to use the x-sort:config directive to customize SortableJS options in Alpine.js. In this example, the animation is set to 0 to disable it. The code creates a sortable list with three items.",
    "codeLanguage": "alpine",
    "codeTokens": 109,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/sort.md#2025-04-11_snippet_9",
    "pageTitle": "Alpine.js Sort Plugin Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<ul x-sort x-sort:config=\"{ animation: 0 }\">\n    <li x-sort:item>foo</li>\n    <li x-sort:item>bar</li>\n    <li x-sort:item>baz</li>\n</ul>"
      }
    ],
    "relevance": 0.86
  },
  {
    "codeTitle": "Implementing Magic Time Property in Alpine.js",
    "codeDescription": "Creates a $now magic helper that returns the current time as a localized string. When accessed, it dynamically returns the current time.",
    "codeLanguage": "js",
    "codeTokens": 54,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/extending.md#2025-04-11_snippet_10",
    "pageTitle": "Extending Alpine.js",
    "codeList": [
      {
        "language": "js",
        "code": "Alpine.magic('now', () => {\n    return (new Date).toLocaleTimeString()\n})"
      },
      {
        "language": "alpine",
        "code": "<span x-text=\"$now\"></span>"
      }
    ],
    "relevance": 0.86
  },
  {
    "codeTitle": "Using Init Functions in Alpine.data Components",
    "codeDescription": "Shows how to define an init function that will be automatically executed by Alpine before rendering the component. This is useful for initialization code that needs to run before the component is displayed.",
    "codeLanguage": "js",
    "codeTokens": 78,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/globals/alpine-data.md#2025-04-11_snippet_4",
    "pageTitle": "Alpine.data Documentation",
    "codeList": [
      {
        "language": "js",
        "code": "Alpine.data('dropdown', () => ({\n    init() {\n        // This code will be executed before Alpine\n        // initializes the rest of the component.\n    }\n}))"
      }
    ],
    "relevance": 0.86
  },
  {
    "codeTitle": "Setting Inner HTML with Alpine.js x-html Directive",
    "codeDescription": "Demonstrates how to use the x-html directive to dynamically render HTML content within a div element. The example shows binding HTML content stored in a 'title' data property containing an h1 element.",
    "codeLanguage": "alpine",
    "codeTokens": 82,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/templating.md#2025-04-11_snippet_12",
    "pageTitle": "Templating in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ title: '<h1>Start Here</h1>' }\">\n    <div x-html=\"title\"></div>\n</div>"
      }
    ],
    "relevance": 0.86
  },
  {
    "codeTitle": "Hooking into Alpine.js Initialization with alpine:init Event",
    "codeDescription": "Shows how to register event listeners for the alpine:init event, which fires after Alpine is loaded but before it initializes on the page. This is ideal for registering custom data, directives, and magics.",
    "codeLanguage": "js",
    "codeTokens": 66,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/lifecycle.md#2025-04-11_snippet_4",
    "pageTitle": "Alpine.js Lifecycle Documentation",
    "codeList": [
      {
        "language": "js",
        "code": "document.addEventListener('alpine:init', () => {\n    Alpine.data(...)\n})"
      }
    ],
    "relevance": 0.86
  },
  {
    "codeTitle": "Event Propagation Control in Alpine.js",
    "codeDescription": "Using .stop modifier to prevent event bubbling.",
    "codeLanguage": "alpine",
    "codeTokens": 51,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/on.md#2025-04-11_snippet_11",
    "pageTitle": "Alpine.js Event Handling Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div @click=\"console.log('I will not get logged')\">\n    <button @click.stop>Click Me</button>\n</div>"
      }
    ],
    "relevance": 0.858
  },
  {
    "codeTitle": "Using Alpine.$persist Global with Alpine.store",
    "codeDescription": "JavaScript code demonstrating how to use the globally exposed Alpine.$persist method with Alpine.store for persisting data outside x-data contexts.",
    "codeLanguage": "js",
    "codeTokens": 58,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/persist.md#2025-04-11_snippet_8",
    "pageTitle": "Alpine.js Persist Plugin Documentation",
    "codeList": [
      {
        "language": "js",
        "code": "Alpine.store('darkMode', {\n    on: Alpine.$persist(true).as('darkMode_on')\n});"
      }
    ],
    "relevance": 0.855
  },
  {
    "codeTitle": "Creating Alpine.js Plugin as NPM Module",
    "codeDescription": "Demonstrates how to create an Alpine.js plugin as an NPM module that can be imported into a bundle, using Alpine.plugin() API.",
    "codeLanguage": "js",
    "codeTokens": 68,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/extending.md#2025-04-11_snippet_13",
    "pageTitle": "Extending Alpine.js",
    "codeList": [
      {
        "language": "js",
        "code": "import Alpine from 'alpinejs'\n\nimport foo from 'foo'\nAlpine.plugin(foo)\n\nwindow.Alpine = Alpine\nwindow.Alpine.start()"
      },
      {
        "language": "js",
        "code": "export default function (Alpine) {\n    Alpine.directive('foo', ...)\n    Alpine.magic('foo', ...)\n}"
      }
    ],
    "relevance": 0.855
  },
  {
    "codeTitle": "Using $nextTick in Alpine.js",
    "codeDescription": "Demonstrates how to use $nextTick to execute code after Alpine has finished rendering.",
    "codeLanguage": "alpine",
    "codeTokens": 44,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/init.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js x-init Directive Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-init=\"$nextTick(() => { ... })\"></div>"
      }
    ],
    "relevance": 0.855
  },
  {
    "codeTitle": "Using x-resize with .document Modifier in Alpine.js",
    "codeDescription": "This snippet demonstrates how to use the .document modifier with x-resize to observe the entire document's size instead of a specific element.",
    "codeLanguage": "html",
    "codeTokens": 47,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/resize.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.js Resize Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<div x-resize.document=\"...\">"
      }
    ],
    "relevance": 0.855
  },
  {
    "codeTitle": "Using $dispatch with x-model in Alpine.js",
    "codeDescription": "Demonstrates how to trigger updates for x-model data bindings using $dispatch. This technique enables creating custom input components that can be controlled via x-model for two-way data binding.",
    "codeLanguage": "alpine",
    "codeTokens": 120,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/dispatch.md#2025-04-11_snippet_4",
    "pageTitle": "Alpine.js $dispatch Method",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ title: 'Hello' }\">\n    <span x-model=\"title\">\n        <button @click=\"$dispatch('input', 'Hello World!')\">Click me</button>\n        <!-- After the button is pressed, `x-model` will catch the bubbling \"input\" event, and update title. -->\n    </span>\n</div>"
      }
    ],
    "relevance": 0.855
  },
  {
    "codeTitle": "Wrap-Around Focus Navigation with Arrow Keys in Alpine.js",
    "codeDescription": "Extends the basic focus navigation by adding wrap-around functionality. When a user reaches the last element and presses right arrow, focus wraps to the first element, and vice versa.",
    "codeLanguage": "alpine",
    "codeTokens": 97,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/focus.md#2025-04-11_snippet_8",
    "pageTitle": "Alpine.js Focus Plugin Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div\n    @keydown.right=\"$focus.wrap().next()\"\n    @keydown.left=\"$focus.wrap().previous()\"\n>\n    <button>First</button>\n    <button>Second</button>\n    <button>Third</button>\n</div>"
      }
    ],
    "relevance": 0.855
  },
  {
    "codeTitle": "Customizing Transition Duration in Alpine.js",
    "codeDescription": "Demonstrates how to customize transition duration using the .duration modifier with x-transition.",
    "codeLanguage": "alpine",
    "codeTokens": 41,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/templating.md#2025-04-11_snippet_5",
    "pageTitle": "Templating in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-show=\"open\" x-transition.duration.500ms>"
      }
    ],
    "relevance": 0.852
  },
  {
    "codeTitle": "Displaying User Username with x-html in Alpine.js",
    "codeDescription": "This snippet demonstrates how to use the x-html directive to set the innerHTML of a span element with a user's username. The username is defined in the x-data object and includes HTML tags for strong emphasis.",
    "codeLanguage": "alpine",
    "codeTokens": 90,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/html.md#2025-04-11_snippet_0",
    "pageTitle": "Using x-html Directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ username: '<strong>calebporzio</strong>' }\">\n    Username: <span x-html=\"username\"></span>\n</div>"
      }
    ],
    "relevance": 0.85
  },
  {
    "codeTitle": "Implementing Custom Storage for Persistence in Alpine.js",
    "codeDescription": "Example of creating a custom storage mechanism (cookie-based) and using it with the .using() modifier for persistence in Alpine.js.",
    "codeLanguage": "alpine",
    "codeTokens": 188,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/persist.md#2025-04-11_snippet_6",
    "pageTitle": "Alpine.js Persist Plugin Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<script>\n    window.cookieStorage = {\n        getItem(key) {\n            let cookies = document.cookie.split(\";\");\n            for (let i = 0; i < cookies.length; i++) {\n                let cookie = cookies[i].split(\"=\");\n                if (key == cookie[0].trim()) {\n                    return decodeURIComponent(cookie[1]);\n                }\n            }\n            return null;\n        },\n        setItem(key, value) {\n            document.cookie = key+' = '+encodeURIComponent(value)\n        }\n    }\n</script>\n\n<div x-data=\"{ count: $persist(0).using(cookieStorage) }\">\n    <button x-on:click=\"count++\">Increment</button>\n\n    <span x-text=\"count\"></span>\n</div>"
      }
    ],
    "relevance": 0.85
  },
  {
    "codeTitle": "Creating Unique IDs with x-id and $id in Alpine.js",
    "codeDescription": "This example demonstrates how to use the x-id directive to create separate scopes for IDs. It creates two identical div structures, each with a label and input that share the same base ID ('text-input'), but Alpine.js ensures each receives a unique suffix (text-input-1, text-input-2).",
    "codeLanguage": "html",
    "codeTokens": 199,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/id.md#2025-04-11_snippet_0",
    "pageTitle": "x-id Directive in Alpine.js",
    "codeList": [
      {
        "language": "html",
        "code": "<div x-id=\"['text-input']\">\n    <label :for=\"$id('text-input')\">Username</label>\n    <!-- for=\"text-input-1\" -->\n\n    <input type=\"text\" :id=\"$id('text-input')\">\n    <!-- id=\"text-input-1\" -->\n</div>\n\n<div x-id=\"['text-input']\">\n    <label :for=\"$id('text-input')\">Username</label>\n    <!-- for=\"text-input-2\" -->\n\n    <input type=\"text\" :id=\"$id('text-input')\">\n    <!-- id=\"text-input-2\" -->\n</div>"
      }
    ],
    "relevance": 0.85
  },
  {
    "codeTitle": "Custom Debounce Timing with x-model in Alpine.js",
    "codeDescription": "Example of setting a custom debounce timeout (500ms) with x-model in Alpine.js to control how frequently the bound property updates.",
    "codeLanguage": "alpine",
    "codeTokens": 55,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/model.md#2025-04-11_snippet_16",
    "pageTitle": "Understanding x-model Directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<input type=\"text\" x-model.debounce.500ms=\"search\">"
      }
    ],
    "relevance": 0.85
  },
  {
    "codeTitle": "Using Duration Modifier with Alpine.js Collapse Plugin",
    "codeDescription": "Example of customizing the duration of the collapse/expand transition using the .duration modifier to set a specific animation time.",
    "codeLanguage": "alpine",
    "codeTokens": 86,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/collapse.md#2025-04-11_snippet_4",
    "pageTitle": "Alpine.js Collapse Plugin Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ expanded: false }\">\n    <button @click=\"expanded = ! expanded\">Toggle Content</button>\n\n    <p x-show=\"expanded\" x-collapse.duration.1000ms>\n        ...\n    </p>\n</div>"
      }
    ],
    "relevance": 0.85
  },
  {
    "codeTitle": "Implementing Component Cleanup with Destroy Functions",
    "codeDescription": "Demonstrates how to use the destroy lifecycle method to clean up resources when a component is removed. This example shows how to clear an interval timer to prevent memory leaks.",
    "codeLanguage": "js",
    "codeTokens": 131,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/globals/alpine-data.md#2025-04-11_snippet_5",
    "pageTitle": "Alpine.data Documentation",
    "codeList": [
      {
        "language": "js",
        "code": "Alpine.data('timer', () => ({\n    timer: null,\n    counter: 0,\n    init() {\n      // Register an event handler that references the component instance\n      this.timer = setInterval(() => {\n        console.log('Increased counter to', ++this.counter);\n      }, 1000);\n    },\n    destroy() {\n        // Detach the handler, avoiding memory and side-effect leakage\n        clearInterval(this.timer);\n    },\n}))"
      }
    ],
    "relevance": 0.849
  },
  {
    "codeTitle": "Encapsulating Directives with x-bind in Alpine Components",
    "codeDescription": "Shows how to use x-bind to encapsulate Alpine directives within component objects, allowing for more reusable template logic. This example extracts click handlers and display logic into the component definition.",
    "codeLanguage": "alpine",
    "codeTokens": 75,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/globals/alpine-data.md#2025-04-11_snippet_8",
    "pageTitle": "Alpine.data Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"dropdown\">\n    <button x-bind=\"trigger\"></button>\n\n    <div x-bind=\"dialogue\"></div>\n</div>"
      },
      {
        "language": "js",
        "code": "Alpine.data('dropdown', () => ({\n    open: false,\n\n    trigger: {\n        ['@click']() {\n            this.open = ! this.open\n        },\n    },\n\n    dialogue: {\n        ['x-show']() {\n            return this.open\n        },\n    },\n}))"
      }
    ],
    "relevance": 0.846
  },
  {
    "codeTitle": "Setting Text Content with x-text in Alpine.js",
    "codeDescription": "This snippet demonstrates how to use the x-text directive to dynamically set the text content of an element. It creates a div with an x-data attribute containing a username, and then uses x-text to display that username within a strong tag.",
    "codeLanguage": "alpine",
    "codeTokens": 91,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/text.md#2025-04-11_snippet_0",
    "pageTitle": "Using x-text Directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ username: 'calebporzio' }\">\n    Username: <strong x-text=\"username\"></strong>\n</div>"
      }
    ],
    "relevance": 0.845
  },
  {
    "codeTitle": "Initializing Alpine Mask Plugin in JavaScript Bundle",
    "codeDescription": "Importing and initializing the Alpine.js Mask plugin in a JavaScript bundle.",
    "codeLanguage": "javascript",
    "codeTokens": 49,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/mask.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js Mask Plugin Documentation",
    "codeList": [
      {
        "language": "js",
        "code": "import Alpine from 'alpinejs'\nimport mask from '@alpinejs/mask'\n\nAlpine.plugin(mask)\n\n..."
      }
    ],
    "relevance": 0.845
  },
  {
    "codeTitle": "Custom Key Names in Alpine.js",
    "codeDescription": "Using custom keyboard key names as event modifiers in kebab-case format.",
    "codeLanguage": "alpine",
    "codeTokens": 41,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/on.md#2025-04-11_snippet_6",
    "pageTitle": "Alpine.js Event Handling Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<input type=\"text\" @keyup.page-down=\"alert('Submitted!')\">"
      }
    ],
    "relevance": 0.845
  },
  {
    "codeTitle": "Using x-intersect Directive in Alpine.js",
    "codeDescription": "Example of using the x-intersect directive to show content when an element enters the viewport. The 'shown' variable becomes true when the element is scrolled into view.",
    "codeLanguage": "alpine",
    "codeTokens": 88,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/intersect.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js Intersect Plugin Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ shown: false }\" x-intersect=\"shown = true\">\n    <div x-show=\"shown\" x-transition>\n        I'm in the viewport!\n    </div>\n</div>"
      }
    ],
    "relevance": 0.845
  },
  {
    "codeTitle": "Using Sort Handlers in Alpine.js Sort Plugin",
    "codeDescription": "Shows how to use sort handlers to react to sorting changes, including passing a function and using magic variables.",
    "codeLanguage": "html",
    "codeTokens": 90,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/sort.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.js Sort Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<ul x-sort=\"alert($item + ' - ' + $position)\">\n    <li x-sort:item=\"1\">foo</li>\n    <li x-sort:item=\"2\">bar</li>\n    <li x-sort:item=\"3\">baz</li>\n</ul>"
      },
      {
        "language": "html",
        "code": "<div x-data=\"{ handle: (item, position) => { ... } }\">\n    <ul x-sort=\"handle\">\n        <li x-sort:item=\"1\">foo</li>\n        <li x-sort:item=\"2\">bar</li>\n        <li x-sort:item=\"3\">baz</li>\n    </ul>\n</div>"
      }
    ],
    "relevance": 0.845
  },
  {
    "codeTitle": "Alpine.data() Component Registration with init()",
    "codeDescription": "Shows how to use init() method in components registered using Alpine.data().",
    "codeLanguage": "javascript",
    "codeTokens": 57,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/init.md#2025-04-11_snippet_5",
    "pageTitle": "Alpine.js x-init Directive Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "Alpine.data('dropdown', () => ({\n    init() {\n        console.log('I will get evaluated when initializing each \"dropdown\" component.')\n    },\n}))"
      }
    ],
    "relevance": 0.843
  },
  {
    "codeTitle": "Alpine.js Morph Lifecycle Hooks Configuration",
    "codeDescription": "Example showing all available lifecycle hooks and configuration options for the Morph plugin",
    "codeLanguage": "javascript",
    "codeTokens": 139,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/morph.md#2025-04-11_snippet_4",
    "pageTitle": "Alpine.js Morph Plugin Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "Alpine.morph(el, newHtml, {\n    updating(el, toEl, childrenOnly, skip) {\n        //\n    },\n\n    updated(el, toEl) {\n        //\n    },\n\n    removing(el, skip) {\n        //\n    },\n\n    removed(el) {\n        //\n    },\n\n    adding(el, skip) {\n        //\n    },\n\n    added(el) {\n        //\n    },\n\n    key(el) {\n        // By default Alpine uses the `key=\"\"` HTML attribute.\n        return el.id\n    },\n\n    lookahead: true, // Default: false\n})"
      }
    ],
    "relevance": 0.84
  },
  {
    "codeTitle": "Basic Date Input Masking with Alpine.js",
    "codeDescription": "Example of using x-mask directive to format a date input field with a specific pattern.",
    "codeLanguage": "html",
    "codeTokens": 46,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/mask.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.js Mask Plugin Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<input x-mask=\"99/99/9999\" placeholder=\"MM/DD/YYYY\">"
      }
    ],
    "relevance": 0.84
  },
  {
    "codeTitle": "Implementing a Simple Alpine.js Custom Directive",
    "codeDescription": "Example of creating a simple 'x-uppercase' directive that converts text content to uppercase.",
    "codeLanguage": "js",
    "codeTokens": 44,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/extending.md#2025-04-11_snippet_4",
    "pageTitle": "Extending Alpine.js",
    "codeList": [
      {
        "language": "js",
        "code": "Alpine.directive('uppercase', el => {\n    el.textContent = el.textContent.toUpperCase()\n})"
      },
      {
        "language": "alpine",
        "code": "<div x-data>\n    <span x-uppercase>Hello World!</span>\n</div>"
      }
    ],
    "relevance": 0.84
  },
  {
    "codeTitle": "Using Min Modifier with Alpine.js Collapse Plugin",
    "codeDescription": "Example of setting a minimum height for the collapsed state using the .min modifier, which creates a cut-off effect rather than fully hiding the element.",
    "codeLanguage": "alpine",
    "codeTokens": 90,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/collapse.md#2025-04-11_snippet_5",
    "pageTitle": "Alpine.js Collapse Plugin Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ expanded: false }\">\n    <button @click=\"expanded = ! expanded\">Toggle Content</button>\n\n    <p x-show=\"expanded\" x-collapse.min.50px>\n        ...\n    </p>\n</div>"
      }
    ],
    "relevance": 0.84
  },
  {
    "codeTitle": "Nesting Dialogs with x-trap in Alpine.js",
    "codeDescription": "Shows how to nest dialogs using x-trap, demonstrating its ability to handle recursive focus trapping.",
    "codeLanguage": "html",
    "codeTokens": 160,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/focus.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.js Focus Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<div x-data=\"{ open: false }\">\n    <button @click=\"open = true\">Open Dialog</button>\n\n    <span x-show=\"open\" x-trap=\"open\">\n\n        ...\n\n        <div x-data=\"{ open: false }\">\n            <button @click=\"open = true\">Open Nested Dialog</button>\n\n            <span x-show=\"open\" x-trap=\"open\">\n\n                ...\n\n                <button @click=\"open = false\">Close Nested Dialog</button>\n            </span>\n        </div>\n\n        <button @click=\"open = false\">Close Dialog</button>\n    </span>\n</div>"
      }
    ],
    "relevance": 0.84
  },
  {
    "codeTitle": "Styling Ghost Elements in Alpine.js Sort Plugin",
    "codeDescription": "Shows how to style the ghost element using CSS and the .sortable-ghost class.",
    "codeLanguage": "html",
    "codeTokens": 90,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/sort.md#2025-04-11_snippet_7",
    "pageTitle": "Alpine.js Sort Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<style>\n.sortable-ghost {\n    opacity: .5 !important;\n}\n</style>\n\n<ul x-sort.ghost>\n    <li x-sort:item>foo</li>\n    <li x-sort:item>bar</li>\n    <li x-sort:item>baz</li>\n</ul>"
      }
    ],
    "relevance": 0.837
  },
  {
    "codeTitle": "Customizing Scale Origin in Alpine.js",
    "codeDescription": "Example of changing the origin point of a scale transition using the .origin modifier, setting it to the top of the element instead of the default center.",
    "codeLanguage": "alpine",
    "codeTokens": 50,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/transition.md#2025-04-11_snippet_8",
    "pageTitle": "Alpine.js x-transition Directive",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div ... x-transition.scale.origin.top>"
      }
    ],
    "relevance": 0.835
  },
  {
    "codeTitle": "Using .inert Modifier with x-trap in Alpine.js",
    "codeDescription": "Demonstrates the use of the .inert modifier to hide other elements from screen readers when trapping focus.",
    "codeLanguage": "html",
    "codeTokens": 138,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/focus.md#2025-04-11_snippet_4",
    "pageTitle": "Alpine.js Focus Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<!-- When `open` is `false`: -->\n<body x-data=\"{ open: false }\">\n    <div x-trap.inert=\"open\" ...>\n        ...\n    </div>\n\n    <div>\n        ...\n    </div>\n</body>\n\n<!-- When `open` is `true`: -->\n<body x-data=\"{ open: true }\">\n    <div x-trap.inert=\"open\" ...>\n        ...\n    </div>\n\n    <div aria-hidden=\"true\">\n        ...\n    </div>\n</body>"
      }
    ],
    "relevance": 0.835
  },
  {
    "codeTitle": "Using Stored IDs in Alpine.js Components",
    "codeDescription": "Shows how to store generated IDs in component data scope to reference them multiple times, such as connecting labels with inputs. This approach uses x-data to store the generated ID.",
    "codeLanguage": "alpine",
    "codeTokens": 152,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/id.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js $id Utility",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ id: $id('text-input') }\">\n    <label :for=\"id\"> <!-- \"text-input-1\" -->\n    <input type=\"text\" :id=\"id\"> <!-- \"text-input-1\" -->\n</div>\n\n<div x-data=\"{ id: $id('text-input') }\">\n    <label :for=\"id\"> <!-- \"text-input-2\" -->\n    <input type=\"text\" :id=\"id\"> <!-- \"text-input-2\" -->\n</div>"
      }
    ],
    "relevance": 0.835
  },
  {
    "codeTitle": "Defining Asynchronous Function in JavaScript",
    "codeDescription": "This snippet shows an asynchronous function that fetches data from an API. It uses the async/await syntax to handle the asynchronous operations.",
    "codeLanguage": "js",
    "codeTokens": 63,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/async.md#2025-04-11_snippet_2",
    "pageTitle": "Asynchronous Functions in Alpine.js",
    "codeList": [
      {
        "language": "js",
        "code": "async function getLabel() {\n    let response = await fetch('/api/label')\n\n    return await response.text()\n}"
      }
    ],
    "relevance": 0.835
  },
  {
    "codeTitle": "Invalid Template Structure in Alpine.js x-for",
    "codeDescription": "Demonstrates an invalid x-for template structure that will not work because the template contains multiple root elements. The x-for directive requires templates to have exactly one root element.",
    "codeLanguage": "alpine",
    "codeTokens": 74,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/for.md#2025-04-11_snippet_6",
    "pageTitle": "Alpine.js x-for Directive Usage Guide",
    "codeList": [
      {
        "language": "alpine",
        "code": "<template x-for=\"color in colors\">\n    <span>The next color is </span><span x-text=\"color\">\n</template>"
      }
    ],
    "relevance": 0.834
  },
  {
    "codeTitle": "Installing Alpine.js Collapse Plugin via CDN in HTML",
    "codeDescription": "How to include the Collapse plugin via CDN using script tags. The plugin script must be included before Alpine's core JS file.",
    "codeLanguage": "alpine",
    "codeTokens": 97,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/collapse.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js Collapse Plugin Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<!-- Alpine Plugins -->\n<script defer src=\"https://cdn.jsdelivr.net/npm/@alpinejs/collapse@3.x.x/dist/cdn.min.js\"></script>\n\n<!-- Alpine Core -->\n<script defer src=\"https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js\"></script>"
      }
    ],
    "relevance": 0.831
  },
  {
    "codeTitle": "Cascading Scope with x-data in Alpine.js V3",
    "codeDescription": "Demonstrates how nested x-data scopes now inherit properties from parent scopes unless explicitly overwritten.",
    "codeLanguage": "alpine",
    "codeTokens": 110,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/upgrade-guide.md#2025-04-11_snippet_5",
    "pageTitle": "Upgrading from Alpine.js V2 to V3",
    "codeList": [
      {
        "language": "alpine",
        "code": "<!-- 🚫 Before -->\n<div x-data=\"{ foo: 'bar' }\">\n    <div x-data=\"{}\">\n        <!-- foo is undefined -->\n    </div>\n</div>\n\n<!-- ✅ After -->\n<div x-data=\"{ foo: 'bar' }\">\n    <div x-data=\"{}\">\n        <!-- foo is 'bar' -->\n    </div>\n</div>"
      }
    ],
    "relevance": 0.83
  },
  {
    "codeTitle": "Key-Specific Event Handling in Alpine.js",
    "codeDescription": "Example of listening for specific key events (enter key) using key modifiers.",
    "codeLanguage": "alpine",
    "codeTokens": 34,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/events.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js Event Handling Guide",
    "codeList": [
      {
        "language": "alpine",
        "code": "<input @keyup.enter=\"...\">"
      }
    ],
    "relevance": 0.83
  },
  {
    "codeTitle": "Custom Throttle Timing with x-model in Alpine.js",
    "codeDescription": "Demonstrates setting a custom throttle interval (500ms) with x-model in Alpine.js to limit the frequency of property updates.",
    "codeLanguage": "alpine",
    "codeTokens": 54,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/model.md#2025-04-11_snippet_17",
    "pageTitle": "Understanding x-model Directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<input type=\"text\" x-model.throttle.500ms=\"search\">"
      }
    ],
    "relevance": 0.83
  },
  {
    "codeTitle": "Using x-anchor Directive for Dropdown Positioning in Alpine.js",
    "codeDescription": "This example shows how to use the x-anchor directive to position a dropdown relative to a toggle button in Alpine.js.",
    "codeLanguage": "html",
    "codeTokens": 89,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/anchor.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js Anchor Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<div x-data=\"{ open: false }\">\n    <button x-ref=\"button\" @click=\"open = ! open\">Toggle</button>\n\n    <div x-show=\"open\" x-anchor=\"$refs.button\">\n        Dropdown content\n    </div>\n</div>"
      }
    ],
    "relevance": 0.83
  },
  {
    "codeTitle": "Using x-transition Instead of x-show.transition in Alpine.js V3",
    "codeDescription": "Demonstrates how to migrate from the deprecated x-show.transition syntax to the new x-transition directive in Alpine.js V3.",
    "codeLanguage": "alpine",
    "codeTokens": 171,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/upgrade-guide.md#2025-04-11_snippet_3",
    "pageTitle": "Upgrading from Alpine.js V2 to V3",
    "codeList": [
      {
        "language": "alpine",
        "code": "<!-- 🚫 Before -->\n<div x-show.transition=\"open\"></div>\n<!-- ✅ After -->\n<div x-show=\"open\" x-transition></div>\n\n<!-- 🚫 Before -->\n<div x-show.transition.duration.500ms=\"open\"></div>\n<!-- ✅ After -->\n<div x-show=\"open\" x-transition.duration.500ms></div>\n\n<!-- 🚫 Before -->\n<div x-show.transition.in.duration.500ms.out.duration.750ms=\"open\"></div>\n<!-- ✅ After -->\n<div\n    x-show=\"open\"\n    x-transition:enter.duration.500ms\n    x-transition:leave.duration.750ms\n></div>"
      }
    ],
    "relevance": 0.83
  },
  {
    "codeTitle": "Using Alpine Lifecycle Events Instead of deferLoadingAlpine",
    "codeDescription": "Shows how to use the new Alpine lifecycle events instead of the deprecated deferLoadingAlpine function.",
    "codeLanguage": "alpine",
    "codeTokens": 138,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/upgrade-guide.md#2025-04-11_snippet_9",
    "pageTitle": "Upgrading from Alpine.js V2 to V3",
    "codeList": [
      {
        "language": "alpine",
        "code": "<!-- 🚫 Before -->\n<script>\n    window.deferLoadingAlpine = startAlpine => {\n        // Will be executed before initializing Alpine.\n\n        startAlpine()\n\n        // Will be executed after initializing Alpine.\n    }\n</script>\n\n<!-- ✅ After -->\n<script>\n    document.addEventListener('alpine:init', () => {\n        // Will be executed before initializing Alpine.\n    })\n\n    document.addEventListener('alpine:initialized', () => {\n        // Will be executed after initializing Alpine.\n    })\n</script>"
      }
    ],
    "relevance": 0.828
  },
  {
    "codeTitle": "Using x-bind Instead of x-spread in Alpine.js V3",
    "codeDescription": "Shows how to use the new x-bind directive to replace the deprecated x-spread directive for applying multiple directives.",
    "codeLanguage": "alpine",
    "codeTokens": 192,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/upgrade-guide.md#2025-04-11_snippet_8",
    "pageTitle": "Upgrading from Alpine.js V2 to V3",
    "codeList": [
      {
        "language": "alpine",
        "code": "<!-- 🚫 Before -->\n<div x-data=\"dropdown()\">\n    <button x-spread=\"trigger\">Toggle</button>\n\n    <div x-spread=\"dialogue\">...</div>\n</div>\n\n<!-- ✅ After -->\n<div x-data=\"dropdown()\">\n    <button x-bind=\"trigger\">Toggle</button>\n\n    <div x-bind=\"dialogue\">...</div>\n</div>\n\n\n<script>\n    function dropdown() {\n        return {\n            open: false,\n\n            trigger: {\n                'x-on:click'() { this.open = ! this.open },\n            },\n\n            dialogue: {\n                'x-show'() { return this.open },\n                'x-bind:class'() { return 'foo bar' },\n            },\n        }\n    }\n</script>"
      }
    ],
    "relevance": 0.825
  },
  {
    "codeTitle": "Using .capture Modifier in Alpine.js",
    "codeDescription": "Demonstrates the .capture modifier which executes the listener during the event's capturing phase, before the event bubbles up from the target element.",
    "codeLanguage": "alpine",
    "codeTokens": 73,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/on.md#2025-04-11_snippet_21",
    "pageTitle": "Alpine.js Event Handling Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div @click.capture=\"console.log('I will log first')\">\n    <button @click=\"console.log('I will log second')\"></button>\n</div>"
      }
    ],
    "relevance": 0.825
  },
  {
    "codeTitle": "Using Asynchronous Function in Alpine.js Without Parentheses",
    "codeDescription": "This Alpine.js snippet shows how to use an asynchronous function in an x-text directive without explicitly calling it with parentheses. Alpine detects that it's an async function and handles it accordingly.",
    "codeLanguage": "alpine",
    "codeTokens": 58,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/async.md#2025-04-11_snippet_4",
    "pageTitle": "Asynchronous Functions in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<span x-text=\"getLabel\"></span>"
      }
    ],
    "relevance": 0.825
  },
  {
    "codeTitle": "Using $nextTick Instead of Return Callbacks in x-init",
    "codeDescription": "Shows how to use $nextTick() to replace the deprecated pattern of returning a callback function from x-init.",
    "codeLanguage": "alpine",
    "codeTokens": 81,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/upgrade-guide.md#2025-04-11_snippet_6",
    "pageTitle": "Upgrading from Alpine.js V2 to V3",
    "codeList": [
      {
        "language": "alpine",
        "code": "<!-- 🚫 Before -->\n<div x-data x-init=\"() => { ... }\">...</div>\n\n<!-- ✅ After -->\n<div x-data x-init=\"$nextTick(() => { ... })\">...</div>"
      }
    ],
    "relevance": 0.825
  },
  {
    "codeTitle": "Basic Usage of $persist Method in Alpine.js",
    "codeDescription": "Example showing how to use the $persist magic method to persist a counter value across page loads in Alpine.js.",
    "codeLanguage": "alpine",
    "codeTokens": 75,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/persist.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.js Persist Plugin Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ count: $persist(0) }\">\n    <button x-on:click=\"count++\">Increment</button>\n\n    <span x-text=\"count\"></span>\n</div>"
      }
    ],
    "relevance": 0.825
  },
  {
    "codeTitle": "Converting Global Functions to Alpine.data() Component Registration",
    "codeDescription": "Demonstrates the migration from using global JavaScript functions for component data to the preferred Alpine.data() registration method. This approach provides better encapsulation and proper initialization timing through the alpine:init event.",
    "codeLanguage": "alpine",
    "codeTokens": 137,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/upgrade-guide.md#2025-04-11_snippet_12",
    "pageTitle": "Upgrading from Alpine.js V2 to V3",
    "codeList": [
      {
        "language": "alpine",
        "code": "<!-- 🚫 Before -->\n<div x-data=\"dropdown()\">\n    ...\n</div>\n\n<script>\n    function dropdown() {\n        return {\n            ...\n        }\n    }\n</script>\n\n<!-- ✅ After -->\n<div x-data=\"dropdown\">\n    ...\n</div>\n\n<script>\n    document.addEventListener('alpine:init', () => {\n        Alpine.data('dropdown', () => ({\n            ...\n        }))\n    })\n</script>"
      }
    ],
    "relevance": 0.825
  },
  {
    "codeTitle": "Controlling Directive Execution Order in Alpine.js",
    "codeDescription": "Example showing how to control the execution order of custom directives by using the .before() method to specify which directive should run after yours.",
    "codeLanguage": "js",
    "codeTokens": 73,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/extending.md#2025-04-11_snippet_8",
    "pageTitle": "Extending Alpine.js",
    "codeList": [
      {
        "language": "js",
        "code": "Alpine.directive('foo', (el, { value, modifiers, expression }) => {\n    Alpine.addScopeToNode(el, {foo: 'bar'})\n}).before('bind')"
      },
      {
        "language": "alpine",
        "code": "<div x-data>\n    <span x-foo x-bind:foo=\"foo\"></span>\n</div>"
      }
    ],
    "relevance": 0.822
  },
  {
    "codeTitle": "Implementing Ghost Elements in Alpine.js Sort Plugin",
    "codeDescription": "Demonstrates how to use the .ghost modifier to show a ghost element in place of the dragged item.",
    "codeLanguage": "html",
    "codeTokens": 75,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/sort.md#2025-04-11_snippet_6",
    "pageTitle": "Alpine.js Sort Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<ul x-sort.ghost>\n    <li x-sort:item>foo</li>\n    <li x-sort:item>bar</li>\n    <li x-sort:item>baz</li>\n</ul>"
      }
    ],
    "relevance": 0.82
  },
  {
    "codeTitle": "Using alpine:initialized Event in Alpine.js",
    "codeDescription": "Demonstrates how to register event listeners for the alpine:initialized event, which fires after Alpine has completed its initialization process on the page.",
    "codeLanguage": "js",
    "codeTokens": 52,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/lifecycle.md#2025-04-11_snippet_5",
    "pageTitle": "Alpine.js Lifecycle Documentation",
    "codeList": [
      {
        "language": "js",
        "code": "document.addEventListener('alpine:initialized', () => {\n    //\n})"
      }
    ],
    "relevance": 0.82
  },
  {
    "codeTitle": "Using .camel Modifier in Alpine.js",
    "codeDescription": "Shows how to use the .camel modifier to listen for camelCased events. This allows Alpine to internally convert kebab-case event names to camelCase.",
    "codeLanguage": "alpine",
    "codeTokens": 58,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/on.md#2025-04-11_snippet_18",
    "pageTitle": "Alpine.js Event Handling Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div @custom-event.camel=\"handleCustomEvent\">\n    ...\n</div>"
      }
    ],
    "relevance": 0.82
  },
  {
    "codeTitle": "Using Modifiers with x-intersect in Alpine.js",
    "codeDescription": "Examples of using various modifiers with x-intersect to customize intersection behavior, including .once, .half, .full, .threshold, and .margin.",
    "codeLanguage": "alpine",
    "codeTokens": 57,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/intersect.md#2025-04-11_snippet_4",
    "pageTitle": "Alpine.js Intersect Plugin Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-intersect.once=\"shown = true\">...</div>"
      },
      {
        "language": "alpine",
        "code": "<div x-intersect.half=\"shown = true\">...</div>"
      },
      {
        "language": "alpine",
        "code": "<div x-intersect.full=\"shown = true\">...</div>"
      },
      {
        "language": "alpine",
        "code": "<div x-intersect.threshold.50=\"shown = true\">...</div>"
      },
      {
        "language": "alpine",
        "code": "<div x-intersect.margin.200px=\"loaded = true\">...</div>"
      },
      {
        "language": "alpine",
        "code": "<div x-intersect:leave.margin.10%.25px.25.25px=\"loaded = false\">...</div>"
      },
      {
        "language": "alpine",
        "code": "<div x-intersect.margin.-100px=\"visible = true\">...</div>"
      }
    ],
    "relevance": 0.82
  },
  {
    "codeTitle": "Alpine.js Custom Directive Method Signature",
    "codeDescription": "The method signature for registering custom directives in Alpine.js, showing all available parameters and their purposes.",
    "codeLanguage": "js",
    "codeTokens": 53,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/extending.md#2025-04-11_snippet_3",
    "pageTitle": "Extending Alpine.js",
    "codeList": [
      {
        "language": "js",
        "code": "Alpine.directive('[name]', (el, { value, modifiers, expression }, { Alpine, effect, cleanup }) => {})"
      }
    ],
    "relevance": 0.82
  },
  {
    "codeTitle": "Complete HTML Example with Alpine.js CSP Build and Content-Security-Policy",
    "codeDescription": "A full HTML example showing how to set up a counter component using Alpine.js CSP build with proper Content-Security-Policy headers and nonce attributes.",
    "codeLanguage": "html",
    "codeTokens": 236,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/csp.md#2025-04-11_snippet_3",
    "pageTitle": "CSP (Content-Security Policy) Build for Alpine.js",
    "codeList": [
      {
        "language": "html",
        "code": "<html>\n    <head>\n        <meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'self'; script-src 'nonce-a23gbfz9e'\">\n\n        <script defer nonce=\"a23gbfz9e\" src=\"https://cdn.jsdelivr.net/npm/@alpinejs/csp@3.x.x/dist/cdn.min.js\"></script>\n    </head>\n\n    <body>\n        <div x-data=\"counter\">\n            <button x-on:click=\"increment\"></button>\n\n            <span x-text=\"count\"></span>\n        </div>\n\n        <script nonce=\"a23gbfz9e\">\n            document.addEventListener('alpine:init', () => {\n                Alpine.data('counter', () => {\n                    return {\n                        count: 1,\n\n                        increment() {\n                            this.count++;\n                        },\n                    }\n                })\n            })\n        </script>\n    </body>\n</html>"
      }
    ],
    "relevance": 0.819
  },
  {
    "codeTitle": "Valid Component Declaration with Alpine.js CSP Build (HTML)",
    "codeDescription": "Shows the proper way to reference data and methods with Alpine.js CSP build in the HTML template.",
    "codeLanguage": "html",
    "codeTokens": 70,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/csp.md#2025-04-11_snippet_5",
    "pageTitle": "CSP (Content-Security Policy) Build for Alpine.js",
    "codeList": [
      {
        "language": "html",
        "code": "<!-- Good -->\n<div x-data=\"counter\">\n    <button @click=\"increment\">Increment</button>\n\n    <span x-text=\"count\"></span>\n</div>"
      }
    ],
    "relevance": 0.815
  },
  {
    "codeTitle": "Deep Watching Objects with $watch in Alpine.js",
    "codeDescription": "Demonstrates deep watching of objects. When a nested property changes, the watcher returns the entire watched object, not just the changed sub-property.",
    "codeLanguage": "html",
    "codeTokens": 94,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/watch.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.js $watch Magic Method",
    "codeList": [
      {
        "language": "html",
        "code": "<div x-data=\"{ foo: { bar: 'baz' }}\" x-init=\"$watch('foo', (value, oldValue) => console.log(value, oldValue))\">\n    <button @click=\"foo.bar = 'bob'\">Update</button>\n</div>"
      }
    ],
    "relevance": 0.815
  },
  {
    "codeTitle": "Using .noreturn Modifier with x-trap in Alpine.js",
    "codeDescription": "Illustrates the use of the .noreturn modifier to prevent focus from returning to the previous element when x-trap is disabled.",
    "codeLanguage": "html",
    "codeTokens": 103,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/focus.md#2025-04-11_snippet_6",
    "pageTitle": "Alpine.js Focus Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<div x-data=\"{ open: false }\" x-trap.noreturn=\"open\">\n    <input type=\"search\" placeholder=\"search for something\" />\n\n    <div x-show=\"open\">\n        Search results\n\n        <button @click=\"open = false\">Close</button>\n    </div>\n</div>"
      }
    ],
    "relevance": 0.815
  },
  {
    "codeTitle": "Using .throttle with Custom Duration in Alpine.js",
    "codeDescription": "Shows how to customize the throttle interval by specifying a time value. In this example, the scroll handler will be called at most once every 750ms.",
    "codeLanguage": "alpine",
    "codeTokens": 59,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/on.md#2025-04-11_snippet_16",
    "pageTitle": "Alpine.js Event Handling Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div @scroll.window.throttle.750ms=\"handleScroll\">...</div>"
      }
    ],
    "relevance": 0.815
  },
  {
    "codeTitle": "Migrating Click-Away Event Modifier in Alpine.js",
    "codeDescription": "Shows how to update the deprecated .away event modifier to the new .outside modifier for handling click events outside an element. This change maintains the same functionality while using the newer, preferred syntax.",
    "codeLanguage": "alpine",
    "codeTokens": 105,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/upgrade-guide.md#2025-04-11_snippet_11",
    "pageTitle": "Upgrading from Alpine.js V2 to V3",
    "codeList": [
      {
        "language": "alpine",
        "code": "<!-- 🚫 Before -->\n<div x-show=\"open\" @click.away=\"open = false\">\n    ...\n</div>\n\n<!-- ✅ After -->\n<div x-show=\"open\" @click.outside=\"open = false\">\n    ...\n</div>"
      }
    ],
    "relevance": 0.815
  },
  {
    "codeTitle": "Using Specific Alpine.js Version via CDN",
    "codeDescription": "Example of including a specific version of Alpine.js in an HTML page for stability in production environments. This approach hardcodes the version number rather than using the @3.x.x syntax.",
    "codeLanguage": "html",
    "codeTokens": 74,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/installation.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js Installation Guide",
    "codeList": [
      {
        "language": "html",
        "code": "<script defer src=\"https://cdn.jsdelivr.net/npm/alpinejs@3.14.9/dist/cdn.min.js\"></script>"
      }
    ],
    "relevance": 0.81
  },
  {
    "codeTitle": "Using Transition Classes for Fine-grained Control in Alpine.js",
    "codeDescription": "Demonstrates how to use transition classes for more precise control over transitions, using Tailwind CSS classes as an example.",
    "codeLanguage": "alpine",
    "codeTokens": 133,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/templating.md#2025-04-11_snippet_8",
    "pageTitle": "Templating in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div\n    x-show=\"open\"\n    x-transition:enter=\"transition ease-out duration-300\"\n    x-transition:enter-start=\"opacity-0 transform scale-90\"\n    x-transition:enter-end=\"opacity-100 transform scale-100\"\n    x-transition:leave=\"transition ease-in duration-300\"\n    x-transition:leave-start=\"opacity-100 transform scale-100\"\n    x-transition:leave-end=\"opacity-0 transform scale-90\"\n>...</div>"
      }
    ],
    "relevance": 0.81
  },
  {
    "codeTitle": "Demonstrating Programmatic Access to x-model in Alpine.js",
    "codeDescription": "This snippet shows how to use the _x_model property to get and set values bound with x-model. It demonstrates setting a new username value and retrieving the current value using these methods.",
    "codeLanguage": "alpine",
    "codeTokens": 132,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/model.md#2025-04-11_snippet_18",
    "pageTitle": "Understanding x-model Directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ username: 'calebporzio' }\">\n    <div x-ref=\"div\" x-model=\"username\"></div>\n\n    <button @click=\"$refs.div._x_model.set('phantomatrix')\">\n        Change username to: 'phantomatrix'\n    </button>\n\n    <span x-text=\"$refs.div._x_model.get()\"></span>\n</div>"
      }
    ],
    "relevance": 0.81
  },
  {
    "codeTitle": "Limitation of $refs with Dynamic Binding in Alpine.js V3",
    "codeDescription": "This snippet illustrates a limitation in Alpine.js V3 where $refs cannot be dynamically bound. In this example, $refs will contain the literal string 'item.name' instead of the expected dynamic value.",
    "codeLanguage": "html",
    "codeTokens": 89,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/refs.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js $refs Magic Property",
    "codeList": [
      {
        "language": "html",
        "code": "<template x-for=\"item in items\" :key=\"item.id\" >\n    <div :x-ref=\"item.name\">\n    some content ...\n    </div>\n</template>"
      }
    ],
    "relevance": 0.81
  },
  {
    "codeTitle": "Using Synchronous Function in Alpine.js x-text Directive",
    "codeDescription": "This Alpine.js snippet demonstrates how to use a synchronous function within an x-text directive to set the text content of a span element.",
    "codeLanguage": "alpine",
    "codeTokens": 49,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/async.md#2025-04-11_snippet_1",
    "pageTitle": "Asynchronous Functions in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<span x-text=\"getLabel()\"></span>"
      }
    ],
    "relevance": 0.81
  },
  {
    "codeTitle": "Combined init() and x-init Usage in Alpine.js",
    "codeDescription": "Demonstrates the execution order when using both init() method and x-init directive.",
    "codeLanguage": "alpine",
    "codeTokens": 73,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/init.md#2025-04-11_snippet_6",
    "pageTitle": "Alpine.js x-init Directive Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div\n    x-data=\"{\n        init() {\n            console.log('I am called first')\n        }\n    }\"\n    x-init=\"console.log('I am called second')\"\n    >\n    ...\n</div>"
      }
    ],
    "relevance": 0.805
  },
  {
    "codeTitle": "Specifying Different Enter and Leave Transition Durations in Alpine.js",
    "codeDescription": "Shows how to set different durations for enter and leave transitions using x-transition:enter and x-transition:leave.",
    "codeLanguage": "alpine",
    "codeTokens": 64,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/templating.md#2025-04-11_snippet_6",
    "pageTitle": "Templating in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div\n    x-show=\"open\"\n    x-transition:enter.duration.500ms\n    x-transition:leave.duration.1000ms\n>"
      }
    ],
    "relevance": 0.805
  },
  {
    "codeTitle": "Basic x-cloak usage with x-show",
    "codeDescription": "Example showing how to prevent element flickering using x-cloak with x-show directive",
    "codeLanguage": "alpine",
    "codeTokens": 58,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/cloak.md#2025-04-11_snippet_1",
    "pageTitle": "Using x-cloak directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<span x-cloak x-show=\"false\">This will not 'blip' onto screen at any point</span>"
      }
    ],
    "relevance": 0.805
  },
  {
    "codeTitle": "Installing Alpine.js Sort Plugin via CDN",
    "codeDescription": "Demonstrates how to include the Sort plugin and Alpine.js core via CDN script tags.",
    "codeLanguage": "html",
    "codeTokens": 89,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/sort.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js Sort Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<!-- Alpine Plugins -->\n<script defer src=\"https://cdn.jsdelivr.net/npm/@alpinejs/sort@3.x.x/dist/cdn.min.js\"></script>\n\n<!-- Alpine Core -->\n<script defer src=\"https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js\"></script>"
      }
    ],
    "relevance": 0.805
  },
  {
    "codeTitle": "Alpine.js Custom Magic Method Signature",
    "codeDescription": "The method signature for registering custom magics in Alpine.js, showing available parameters and their purposes.",
    "codeLanguage": "js",
    "codeTokens": 42,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/extending.md#2025-04-11_snippet_9",
    "pageTitle": "Extending Alpine.js",
    "codeList": [
      {
        "language": "js",
        "code": "Alpine.magic('[name]', (el, { Alpine }) => {})"
      }
    ],
    "relevance": 0.805
  },
  {
    "codeTitle": "Transitioning Specific Properties in Alpine.js",
    "codeDescription": "Illustrates how to transition only specific properties like opacity using x-transition modifiers.",
    "codeLanguage": "alpine",
    "codeTokens": 37,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials/templating.md#2025-04-11_snippet_7",
    "pageTitle": "Templating in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-show=\"open\" x-transition.opacity>"
      }
    ],
    "relevance": 0.8
  },
  {
    "codeTitle": "x-show with Important Modifier in Alpine.js",
    "codeDescription": "Demonstrates using the .important modifier with x-show to override conflicting CSS display properties that use !important.",
    "codeLanguage": "alpine",
    "codeTokens": 82,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/show.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js x-show Directive Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ open: false }\">\n    <button x-on:click=\"open = ! open\">Toggle Dropdown</button>\n\n    <div x-show.important=\"open\">\n        Dropdown Contents...\n    </div>\n</div>"
      }
    ],
    "relevance": 0.8
  },
  {
    "codeTitle": "Markdown Front Matter Configuration",
    "codeDescription": "YAML front matter block defining metadata for an Alpine.js documentation page, including ordering and content type specifications.",
    "codeLanguage": "markdown",
    "codeTokens": 47,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js Advanced Usage Guide",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\norder: 8\ntitle: Advanced\ntype: sub-directory\n---"
      }
    ],
    "relevance": 0.8
  },
  {
    "codeTitle": "Installing Alpine.js Anchor Plugin via CDN",
    "codeDescription": "This snippet shows how to include the Anchor plugin using a CDN script tag, ensuring it's loaded before Alpine's core JS file.",
    "codeLanguage": "html",
    "codeTokens": 95,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/anchor.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js Anchor Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<script defer src=\"https://cdn.jsdelivr.net/npm/@alpinejs/anchor@3.x.x/dist/cdn.min.js\"></script>\n\n<!-- Alpine Core -->\n<script defer src=\"https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js\"></script>"
      }
    ],
    "relevance": 0.8
  },
  {
    "codeTitle": "Including External Alpine.js Extensions",
    "codeDescription": "Example showing the correct order of script tags when loading external Alpine.js extensions.",
    "codeLanguage": "alpine",
    "codeTokens": 69,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/extending.md#2025-04-11_snippet_1",
    "pageTitle": "Extending Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<html>\n    <script src=\"/js/foo.js\" defer></script>\n    <script src=\"/js/alpine.js\" defer></script>\n\n    <div x-data x-foo></div>\n</html>"
      }
    ],
    "relevance": 0.795
  },
  {
    "codeTitle": "Customizing Scale Value in Alpine.js",
    "codeDescription": "Demonstrates customizing the scale percentage for transitions, scaling the element up and down by 80% instead of the default value.",
    "codeLanguage": "alpine",
    "codeTokens": 46,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/transition.md#2025-04-11_snippet_6",
    "pageTitle": "Alpine.js x-transition Directive",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div ... x-transition.scale.80>"
      }
    ],
    "relevance": 0.795
  },
  {
    "codeTitle": "Cleaning Up Resources in Alpine.js Custom Directives",
    "codeDescription": "Example showing how to properly clean up resources (like event listeners) when an Alpine.js directive is removed from the DOM.",
    "codeLanguage": "js",
    "codeTokens": 78,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/extending.md#2025-04-11_snippet_7",
    "pageTitle": "Extending Alpine.js",
    "codeList": [
      {
        "language": "js",
        "code": "Alpine.directive('...', (el, {}, { cleanup }) => {\n    let handler = () => {}\n\n    window.addEventListener('click', handler)\n\n    cleanup(() => {\n        window.removeEventListener('click', handler)\n    })\n\n})"
      }
    ],
    "relevance": 0.795
  },
  {
    "codeTitle": "Adding Offset to Anchored Elements in Alpine.js",
    "codeDescription": "This example shows how to add an offset to an anchored element using the .offset modifier with x-anchor in Alpine.js.",
    "codeLanguage": "html",
    "codeTokens": 93,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/anchor.md#2025-04-11_snippet_4",
    "pageTitle": "Alpine.js Anchor Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<div x-data=\"{ open: false }\">\n    <button x-ref=\"button\" @click=\"open = ! open\">Toggle</button>\n\n    <div x-show=\"open\" x-anchor.offset.10=\"$refs.button\">\n        Dropdown content\n    </div>\n</div>"
      }
    ],
    "relevance": 0.795
  },
  {
    "codeTitle": "Using .noscroll Modifier with x-trap in Alpine.js",
    "codeDescription": "Shows how to use the .noscroll modifier to disable scrolling on the page when a dialog is open.",
    "codeLanguage": "html",
    "codeTokens": 100,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/focus.md#2025-04-11_snippet_5",
    "pageTitle": "Alpine.js Focus Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<div x-data=\"{ open: false }\">\n    <button @click=\"open = true\">Open Dialog</button>\n\n    <div x-show=\"open\" x-trap.noscroll=\"open\">\n        Dialog Contents\n\n        <button @click=\"open = false\">Close Dialog</button>\n    </div>\n</div>"
      }
    ],
    "relevance": 0.795
  },
  {
    "codeTitle": "Defining Alpine.js Directive Metadata in Markdown",
    "codeDescription": "This code snippet defines metadata for an Alpine.js documentation page about directives. It specifies the order, title, prefix, font type, and content type for the documentation.",
    "codeLanguage": "markdown",
    "codeTokens": 70,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js Directives Documentation",
    "codeList": [
      {
        "language": "markdown",
        "code": "---\norder: 4\ntitle: Directives\nprefix: x-\nfont-type: mono\ntype: sub-directory\n---"
      }
    ],
    "relevance": 0.79
  },
  {
    "codeTitle": "Scale-Only Transition in Alpine.js",
    "codeDescription": "Shows how to apply only a scale transition without opacity changes by using the .scale modifier on x-transition.",
    "codeLanguage": "alpine",
    "codeTokens": 39,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/transition.md#2025-04-11_snippet_5",
    "pageTitle": "Alpine.js x-transition Directive",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div ... x-transition.scale>"
      }
    ],
    "relevance": 0.79
  },
  {
    "codeTitle": "Using x-show Instead of x-if with Transitions in Alpine.js V3",
    "codeDescription": "Shows how to replace x-if with transitions (which is no longer supported) with x-show and x-transition in Alpine.js V3.",
    "codeLanguage": "alpine",
    "codeTokens": 84,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/upgrade-guide.md#2025-04-11_snippet_4",
    "pageTitle": "Upgrading from Alpine.js V2 to V3",
    "codeList": [
      {
        "language": "alpine",
        "code": "<!-- 🚫 Before -->\n<template x-if.transition=\"open\">\n    <div>...</div>\n</template>\n\n<!-- ✅ After -->\n<div x-show=\"open\" x-transition>...</div>"
      }
    ],
    "relevance": 0.79
  },
  {
    "codeTitle": "Combined Keyboard Modifiers in Alpine.js",
    "codeDescription": "Using multiple keyboard modifiers together for complex key combinations.",
    "codeLanguage": "alpine",
    "codeTokens": 37,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/on.md#2025-04-11_snippet_5",
    "pageTitle": "Alpine.js Event Handling Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<input type=\"text\" @keyup.shift.enter=\"alert('Submitted!')\">"
      }
    ],
    "relevance": 0.79
  },
  {
    "codeTitle": "Configuring CSS for x-cloak functionality",
    "codeDescription": "Required CSS rule to hide elements with x-cloak attribute until Alpine.js is fully loaded",
    "codeLanguage": "css",
    "codeTokens": 47,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/cloak.md#2025-04-11_snippet_0",
    "pageTitle": "Using x-cloak directive in Alpine.js",
    "codeList": [
      {
        "language": "css",
        "code": "[x-cloak] { display: none !important; }"
      }
    ],
    "relevance": 0.79
  },
  {
    "codeTitle": "YAML Front Matter Configuration for Alpine.js Documentation",
    "codeDescription": "YAML configuration block that defines metadata for an Alpine.js documentation section, specifying the order, title, and content type.",
    "codeLanguage": "yaml",
    "codeTokens": 46,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/essentials.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js Essentials Documentation",
    "codeList": [
      {
        "language": "yaml",
        "code": "order: 3\ntitle: Essentials\ntype: sub-directory"
      }
    ],
    "relevance": 0.785
  },
  {
    "codeTitle": "Opacity-Only Transition in Alpine.js",
    "codeDescription": "Example of applying only an opacity transition without scaling by using the .opacity modifier on x-transition.",
    "codeLanguage": "alpine",
    "codeTokens": 37,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/transition.md#2025-04-11_snippet_4",
    "pageTitle": "Alpine.js x-transition Directive",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div ... x-transition.opacity>"
      }
    ],
    "relevance": 0.785
  },
  {
    "codeTitle": "Creating Data-less Alpine.js Components",
    "codeDescription": "Shows how to create Alpine.js components that don't require any data, with options to either pass an empty object or omit the attribute value entirely.",
    "codeLanguage": "alpine",
    "codeTokens": 48,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/data.md#2025-04-11_snippet_5",
    "pageTitle": "Alpine.js x-data Directive Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{}\">"
      },
      {
        "language": "alpine",
        "code": "<div x-data>"
      }
    ],
    "relevance": 0.785
  },
  {
    "codeTitle": "Accessing Alpine store externally from JavaScript",
    "codeDescription": "Shows how to access and modify an Alpine store from outside Alpine components using Alpine.store() without a second parameter.",
    "codeLanguage": "alpine",
    "codeTokens": 49,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/globals/alpine-store.md#2025-04-11_snippet_4",
    "pageTitle": "Alpine.store: Global State Management",
    "codeList": [
      {
        "language": "alpine",
        "code": "<script>\n    Alpine.store('darkMode').toggle()\n</script>"
      }
    ],
    "relevance": 0.785
  },
  {
    "codeTitle": "Initializing Alpine.js V3 as a Module",
    "codeDescription": "Shows the new requirement to manually call Alpine.start() when importing Alpine.js V3 as a module.",
    "codeLanguage": "js",
    "codeTokens": 71,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/upgrade-guide.md#2025-04-11_snippet_2",
    "pageTitle": "Upgrading from Alpine.js V2 to V3",
    "codeList": [
      {
        "language": "js",
        "code": "// 🚫 Before\nimport 'alpinejs'\n\n// ✅ After\nimport Alpine from 'alpinejs'\n\nwindow.Alpine = Alpine\n\nAlpine.start()"
      }
    ],
    "relevance": 0.785
  },
  {
    "codeTitle": "Installing Alpine.js Morph via CDN",
    "codeDescription": "Instructions for including the Morph plugin via CDN script tags before Alpine's core JS file.",
    "codeLanguage": "html",
    "codeTokens": 89,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/morph.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js Morph Plugin Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<!-- Alpine Plugins -->\n<script defer src=\"https://cdn.jsdelivr.net/npm/@alpinejs/morph@3.x.x/dist/cdn.min.js\"></script>\n\n<!-- Alpine Core -->\n<script defer src=\"https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js\"></script>"
      }
    ],
    "relevance": 0.78
  },
  {
    "codeTitle": "Interactive Example of SortableJS Configuration in Alpine.js",
    "codeDescription": "This snippet provides an interactive example of a sortable list with custom configuration. It disables animations and adds a cursor-pointer class to each item for better user experience. The example is wrapped in an x-data directive to make it functional.",
    "codeLanguage": "html",
    "codeTokens": 129,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/sort.md#2025-04-11_snippet_10",
    "pageTitle": "Alpine.js Sort Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<div x-data>\n    <ul x-sort x-sort:config=\"{ animation: 0 }\">\n        <li x-sort:item class=\"cursor-pointer\">foo</li>\n        <li x-sort:item class=\"cursor-pointer\">bar</li>\n        <li x-sort:item class=\"cursor-pointer\">baz</li>\n    </ul>\n</div>"
      }
    ],
    "relevance": 0.78
  },
  {
    "codeTitle": "Accessing Current Element with $el in Alpine.js V3",
    "codeDescription": "Demonstrates the change in $el behavior where it now refers to the current element instead of the component root. In V3, use $root to access the component root element.",
    "codeLanguage": "alpine",
    "codeTokens": 128,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/upgrade-guide.md#2025-04-11_snippet_0",
    "pageTitle": "Upgrading from Alpine.js V2 to V3",
    "codeList": [
      {
        "language": "alpine",
        "code": "<!-- 🚫 Before -->\n<div x-data>\n    <button @click=\"console.log($el)\"></button>\n    <!-- In V2, $el would have been the <div>, now it's the <button> -->\n</div>\n\n<!-- ✅ After -->\n<div x-data>\n    <button @click=\"console.log($root)\"></button>\n</div>"
      }
    ],
    "relevance": 0.78
  },
  {
    "codeTitle": "Initializing Alpine.js Collapse Plugin in JavaScript Bundle",
    "codeDescription": "Code to import and initialize the Collapse plugin in a JavaScript bundle after installing via NPM.",
    "codeLanguage": "js",
    "codeTokens": 54,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/collapse.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js Collapse Plugin Documentation",
    "codeList": [
      {
        "language": "js",
        "code": "import Alpine from 'alpinejs'\nimport collapse from '@alpinejs/collapse'\n\nAlpine.plugin(collapse)\n\n..."
      }
    ],
    "relevance": 0.78
  },
  {
    "codeTitle": "Creating Alpine.js Plugin via Script Tag",
    "codeDescription": "Shows how to create and include an Alpine.js plugin using a script tag approach, demonstrating proper script loading order and event handling.",
    "codeLanguage": "html",
    "codeTokens": 93,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/extending.md#2025-04-11_snippet_12",
    "pageTitle": "Extending Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<html>\n    <script src=\"/js/foo.js\" defer></script>\n    <script src=\"/js/alpine.js\" defer></script>\n\n    <div x-data x-init=\"$foo()\">\n        <span x-foo=\"'hello world'\">\n    </div>\n</html>"
      },
      {
        "language": "js",
        "code": "document.addEventListener('alpine:init', () => {\n    window.Alpine.directive('foo', ...)\n\n    window.Alpine.magic('foo', ...)\n})"
      }
    ],
    "relevance": 0.78
  },
  {
    "codeTitle": "Installing Alpine.js Focus Plugin via NPM",
    "codeDescription": "Demonstrates how to install the Focus plugin using NPM and initialize it in a JavaScript bundle.",
    "codeLanguage": "shell",
    "codeTokens": 38,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/focus.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js Focus Plugin Documentation",
    "codeList": [
      {
        "language": "shell",
        "code": "npm install @alpinejs/focus"
      },
      {
        "language": "javascript",
        "code": "import Alpine from 'alpinejs'\nimport focus from '@alpinejs/focus'\n\nAlpine.plugin(focus)\n\n..."
      }
    ],
    "relevance": 0.775
  },
  {
    "codeTitle": "Installing Alpine.js Intersect Plugin via NPM",
    "codeDescription": "Instructions for installing the Intersect plugin using NPM and initializing it in a JavaScript bundle.",
    "codeLanguage": "shell",
    "codeTokens": 38,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/intersect.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js Intersect Plugin Documentation",
    "codeList": [
      {
        "language": "shell",
        "code": "npm install @alpinejs/intersect"
      },
      {
        "language": "js",
        "code": "import Alpine from 'alpinejs'\nimport intersect from '@alpinejs/intersect'\n\nAlpine.plugin(intersect)\n\n..."
      }
    ],
    "relevance": 0.775
  },
  {
    "codeTitle": "Using sessionStorage for Persistence in Alpine.js",
    "codeDescription": "Example showing how to use the .using() modifier to store persisted data in sessionStorage instead of the default localStorage.",
    "codeLanguage": "alpine",
    "codeTokens": 79,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/persist.md#2025-04-11_snippet_5",
    "pageTitle": "Alpine.js Persist Plugin Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ count: $persist(0).using(sessionStorage) }\">\n    <button x-on:click=\"count++\">Increment</button>\n\n    <span x-text=\"count\"></span>\n</div>"
      }
    ],
    "relevance": 0.775
  },
  {
    "codeTitle": "Using Custom Keys for Persisted Values in Alpine.js",
    "codeDescription": "Example of using the .as() modifier to set a custom storage key for a persisted value, allowing for multiple components with the same property name.",
    "codeLanguage": "alpine",
    "codeTokens": 87,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/persist.md#2025-04-11_snippet_4",
    "pageTitle": "Alpine.js Persist Plugin Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{ count: $persist(0).as('other-count') }\">\n    <button x-on:click=\"count++\">Increment</button>\n\n    <span x-text=\"count\"></span>\n</div>"
      }
    ],
    "relevance": 0.775
  },
  {
    "codeTitle": "Installing Alpine.js Focus Plugin via CDN",
    "codeDescription": "Shows how to include the Alpine.js Focus plugin using a CDN script tag, ensuring it's loaded before Alpine's core JS file.",
    "codeLanguage": "html",
    "codeTokens": 98,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/focus.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js Focus Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<!-- Alpine Plugins -->\n<script defer src=\"https://cdn.jsdelivr.net/npm/@alpinejs/focus@3.x.x/dist/cdn.min.js\"></script>\n\n<!-- Alpine Core -->\n<script defer src=\"https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js\"></script>"
      }
    ],
    "relevance": 0.775
  },
  {
    "codeTitle": "Initializing Alpine.js Morph Plugin",
    "codeDescription": "JavaScript code to initialize the Morph plugin after installing via NPM",
    "codeLanguage": "javascript",
    "codeTokens": 54,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/morph.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js Morph Plugin Documentation",
    "codeList": [
      {
        "language": "javascript",
        "code": "import Alpine from 'alpinejs'\nimport morph from '@alpinejs/morph'\n\nwindow.Alpine = Alpine\nAlpine.plugin(morph)\n\n..."
      }
    ],
    "relevance": 0.77
  },
  {
    "codeTitle": "Defining Synchronous Function in JavaScript",
    "codeDescription": "This snippet shows a simple synchronous function that returns a string. It's used as an example of a basic function that works with Alpine's x-text directive.",
    "codeLanguage": "js",
    "codeTokens": 55,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/async.md#2025-04-11_snippet_0",
    "pageTitle": "Asynchronous Functions in Alpine.js",
    "codeList": [
      {
        "language": "js",
        "code": "function getLabel() {\n    return 'Hello World!'\n}"
      }
    ],
    "relevance": 0.77
  },
  {
    "codeTitle": "Auto-evaluating init() Functions in Alpine.js V3",
    "codeDescription": "Shows how Alpine.js V3 automatically calls init() methods on data objects without requiring an explicit x-init directive.",
    "codeLanguage": "alpine",
    "codeTokens": 97,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/upgrade-guide.md#2025-04-11_snippet_1",
    "pageTitle": "Upgrading from Alpine.js V2 to V3",
    "codeList": [
      {
        "language": "alpine",
        "code": "<!-- 🚫 Before -->\n<div x-data=\"foo()\" x-init=\"init()\"></div>\n\n<!-- ✅ After -->\n<div x-data=\"foo()\"></div>\n\n<script>\n    function foo() {\n        return {\n            init() {\n                //\n            }\n        }\n    }\n</script>"
      }
    ],
    "relevance": 0.77
  },
  {
    "codeTitle": "Manual Styling of Anchored Elements in Alpine.js",
    "codeDescription": "This snippet demonstrates how to manually style an anchored element using the .no-style modifier and $anchor magic in Alpine.js.",
    "codeLanguage": "html",
    "codeTokens": 126,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/anchor.md#2025-04-11_snippet_5",
    "pageTitle": "Alpine.js Anchor Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<div x-data=\"{ open: false }\">\n    <button x-ref=\"button\" @click=\"open = ! open\">Toggle</button>\n\n    <div\n        x-show=\"open\"\n        x-anchor.no-style=\"$refs.button\"\n        x-bind:style=\"{ position: 'absolute', top: $anchor.y+'px', left: $anchor.x+'px' }\"\n    >\n        Dropdown content\n    </div>\n</div>"
      }
    ],
    "relevance": 0.77
  },
  {
    "codeTitle": "Installing Alpine.js Intersect Plugin via CDN",
    "codeDescription": "Instructions for including the Intersect plugin and Alpine.js core via CDN. The plugin script must be included before the core Alpine.js script.",
    "codeLanguage": "html",
    "codeTokens": 100,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/intersect.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js Intersect Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<!-- Alpine Plugins -->\n<script defer src=\"https://cdn.jsdelivr.net/npm/@alpinejs/intersect@3.x.x/dist/cdn.min.js\"></script>\n\n<!-- Alpine Core -->\n<script defer src=\"https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js\"></script>"
      }
    ],
    "relevance": 0.77
  },
  {
    "codeTitle": "Installing Alpine.js CSP Build via NPM",
    "codeDescription": "Shows how to install the CSP-friendly build of Alpine.js using NPM.",
    "codeLanguage": "shell",
    "codeTokens": 40,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/csp.md#2025-04-11_snippet_1",
    "pageTitle": "CSP (Content-Security Policy) Build for Alpine.js",
    "codeList": [
      {
        "language": "shell",
        "code": "npm install @alpinejs/csp"
      }
    ],
    "relevance": 0.765
  },
  {
    "codeTitle": "Using Asynchronous Function in Alpine.js x-text Directive",
    "codeDescription": "This Alpine.js snippet demonstrates how to use an asynchronous function within an x-text directive. It uses the await keyword to handle the Promise returned by the async function.",
    "codeLanguage": "alpine",
    "codeTokens": 56,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/async.md#2025-04-11_snippet_3",
    "pageTitle": "Asynchronous Functions in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<span x-text=\"await getLabel()\"></span>"
      }
    ],
    "relevance": 0.765
  },
  {
    "codeTitle": "Registering Alpine.js Extensions via NPM Module",
    "codeDescription": "Example showing how to register Alpine.js extensions when importing Alpine via NPM. Extensions must be registered between import and initialization.",
    "codeLanguage": "js",
    "codeTokens": 61,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/extending.md#2025-04-11_snippet_2",
    "pageTitle": "Extending Alpine.js",
    "codeList": [
      {
        "language": "js",
        "code": "import Alpine from 'alpinejs'\n\nAlpine.directive('foo', ...)\n\nwindow.Alpine = Alpine\nwindow.Alpine.start()"
      }
    ],
    "relevance": 0.765
  },
  {
    "codeTitle": "Using .dot Modifier in Alpine.js",
    "codeDescription": "Demonstrates the .dot modifier which allows listening for events with dots in their names. Since dots are reserved in Alpine, this modifier converts dashes to dots in the event name.",
    "codeLanguage": "alpine",
    "codeTokens": 62,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/on.md#2025-04-11_snippet_19",
    "pageTitle": "Alpine.js Event Handling Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div @custom-event.dot=\"handleCustomEvent\">\n    ...\n</div>"
      }
    ],
    "relevance": 0.765
  },
  {
    "codeTitle": "Installing Alpine Mask Plugin via CDN",
    "codeDescription": "Loading the Alpine.js Mask plugin and core library through CDN script tags. The mask plugin must be loaded before the Alpine core script.",
    "codeLanguage": "html",
    "codeTokens": 98,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/mask.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js Mask Plugin Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<!-- Alpine Plugins -->\n<script defer src=\"https://cdn.jsdelivr.net/npm/@alpinejs/mask@3.x.x/dist/cdn.min.js\"></script>\n\n<!-- Alpine Core -->\n<script defer src=\"https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js\"></script>"
      }
    ],
    "relevance": 0.765
  },
  {
    "codeTitle": "Installing Alpine.js Collapse Plugin via NPM",
    "codeDescription": "Command to install the Collapse plugin from NPM for use in a JavaScript bundle.",
    "codeLanguage": "shell",
    "codeTokens": 35,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/collapse.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js Collapse Plugin Documentation",
    "codeList": [
      {
        "language": "shell",
        "code": "npm install @alpinejs/collapse"
      }
    ],
    "relevance": 0.76
  },
  {
    "codeTitle": "Anchoring to an Element by ID in Alpine.js",
    "codeDescription": "This example shows how to anchor an element to another element using its ID with document.getElementById() in Alpine.js.",
    "codeLanguage": "html",
    "codeTokens": 90,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/anchor.md#2025-04-11_snippet_6",
    "pageTitle": "Alpine.js Anchor Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<div x-data=\"{ open: false }\">\n    <button id=\"trigger\" @click=\"open = ! open\">Toggle</button>\n\n    <div x-show=\"open\" x-anchor=\"document.getElementById('trigger')\">\n        Dropdown content\n    </div>\n</div>"
      }
    ],
    "relevance": 0.76
  },
  {
    "codeTitle": "Explicitly Using preventDefault in Event Handlers",
    "codeDescription": "Demonstrates how to explicitly use preventDefault on events instead of relying on returning false from event handlers.",
    "codeLanguage": "alpine",
    "codeTokens": 108,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/upgrade-guide.md#2025-04-11_snippet_7",
    "pageTitle": "Upgrading from Alpine.js V2 to V3",
    "codeList": [
      {
        "language": "alpine",
        "code": "<!-- 🚫 Before -->\n<div x-data=\"{ blockInput() { return false } }\">\n    <input type=\"text\" @input=\"blockInput()\">\n</div>\n\n<!-- ✅ After -->\n<div x-data=\"{ blockInput(e) { e.preventDefault() }\">\n    <input type=\"text\" @input=\"blockInput($event)\">\n</div>"
      }
    ],
    "relevance": 0.76
  },
  {
    "codeTitle": "Importing and Initializing Alpine.js Persist in JavaScript Bundle",
    "codeDescription": "JavaScript code to import the Alpine.js Persist plugin, register it with Alpine, and initialize it within a bundle environment.",
    "codeLanguage": "js",
    "codeTokens": 59,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/persist.md#2025-04-11_snippet_2",
    "pageTitle": "Alpine.js Persist Plugin Documentation",
    "codeList": [
      {
        "language": "js",
        "code": "import Alpine from 'alpinejs'\nimport persist from '@alpinejs/persist'\n\nAlpine.plugin(persist)\n\n..."
      }
    ],
    "relevance": 0.76
  },
  {
    "codeTitle": "Installing Alpine.js Persist Plugin via CDN",
    "codeDescription": "HTML script tags to include the Alpine.js Persist plugin from CDN. The plugin script must be included before Alpine's core JS file.",
    "codeLanguage": "alpine",
    "codeTokens": 98,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/persist.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js Persist Plugin Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<!-- Alpine Plugins -->\n<script defer src=\"https://cdn.jsdelivr.net/npm/@alpinejs/persist@3.x.x/dist/cdn.min.js\"></script>\n\n<!-- Alpine Core -->\n<script defer src=\"https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js\"></script>"
      }
    ],
    "relevance": 0.76
  },
  {
    "codeTitle": "Alternative template-based approach",
    "codeDescription": "Alternative method using template tag and x-if directive to achieve similar functionality without global CSS",
    "codeLanguage": "alpine",
    "codeTokens": 51,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/cloak.md#2025-04-11_snippet_3",
    "pageTitle": "Using x-cloak directive in Alpine.js",
    "codeList": [
      {
        "language": "alpine",
        "code": "<template x-if=\"true\">\n    <span x-text=\"message\"></span>\n</template>"
      }
    ],
    "relevance": 0.755
  },
  {
    "codeTitle": "Limited x-ref Support for Dynamic Elements in Alpine.js V3",
    "codeDescription": "Demonstrates how x-ref behavior has changed in V3, where dynamically created elements with x-ref are no longer accessible.",
    "codeLanguage": "alpine",
    "codeTokens": 149,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/upgrade-guide.md#2025-04-11_snippet_10",
    "pageTitle": "Upgrading from Alpine.js V2 to V3",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{options: [{value: 1}, {value: 2}, {value: 3}] }\">\n    <div x-ref=\"0\">0</div>\n    <template x-for=\"option in options\">\n        <div :x-ref=\"option.value\" x-text=\"option.value\"></div>\n    </template>\n\n    <button @click=\"console.log($refs[0], $refs[1], $refs[2], $refs[3]);\">Display $refs</button>\n</div>"
      }
    ],
    "relevance": 0.755
  },
  {
    "codeTitle": "Fixing CSS Hover Bug in Alpine.js Sort Plugin",
    "codeDescription": "Demonstrates a workaround for the CSS hover bug in Chrome and Safari using Tailwind's arbitrary variants.",
    "codeLanguage": "html",
    "codeTokens": 105,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/sort.md#2025-04-11_snippet_8",
    "pageTitle": "Alpine.js Sort Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<div x-sort>\n    <div x-sort:item class=\"[body:not(.sorting)_&]:hover:border\">foo</div>\n    <div x-sort:item class=\"[body:not(.sorting)_&]:hover:border\">bar</div>\n    <div x-sort:item class=\"[body:not(.sorting)_&]:hover:border\">baz</div>\n</div>"
      }
    ],
    "relevance": 0.755
  },
  {
    "codeTitle": "Using $persist with Alpine.data in Alpine.js",
    "codeDescription": "JavaScript code showing how to properly use $persist within an Alpine.data function using a standard function instead of an arrow function.",
    "codeLanguage": "js",
    "codeTokens": 57,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/persist.md#2025-04-11_snippet_7",
    "pageTitle": "Alpine.js Persist Plugin Documentation",
    "codeList": [
      {
        "language": "js",
        "code": "Alpine.data('dropdown', function () {\n    return {\n        open: this.$persist(false)\n    }\n})"
      }
    ],
    "relevance": 0.755
  },
  {
    "codeTitle": "Installing Alpine Mask Plugin via NPM",
    "codeDescription": "Command to install the Alpine.js Mask plugin through NPM package manager.",
    "codeLanguage": "shell",
    "codeTokens": 33,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/mask.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js Mask Plugin Documentation",
    "codeList": [
      {
        "language": "shell",
        "code": "npm install @alpinejs/mask"
      }
    ],
    "relevance": 0.755
  },
  {
    "codeTitle": "Running Tests for Alpine.js",
    "codeDescription": "Commands for running various tests in the Alpine.js project, including Cypress for integration tests and Jest for unit tests.",
    "codeLanguage": "markdown",
    "codeTokens": 132,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/README.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js Project Overview and Contribution Guide",
    "codeList": [
      {
        "language": "markdown",
        "code": "You can run them both from the command line using: `npm run test`\n\nIf you wish to only run cypress and open it's user interface (recommended during development), you can run: `npm run cypress`\n\nIf you wish to only run Jest tests, you can run `npm run jest` like normal and target specific tests. You can specify command line config options to forward to the jest command with `--` like so: `npm run jest -- --watch`"
      }
    ],
    "relevance": 0.75
  },
  {
    "codeTitle": "Invalid Inline Component with Alpine.js CSP Build",
    "codeDescription": "An example of an invalid approach when using Alpine.js CSP build, showing inline component declaration which is not supported in CSP mode.",
    "codeLanguage": "html",
    "codeTokens": 81,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/csp.md#2025-04-11_snippet_4",
    "pageTitle": "CSP (Content-Security Policy) Build for Alpine.js",
    "codeList": [
      {
        "language": "html",
        "code": "<!-- Bad -->\n<div x-data=\"{ count: 1 }\">\n    <button @click=\"count++\">Increment</button>\n\n    <span x-text=\"count\"></span>\n</div>"
      }
    ],
    "relevance": 0.75
  },
  {
    "codeTitle": "Installing Alpine.js Resize Plugin via CDN",
    "codeDescription": "This snippet shows how to include the Resize plugin and Alpine.js core via CDN script tags. The Resize plugin script must be included before the Alpine.js core script.",
    "codeLanguage": "html",
    "codeTokens": 104,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/resize.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js Resize Plugin Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<!-- Alpine Plugins -->\n<script defer src=\"https://cdn.jsdelivr.net/npm/@alpinejs/resize@3.x.x/dist/cdn.min.js\"></script>\n\n<!-- Alpine Core -->\n<script defer src=\"https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js\"></script>"
      }
    ],
    "relevance": 0.75
  },
  {
    "codeTitle": "Money Input Formatting Examples",
    "codeDescription": "Various examples of using the built-in $money formatter with different separators and precision settings.",
    "codeLanguage": "html",
    "codeTokens": 39,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/mask.md#2025-04-11_snippet_6",
    "pageTitle": "Alpine.js Mask Plugin Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<input x-mask:dynamic=\"$money($input)\">"
      },
      {
        "language": "alpine",
        "code": "<input x-mask:dynamic=\"$money($input, ',')\">"
      },
      {
        "language": "alpine",
        "code": "<input x-mask:dynamic=\"$money($input, '.', ' ')\">"
      },
      {
        "language": "alpine",
        "code": "<input x-mask:dynamic=\"$money($input, '.', ',', 4)\">"
      }
    ],
    "relevance": 0.75
  },
  {
    "codeTitle": "Installing Alpine.js Sort Plugin via NPM",
    "codeDescription": "Shows how to install the Sort plugin using NPM and initialize it in a JavaScript bundle.",
    "codeLanguage": "shell",
    "codeTokens": 37,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/sort.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js Sort Plugin Documentation",
    "codeList": [
      {
        "language": "shell",
        "code": "npm install @alpinejs/sort"
      },
      {
        "language": "javascript",
        "code": "import Alpine from 'alpinejs'\nimport sort from '@alpinejs/sort'\n\nAlpine.plugin(sort)\n\n..."
      }
    ],
    "relevance": 0.75
  },
  {
    "codeTitle": "Installing Dependencies and Building Alpine.js",
    "codeDescription": "Commands for setting up the Alpine.js project locally, including installing dependencies and building the project.",
    "codeLanguage": "markdown",
    "codeTokens": 79,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/README.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js Project Overview and Contribution Guide",
    "codeList": [
      {
        "language": "markdown",
        "code": "* clone this repo locally\n* run `npm install` & `npm run build`\n* Include the `/packages/alpinejs/dist/cdn.js` file from a `<script>` tag on a webpage and you're good to go!"
      }
    ],
    "relevance": 0.745
  },
  {
    "codeTitle": "Installing Alpine.js Resize Plugin via NPM",
    "codeDescription": "This snippet demonstrates how to install the Resize plugin using NPM and initialize it in a JavaScript bundle.",
    "codeLanguage": "shell",
    "codeTokens": 39,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/resize.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js Resize Plugin Documentation",
    "codeList": [
      {
        "language": "shell",
        "code": "npm install @alpinejs/resize"
      },
      {
        "language": "javascript",
        "code": "import Alpine from 'alpinejs'\nimport resize from '@alpinejs/resize'\n\nAlpine.plugin(resize)\n\n..."
      }
    ],
    "relevance": 0.745
  },
  {
    "codeTitle": "Initializing Alpine.js CSP Build in JavaScript",
    "codeDescription": "Demonstrates how to initialize the CSP build of Alpine.js after importing it from an NPM package.",
    "codeLanguage": "javascript",
    "codeTokens": 57,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/csp.md#2025-04-11_snippet_2",
    "pageTitle": "CSP (Content-Security Policy) Build for Alpine.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "import Alpine from '@alpinejs/csp'\n\nwindow.Alpine = Alpine\n\nAlpine.start()"
      }
    ],
    "relevance": 0.745
  },
  {
    "codeTitle": "Installing Alpine.js Morph via NPM",
    "codeDescription": "Command to install the Morph plugin via NPM package manager",
    "codeLanguage": "shell",
    "codeTokens": 30,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/morph.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js Morph Plugin Documentation",
    "codeList": [
      {
        "language": "shell",
        "code": "npm install @alpinejs/morph"
      }
    ],
    "relevance": 0.745
  },
  {
    "codeTitle": "Installing Alpine.js Persist Plugin via NPM",
    "codeDescription": "Shell command to install the Alpine.js Persist plugin from NPM for use in a JavaScript bundle.",
    "codeLanguage": "shell",
    "codeTokens": 38,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/plugins/persist.md#2025-04-11_snippet_1",
    "pageTitle": "Alpine.js Persist Plugin Documentation",
    "codeList": [
      {
        "language": "shell",
        "code": "npm install @alpinejs/persist"
      }
    ],
    "relevance": 0.74
  },
  {
    "codeTitle": "Avoiding Infinite Loops in $watch Callbacks in Alpine.js",
    "codeDescription": "Shows an example of how not to use $watch, as changing a property of a watched object within the callback can lead to an infinite loop and eventual error.",
    "codeLanguage": "html",
    "codeTokens": 105,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics/watch.md#2025-04-11_snippet_4",
    "pageTitle": "Alpine.js $watch Magic Method",
    "codeList": [
      {
        "language": "html",
        "code": "<!-- 🚫 Infinite loop -->\n<div x-data=\"{ foo: { bar: 'baz', bob: 'lob' }}\" x-init=\"$watch('foo', value => foo.bob = foo.bar)\">\n    <button @click=\"foo.bar = 'bob'\">Update</button>\n</div>"
      }
    ],
    "relevance": 0.74
  },
  {
    "codeTitle": "Defining Magic Properties Section in Alpine.js Documentation",
    "codeDescription": "This YAML front matter defines the structure and metadata for the Magic Properties section in the Alpine.js documentation. It sets the order, title, prefix, font type, and categorization of the section.",
    "codeLanguage": "yaml",
    "codeTokens": 75,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/magics.md#2025-04-11_snippet_0",
    "pageTitle": "Alpine.js Magic Properties Documentation",
    "codeList": [
      {
        "language": "yaml",
        "code": "---\norder: 5\ntitle: Magics\nprefix: $\nfont-type: mono\ntype: sub-directory\n---"
      }
    ],
    "relevance": 0.74
  },
  {
    "codeTitle": "Installing Alpine.js CSP Build via CDN",
    "codeDescription": "Shows how to include the CSP-friendly build of Alpine.js via a CDN script tag.",
    "codeLanguage": "html",
    "codeTokens": 69,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/csp.md#2025-04-11_snippet_0",
    "pageTitle": "CSP (Content-Security Policy) Build for Alpine.js",
    "codeList": [
      {
        "language": "html",
        "code": "<!-- Alpine's CSP-friendly Core -->\n<script defer src=\"https://cdn.jsdelivr.net/npm/@alpinejs/csp@3.x.x/dist/cdn.min.js\"></script>"
      }
    ],
    "relevance": 0.735
  },
  {
    "codeTitle": "Component Destruction Example with x-if",
    "codeDescription": "Shows how components are destroyed when removed from the DOM using x-if. This demonstrates when the destroy lifecycle method would be called in a practical scenario.",
    "codeLanguage": "html",
    "codeTokens": 94,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/globals/alpine-data.md#2025-04-11_snippet_6",
    "pageTitle": "Alpine.data Documentation",
    "codeList": [
      {
        "language": "html",
        "code": "<span x-data=\"{ enabled: false }\">\n    <button @click.prevent=\"enabled = !enabled\">Toggle</button>\n\n    <template x-if=\"enabled\">\n        <span x-data=\"timer\" x-text=\"counter\"></span>\n    </template>\n</span>"
      }
    ],
    "relevance": 0.625
  },
  {
    "codeTitle": "Using JavaScript Getters in Alpine.js Components",
    "codeDescription": "Demonstrates the use of JavaScript getters within Alpine.js components to create computed-like properties. The example refactors a component to use an isOpen getter instead of directly accessing state.",
    "codeLanguage": "alpine",
    "codeTokens": 109,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/data.md#2025-04-11_snippet_4",
    "pageTitle": "Alpine.js x-data Directive Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<div x-data=\"{\n    open: false,\n    get isOpen() { return this.open },\n    toggle() { this.open = ! this.open },\n}\">\n    <button @click=\"toggle()\">Toggle Content</button>\n\n    <div x-show=\"isOpen\">\n        Content...\n    </div>\n</div>"
      }
    ],
    "relevance": 0.619
  },
  {
    "codeTitle": "Valid Component Registration with Alpine.js CSP Build (JavaScript)",
    "codeDescription": "Demonstrates how to properly register a component's data and methods using Alpine.data() for use with the CSP build.",
    "codeLanguage": "javascript",
    "codeTokens": 65,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/csp.md#2025-04-11_snippet_6",
    "pageTitle": "CSP (Content-Security Policy) Build for Alpine.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "Alpine.data('counter', () => ({\n    count: 1,\n\n    increment() {\n        this.count++\n    },\n}))"
      }
    ],
    "relevance": 0.601
  },
  {
    "codeTitle": "Simplified Method Calling in Alpine.js",
    "codeDescription": "Shows how method calls in Alpine.js event handlers can be written without parentheses for a cleaner syntax, comparing before and after examples.",
    "codeLanguage": "alpine",
    "codeTokens": 61,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/directives/data.md#2025-04-11_snippet_3",
    "pageTitle": "Alpine.js x-data Directive Documentation",
    "codeList": [
      {
        "language": "alpine",
        "code": "<!-- Before -->\n<button @click=\"toggle()\">...</button>\n\n<!-- After -->\n<button @click=\"toggle\">...</button>"
      }
    ],
    "relevance": 0.599
  },
  {
    "codeTitle": "Accessing Nested Properties with Alpine.js CSP Build (HTML)",
    "codeDescription": "Shows how to access nested properties and methods using dot notation in Alpine.js CSP build.",
    "codeLanguage": "html",
    "codeTokens": 72,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/csp.md#2025-04-11_snippet_7",
    "pageTitle": "CSP (Content-Security Policy) Build for Alpine.js",
    "codeList": [
      {
        "language": "html",
        "code": "<!-- This works too -->\n<div x-data=\"counter\">\n    <button @click=\"foo.increment\">Increment</button>\n\n    <span x-text=\"foo.count\"></span>\n</div>"
      }
    ],
    "relevance": 0.592
  },
  {
    "codeTitle": "Registering Components with Nested Properties for Alpine.js CSP Build",
    "codeDescription": "Shows how to register Alpine.js components with nested properties and methods for use with the CSP build.",
    "codeLanguage": "javascript",
    "codeTokens": 67,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/csp.md#2025-04-11_snippet_8",
    "pageTitle": "CSP (Content-Security Policy) Build for Alpine.js",
    "codeList": [
      {
        "language": "javascript",
        "code": "Alpine.data('counter', () => ({\n    foo: {\n        count: 1,\n\n        increment() {\n            this.count++\n        },\n    },\n}))"
      }
    ],
    "relevance": 0.587
  },
  {
    "codeTitle": "Creating Clipboard Magic Function in Alpine.js",
    "codeDescription": "Implements a $clipboard magic function that copies provided text to the system clipboard using the Navigator API.",
    "codeLanguage": "js",
    "codeTokens": 49,
    "codeId": "https://github.com/alpinejs/alpine/blob/main/packages/docs/src/en/advanced/extending.md#2025-04-11_snippet_11",
    "pageTitle": "Extending Alpine.js",
    "codeList": [
      {
        "language": "js",
        "code": "Alpine.magic('clipboard', () => {\n    return subject => navigator.clipboard.writeText(subject)\n})"
      },
      {
        "language": "alpine",
        "code": "<button @click=\"$clipboard('hello world')\">Copy \"Hello World\"</button>"
      },
      {
        "language": "js",
        "code": "Alpine.magic('clipboard', () => subject => {\n    navigator.clipboard.writeText(subject)\n})"
      }
    ],
    "relevance": 0.571
  }
]